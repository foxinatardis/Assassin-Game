{"version":3,"sources":["webpack:///app.0fe5d4aa55f182c30f33.js","webpack:///./app/main.ts","webpack:///./app/app.module.ts","webpack:///./~/@angular/forms/bundles/forms.umd.js","webpack:///./app/app-routing.module.ts","webpack:///./app/auth.service.ts","webpack:///./app/login.component.ts","webpack:///./app/api.service.ts","webpack:///./app/game-selection.component.ts","webpack:///./app/waiting-room.component.ts","webpack:///./app/geo.service.ts","webpack:///./~/socket.io-client/lib/index.js","webpack:///./~/socket.io-client/lib/url.js","webpack:///./~/parseuri/index.js","webpack:///./~/debug/browser.js","webpack:///./~/debug/debug.js","webpack:///./~/ms/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/index.js","webpack:///./~/socket.io-client/~/json3/lib/json3.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./~/socket.io-client/~/socket.io-parser/~/component-emitter/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/binary.js","webpack:///./~/socket.io-client/~/isarray/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/is-buffer.js","webpack:///./~/socket.io-client/lib/manager.js","webpack:///./~/engine.io-client/index.js","webpack:///./~/engine.io-client/lib/index.js","webpack:///./~/engine.io-client/lib/socket.js","webpack:///./~/engine.io-client/lib/transports/index.js","webpack:///./~/engine.io-client/lib/xmlhttprequest.js","webpack:///./~/has-cors/index.js","webpack:///./~/engine.io-client/lib/transports/polling-xhr.js","webpack:///./~/engine.io-client/lib/transports/polling.js","webpack:///./~/engine.io-client/lib/transport.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/browser.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/keys.js","webpack:///./~/engine.io-client/~/has-binary/index.js","webpack:///./~/arraybuffer.slice/index.js","webpack:///./~/after/index.js","webpack:///./~/wtf-8/wtf-8.js","webpack:///./~/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./~/blob/index.js","webpack:///./~/parseqs/index.js","webpack:///./~/component-inherit/index.js","webpack:///./~/yeast/index.js","webpack:///./~/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./~/engine.io-client/lib/transports/websocket.js","webpack:///./~/indexof/index.js","webpack:///./~/parsejson/index.js","webpack:///./~/socket.io-client/lib/socket.js","webpack:///./~/socket.io-client/~/component-emitter/index.js","webpack:///./~/to-array/index.js","webpack:///./~/socket.io-client/lib/on.js","webpack:///./~/component-bind/index.js","webpack:///./~/has-binary/index.js","webpack:///./~/backo2/index.js","webpack:///./app/in-game.component.ts","webpack:///./app/game-history.component.ts","webpack:///./app/profile.component.ts","webpack:///./app/options.component.ts","webpack:///./app/about.component.ts","webpack:///./app/app.component.ts"],"names":["webpackJsonp","0","module","exports","__webpack_require__","platform_browser_dynamic_1","app_module_1","platform","platformBrowserDynamic","bootstrapModule","AppModule","23","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","core_1","platform_browser_1","http_1","forms_1","app_routing_module_1","api_service_1","auth_service_1","geo_service_1","app_component_1","login_component_1","game_selection_component_1","waiting_room_component_1","in_game_component_1","game_history_component_1","profile_component_1","options_component_1","about_component_1","NgModule","imports","BrowserModule","HttpModule","FormsModule","AppRoutingModule","providers","ApiService","AuthService","GeoService","declarations","AppComponent","LoginComponent","GameSelectionComponent","WaitingRoomComponent","InGameComponent","GameHistoryComponent","ProfileComponent","OptionsComponent","AboutComponent","bootstrap","25","global","factory","_angular_core","rxjs_operator_toPromise","rxjs_Subject","rxjs_Observable","rxjs_observable_fromPromise","isPresent","obj","isBlank","looseIdentical","a","b","isNaN","isJsObject","o","isPrimitive","_flattenArray","source","item","Array","isArray","push","isEmptyInputValue","value","_convertToPromise","isPromise","toPromise","call","_executeValidators","control","validators","map","_executeAsyncValidators","_mergeErrors","arrayOfErrors","res","reduce","errors","StringMapWrapper","merge","keys","normalizeValidator","validator","undefined","validate","normalizeAsyncValidator","unimplemented","Error","_buildValueString","id","slice","_extractId","valueString","split","_buildValueString$1","_extractId$1","controlPath","name","parent","path","concat","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","writeValue","registerOnChange","newValue","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","registerOnTouched","markAsTouched","emitModelEvent","setDisabledState","registerOnDisabledChange","isDisabled","_rawValidators","forEach","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","setUpFormContainer","message","messageEnd","join","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","hasOwnProperty","change","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","some","constructor","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","DefaultValueAccessor","_find","delimiter","FormGroup","controls","FormArray","at","toObservable","fromPromise","coerceToValidator","coerceToAsyncValidator","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","AbstractControlDirective","prototype","get","enumerable","configurable","valid","invalid","pending","pristine","dirty","touched","untouched","disabled","enabled","statusChanges","valueChanges","reset","__extends$1","__extends","__","p","create","ControlContainer","_super","apply","_arrayFromMap","Map","values","next","m","getValues","from","e","size","MapWrapper","createFromStringMap","stringMap","result","prop","set","m1","m2","_i","_a","_b","_c","equals","k1","k2","ListWrapper","removeAll","list","items","index","indexOf","splice","remove","el","maximum","predicate","solution","maxValue","Infinity","candidate","candidateValue","flatten","__core_private__","NG_VALIDATORS","OpaqueToken","NG_ASYNC_VALIDATORS","required","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","regex","RegExp","test","requiredPattern","actualValue","nullValidator","presentValidators","filter","promises","Promise","all","then","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","forwardRef","CheckboxControlValueAccessor","multi","_renderer","_elementRef","onChange","_","onTouched","setElementProperty","nativeElement","fn","type","Directive","args","selector","host","(change)","(blur)","ctorParameters","Renderer","ElementRef","DEFAULT_VALUE_ACCESSOR","normalizedValue","(input)","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","parseFloat","__extends$2","NgControl","_parent","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","add","accessor","indexToRemove","select","_this","_isSameGroup","fireUncheck","controlPair","_control","Injectable","_registry","_injector","ngOnInit","_checkName","ngOnDestroy","_state","_fn","formControlName","_throwNameError","Injector","propDecorators","Input","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_optionMap","_idCounter","_getOptionId","_getOptionValue","_registerOption","toString","NgSelectOption","_element","_select","_setElementValue","delete","Optional","Host","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","ids","opt","_setSelected","selected","options","selectedOptions","val","_value","NgSelectMultipleOption","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","__extends$3","AbstractControlStatus","cd","_cd","ngControlStatusHost","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","NgControlStatus","Self","NgControlStatusGroup","__extends$5","EventEmitter","isAsync","__isAsync","emit","subscribe","generatorOrNext","error","complete","schedulerFn","errorFn","err","completeFn","setTimeout","Subject","__extends$6","VALID","INVALID","PENDING","DISABLED","AbstractControl","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","disable","emitEvent","_updateValue","_updateAncestors","changeFn","enable","setParent","_setInitialStatus","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_cancelExistingSubscription","obs","_asyncValidationSubscription","setErrors","unsubscribe","_updateControlsErrors","getError","errorCode","hasError","x","_initObservables","_anyControlsHaveStatus","status","_anyControls","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","FormControl","_onChange","_applyFormState","emitViewToModelChange","patchValue","condition","cb","_setUpControls","registerControl","addControl","removeControl","setControl","contains","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","_reduceValue","initValue","_registerControl","insert","removeAt","__extends$4","formDirectiveProvider","NgForm","resolvedPromise","resolve","asyncValidators","_submitted","ngSubmit","form","container","_findContainer","getControl","group","updateModel","onSubmit","$event","onReset","resetForm","pop","(submit)","(reset)","outputs","exportAs","Inject","Examples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","__extends$8","modelGroupProvider","NgModelGroup","SkipSelf","__extends$7","formControlBinding","NgModel","resolvedPromise$1","_registered","update","ngOnChanges","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","Output","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","console","warn","__extends$9","formControlBinding$1","FormControlDirective","_isControlChanged","__extends$11","formDirectiveProvider$1","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","async","__extends$12","formGroupNameProvider","formArrayNameProvider","__extends$10","controlNameBinding","FormControlName","_added","REQUIRED_VALIDATOR","RequiredValidator","_required","[attr.required]","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","_validator","parseInt","[attr.minlength]","MAX_LENGTH_VALIDATOR","MaxLengthValidator","[attr.maxlength]","PATTERN_VALIDATOR","PatternValidator","[attr.pattern]","FormBuilder","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","InternalFormsSharedModule","ReactiveFormsModule","29","router_1","routes","component","canActivate","authService","RouterModule","forRoot","60","router","user","route","state","navigate","Router","61","apiService","register","loginUser","username","email","password","registerError","newUser","sendRegistration","passwordVerify","postObs","sendLogin","loggedIn","userData","about","Component","template","styles","62","Observable_1","http","postHeaders","Headers","Content-Type","Accept","getHeaders","url","document","location","origin","getJSON","response","json","checkForError","statusText","getObs","headers","catch","Observable","throw","data","post","Http","359","start","gameCreated","gameJoined","errorMessage","createGame","gameId","currentGame","joinGame","success","enterGame","360","io","geoService","launchGame","socket","gameAdmin","players","toSend","postLocation","on","newPlayer","includes","log","disconnect","_d","361","positionOptions","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","getCurrentPosition","postPositionSuccess","bind","handlePositionError","getLocation","failure","pos","coor","coords","time","timestamp","longitude","latitude","accuracy","getPositionSuccess","code","362","lookup","uri","opts","parsed","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","debug","Manager","query","encodeQueryString","str","encodeURIComponent","parser","managers","protocol","connect","Socket","363","loc","charAt","parseuri","port","ipv6","href","364","re","parts","src","substring","replace","exec","authority","ipv6uri","365","useColors","documentElement","style","window","firebug","exception","table","userAgent","toLowerCase","match","$1","formatArgs","namespace","humanize","diff","color","lastC","Function","save","namespaces","storage","removeItem","load","localstorage","localStorage","chrome","local","colors","formatters","j","JSON","stringify","366","selectColor","prevColor","self","curr","Date","ms","prevTime","prev","coerce","format","formatter","logFn","len","skips","substr","names","stack","367","parse","n","y","h","s","short","Math","round","long","plural","floor","ceil","368","Encoder","encodeAsString","nsp","BINARY_EVENT","BINARY_ACK","attachments","encodeAsBinary","callback","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","packet","buffers","unshift","removeBlobs","Decoder","reconstructor","decodeString","Number","types","buf","tryParse","BinaryReconstructor","reconPack","ERROR","Emitter","isBuf","CONNECT","DISCONNECT","EVENT","ACK","encode","encoding","base64","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","369","__WEBPACK_AMD_DEFINE_RESULT__","runInContext","context","has","undef","isSupported","serialized","stringifySupported","isExtended","toJSON","String","getClass","parseSupported","root","SyntaxError","TypeError","nativeJSON","isProperty","objectProto","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","property","members","__proto__","original","object","Properties","valueOf","isFunction","isConstructor","hasProperty","objectTypes","Escapes","92","34","8","12","10","13","9","leadingZeroes","toPaddedString","width","unicodePrefix","quote","useCharIndex","symbols","charCode","charCodeAt","serialize","properties","whitespace","indentation","className","date","hours","minutes","seconds","milliseconds","results","element","prefix","Index","Source","fromCharCode","Unescapes","47","98","116","110","102","114","abort","lex","begin","position","isSigned","hasMembers","walk","isLoader","function","freeExports","nodeType","freeGlobal","previousJSON","isRestored","JSON3","noConflict","370","webpackPolyfill","deprecate","paths","children","371","__webpack_amd_options__","372","mixin","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","listeners","hasListeners","373","_deconstructPacket","placeholder","_placeholder","num","newData","packetData","_reconstructPacket","_removeBlobs","curKey","containingObject","Blob","File","pendingBlobs","fileReader","FileReader","onload","readAsArrayBuffer","374","arr","375","Buffer","isBuffer","ArrayBuffer","376","subs","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","readyState","connecting","lastPing","packetBuffer","encoder","decoder","autoConnect","open","eio","emitAll","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","close","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","encodedPackets","write","processPacketQueue","shift","subsLength","sub","onclose","reason","delay","duration","onreconnect","attempt","377","378","379","hostname","secure","agent","parseqs","decode","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","extraHeaders","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","parsejson","priorWebsocketSuccess","Transport","createTransport","EIO","transport","sid","setTransport","onDrain","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","msg","upgrading","pause","flush","freezeTransport","onTransportClose","onupgrade","to","onOpen","l","onHandshake","setPing","filterUpgrades","onHeartbeat","ping","sendPacket","writable","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","380","polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","381","hasCORS","XDomainRequest","382","383","empty","Polling","Request","method","isBinary","unloadHandler","requests","inherit","request","doWrite","req","sendXhr","doPoll","onData","pollXhr","setDisableHeaderCheck","setRequestHeader","responseType","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","requestsCount","onSuccess","fromError","contentType","getResponseHeader","Uint8Array","ui8Arr","dataArray","idx","attachEvent","384","hasXHR2","yeast","doOpen","poll","onPause","total","decodePayload","doClose","packets","callbackfn","encodePayload","schema","b64","385","description","decodePacket","386","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","byteLength","buffer","encodeBlobAsArrayBuffer","fr","encodePacket","encodeBlob","dontSendBlobs","blob","tryDecode","utf8","ary","each","done","after","eachWithIndex","base64encoder","hasBinary","sliceBuffer","isAndroid","isPhantomJS","pong","noop","packetslist","utf8encode","encoded","readAsDataURL","b64data","typed","basic","btoa","utf8decode","decodeBase64Packet","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","decodePayloadAsBinary","chr","ret","totalLength","resultArray","bufferIndex","isString","ab","view","lenStr","binaryIdentifier","lengthAry","bufferTail","numberTooLong","tailArray","msgLength","387","388","_hasBinary","389","390","arraybuffer","end","bytes","abv","ii","391","count","err_cb","proxy","bail","392","ucs2decode","string","output","counter","ucs2encode","stringFromCharCode","createByte","codePoint","encodeCodePoint","symbol","wtf8encode","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","wtf8decode","tmp","wtf8","version","393","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","394","mapArrayBufferViews","chunk","copy","byteOffset","BlobBuilderConstructor","bb","BlobBuilder","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","395","396","qs","qry","pairs","pair","decodeURIComponent","397","398","alphabet","decoded","now","seed","399","JSONPPolling","___eio","script","rNewline","rEscapedNewline","parentNode","removeChild","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","initIframe","html","iframeId","area","top","left","setAttribute","action","submit","400","WS","BrowserWebSocket","WebSocket","MozWebSocket","check","protocols","ws","supports","addEventListeners","onmessage","ev","401","402","403","rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight","404","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","parserType","flags","onpacket","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","405","406","407","408","409","410","411","factor","pow","rand","random","deviation","412","attacking","targetOnline","positionSuccess","positionErr","locationWatch","watchPosition","iMovedSuccess","locationInterval","setInterval","sendLocation","targetLat","targetLong","targetAcc","targetTime","score","rapidEmit","attackMessage","nextTarget","clearInterval","inGame","currentTarget","ngAfterViewChecked","compass","getElementById","compassWatch","Compass","watch","heading","transform","noSupport","unwatch","clearWatch","online","resolution","takeAim","targetName","trackerName","takingAim","attack","distance","distanceToTarget","joinData","lat","myLat","myLong","myTime","myAcc","hunterName","rapid","myHeading","getDistance","bearing","getBearing","toDraw","toDrawX","cos","rad","toDrawY","sin","PI","deg","mLong","mLat","tLong","tLat","R","dLat","dLong","atan2","sqrt","startLong","startLat","endLong","endLat","dPhi","tan","abs","413","games","gameIds","history","game","414","gameSelect","415","selectionMade","resultMessage","displayChangePassword","displayLeaveGame","oldPassword","newPassword","confirmPassword","displayOptions","changePassword","leaveGame","sendPassword","confirmLeaveGame","416","toLogin","417","logout"],"mappings":"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","file":"app.0fe5d4aa55f182c30f33.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\n\tvar app_module_1 = __webpack_require__(23);\n\tvar platform = platform_browser_dynamic_1.platformBrowserDynamic();\n\tplatform.bootstrapModule(app_module_1.AppModule);\n\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar http_1 = __webpack_require__(24);\n\tvar forms_1 = __webpack_require__(25);\n\tvar app_routing_module_1 = __webpack_require__(29);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar geo_service_1 = __webpack_require__(361);\n\tvar app_component_1 = __webpack_require__(417);\n\tvar login_component_1 = __webpack_require__(61);\n\tvar game_selection_component_1 = __webpack_require__(359);\n\tvar waiting_room_component_1 = __webpack_require__(360);\n\tvar in_game_component_1 = __webpack_require__(412);\n\tvar game_history_component_1 = __webpack_require__(413);\n\tvar profile_component_1 = __webpack_require__(414);\n\tvar options_component_1 = __webpack_require__(415);\n\tvar about_component_1 = __webpack_require__(416);\n\tvar AppModule = (function () {\n\t    function AppModule() {\n\t    }\n\t    AppModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [\n\t                platform_browser_1.BrowserModule,\n\t                http_1.HttpModule,\n\t                forms_1.FormsModule,\n\t                app_routing_module_1.AppRoutingModule\n\t            ],\n\t            providers: [\n\t                api_service_1.ApiService,\n\t                auth_service_1.AuthService,\n\t                geo_service_1.GeoService\n\t            ],\n\t            declarations: [\n\t                app_component_1.AppComponent,\n\t                login_component_1.LoginComponent,\n\t                game_selection_component_1.GameSelectionComponent,\n\t                waiting_room_component_1.WaitingRoomComponent,\n\t                in_game_component_1.InGameComponent,\n\t                game_history_component_1.GameHistoryComponent,\n\t                profile_component_1.ProfileComponent,\n\t                options_component_1.OptionsComponent,\n\t                about_component_1.AboutComponent\n\t            ],\n\t            bootstrap: [app_component_1.AppComponent]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AppModule);\n\t    return AppModule;\n\t}());\n\texports.AppModule = AppModule;\n\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.1.2\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(3), __webpack_require__(26), __webpack_require__(4), __webpack_require__(5), __webpack_require__(27)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n\t}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\t\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    // JS has NaN !== NaN\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    /**\n\t     * Base class for control directives.\n\t     *\n\t     * Only used internally in the forms module.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractControlDirective = (function () {\n\t        function AbstractControlDirective() {\n\t        }\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n\t            get: function () { throw new Error('unimplemented'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n\t            get: function () { return isPresent(this.control) ? this.control.value : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n\t            get: function () { return isPresent(this.control) ? this.control.valid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n\t            get: function () { return isPresent(this.control) ? this.control.invalid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n\t            get: function () { return isPresent(this.control) ? this.control.pending : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n\t            get: function () {\n\t                return isPresent(this.control) ? this.control.errors : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n\t            get: function () { return isPresent(this.control) ? this.control.pristine : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n\t            get: function () { return isPresent(this.control) ? this.control.dirty : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n\t            get: function () { return isPresent(this.control) ? this.control.touched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n\t            get: function () { return isPresent(this.control) ? this.control.untouched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n\t            get: function () { return isPresent(this.control) ? this.control.disabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n\t            get: function () { return isPresent(this.control) ? this.control.enabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n\t            get: function () {\n\t                return isPresent(this.control) ? this.control.statusChanges : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n\t            get: function () {\n\t                return isPresent(this.control) ? this.control.valueChanges : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AbstractControlDirective.prototype.reset = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            if (isPresent(this.control))\n\t                this.control.reset(value);\n\t        };\n\t        return AbstractControlDirective;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * A directive that contains multiple {@link NgControl}s.\n\t     *\n\t     * Only used by the forms module.\n\t     *\n\t     * @stable\n\t     */\n\t    var ControlContainer = (function (_super) {\n\t        __extends$1(ControlContainer, _super);\n\t        function ControlContainer() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n\t            /**\n\t             * Get the form to which this container belongs.\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ControlContainer.prototype, \"path\", {\n\t            /**\n\t             * Get the path to this container.\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ControlContainer;\n\t    }(AbstractControlDirective));\n\t\n\t    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n\t    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n\t    var _arrayFromMap = (function () {\n\t        try {\n\t            if ((new Map()).values().next) {\n\t                return function createArrayFromMap(m, getValues) {\n\t                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n\t                };\n\t            }\n\t        }\n\t        catch (e) {\n\t        }\n\t        return function createArrayFromMapWithForeach(m, getValues) {\n\t            var res = new Array(m.size), i = 0;\n\t            m.forEach(function (v, k) {\n\t                res[i] = getValues ? v : k;\n\t                i++;\n\t            });\n\t            return res;\n\t        };\n\t    })();\n\t    var MapWrapper = (function () {\n\t        function MapWrapper() {\n\t        }\n\t        MapWrapper.createFromStringMap = function (stringMap) {\n\t            var result = new Map();\n\t            for (var prop in stringMap) {\n\t                result.set(prop, stringMap[prop]);\n\t            }\n\t            return result;\n\t        };\n\t        MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n\t        MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n\t        return MapWrapper;\n\t    }());\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var k1 = Object.keys(m1);\n\t            var k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var i = 0; i < k1.length; i++) {\n\t                var key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var i = 0; i < items.length; ++i) {\n\t                var index = list.indexOf(items[i]);\n\t                list.splice(index, 1);\n\t            }\n\t        };\n\t        ListWrapper.remove = function (list, el) {\n\t            var index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        ListWrapper.maximum = function (list, predicate) {\n\t            if (list.length == 0) {\n\t                return null;\n\t            }\n\t            var solution = null;\n\t            var maxValue = -Infinity;\n\t            for (var index = 0; index < list.length; index++) {\n\t                var candidate = list[index];\n\t                if (candidate == null) {\n\t                    continue;\n\t                }\n\t                var candidateValue = predicate(candidate);\n\t                if (candidateValue > maxValue) {\n\t                    solution = candidate;\n\t                    maxValue = candidateValue;\n\t                }\n\t            }\n\t            return solution;\n\t        };\n\t        ListWrapper.flatten = function (list) {\n\t            var target = [];\n\t            _flattenArray(list, target);\n\t            return target;\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t    function _flattenArray(source, target) {\n\t        if (isPresent(source)) {\n\t            for (var i = 0; i < source.length; i++) {\n\t                var item = source[i];\n\t                if (Array.isArray(item)) {\n\t                    _flattenArray(item, target);\n\t                }\n\t                else {\n\t                    target.push(item);\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t\n\t    var isPromise = _angular_core.__core_private__.isPromise;\n\t\n\t    function isEmptyInputValue(value) {\n\t        return value == null || typeof value === 'string' && value.length === 0;\n\t    }\n\t    /**\n\t     * Providers for validators to be used for {@link FormControl}s in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n\t     * @stable\n\t     */\n\t    var NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n\t    /**\n\t     * Providers for asynchronous validators to be used for {@link FormControl}s\n\t     * in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * See {@link NG_VALIDATORS} for more details.\n\t     *\n\t     * @stable\n\t     */\n\t    var NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n\t    /**\n\t     * Provides a set of validators used by form controls.\n\t     *\n\t     * A validator is a function that processes a {@link FormControl} or collection of\n\t     * controls and returns a map of errors. A null map means that validation has passed.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * var loginControl = new FormControl(\"\", Validators.required)\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var Validators = (function () {\n\t        function Validators() {\n\t        }\n\t        /**\n\t         * Validator that requires controls to have a non-empty value.\n\t         */\n\t        Validators.required = function (control) {\n\t            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n\t        };\n\t        /**\n\t         * Validator that requires controls to have a value of a minimum length.\n\t         */\n\t        Validators.minLength = function (minLength) {\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var length = typeof control.value === 'string' ? control.value.length : 0;\n\t                return length < minLength ?\n\t                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         * Validator that requires controls to have a value of a maximum length.\n\t         */\n\t        Validators.maxLength = function (maxLength) {\n\t            return function (control) {\n\t                var length = typeof control.value === 'string' ? control.value.length : 0;\n\t                return length > maxLength ?\n\t                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         * Validator that requires a control to match a regex to its value.\n\t         */\n\t        Validators.pattern = function (pattern) {\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var regex = new RegExp(\"^\" + pattern + \"$\");\n\t                var value = control.value;\n\t                return regex.test(value) ?\n\t                    null :\n\t                    { 'pattern': { 'requiredPattern': \"^\" + pattern + \"$\", 'actualValue': value } };\n\t            };\n\t        };\n\t        /**\n\t         * No-op validator.\n\t         */\n\t        Validators.nullValidator = function (c) { return null; };\n\t        /**\n\t         * Compose multiple validators into a single function that returns the union\n\t         * of the individual error maps.\n\t         */\n\t        Validators.compose = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                return _mergeErrors(_executeValidators(control, presentValidators));\n\t            };\n\t        };\n\t        Validators.composeAsync = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n\t                return Promise.all(promises).then(_mergeErrors);\n\t            };\n\t        };\n\t        return Validators;\n\t    }());\n\t    function _convertToPromise(obj) {\n\t        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n\t    }\n\t    function _executeValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    function _executeAsyncValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    function _mergeErrors(arrayOfErrors) {\n\t        var res = arrayOfErrors.reduce(function (res, errors) {\n\t            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n\t        }, {});\n\t        return Object.keys(res).length === 0 ? null : res;\n\t    }\n\t\n\t    /**\n\t     * Used to provide a {@link ControlValueAccessor} for form controls.\n\t     *\n\t     * See {@link DefaultValueAccessor} for how to implement one.\n\t     * @stable\n\t     */\n\t    var NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\t\n\t    var CHECKBOX_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The accessor for writing a value and listening to changes on a checkbox input element.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n\t     *  ```\n\t     *\n\t     *  @stable\n\t     */\n\t    var CheckboxControlValueAccessor = (function () {\n\t        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n\t        };\n\t        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        CheckboxControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n\t                        providers: [CHECKBOX_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CheckboxControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return CheckboxControlValueAccessor;\n\t    }());\n\t\n\t    var DEFAULT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The default accessor for writing a value and listening to changes that is used by the\n\t     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n\t     *  ```\n\t     *\n\t     *  @stable\n\t     */\n\t    var DefaultValueAccessor = (function () {\n\t        function DefaultValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        DefaultValueAccessor.prototype.writeValue = function (value) {\n\t            var normalizedValue = isBlank(value) ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        DefaultValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n\t                        // TODO: vsavkin replace the above selector with the one below it once\n\t                        // https://github.com/angular/angular/issues/3011 is implemented\n\t                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n\t                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [DEFAULT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DefaultValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return DefaultValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    function normalizeValidator(validator) {\n\t        if (validator.validate !== undefined) {\n\t            return function (c) { return validator.validate(c); };\n\t        }\n\t        else {\n\t            return validator;\n\t        }\n\t    }\n\t    function normalizeAsyncValidator(validator) {\n\t        if (validator.validate !== undefined) {\n\t            return function (c) { return validator.validate(c); };\n\t        }\n\t        else {\n\t            return validator;\n\t        }\n\t    }\n\t\n\t    var NUMBER_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The accessor for writing a number value and listening to changes that is used by the\n\t     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"number\" [(ngModel)]=\"age\">\n\t     *  ```\n\t     */\n\t    var NumberValueAccessor = (function () {\n\t        function NumberValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        NumberValueAccessor.prototype.writeValue = function (value) {\n\t            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n\t            var normalizedValue = isBlank(value) ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        NumberValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [NUMBER_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NumberValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return NumberValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function unimplemented() {\n\t        throw new Error('unimplemented');\n\t    }\n\t    /**\n\t     * A base class that all control directive extend.\n\t     * It binds a {@link FormControl} object to a DOM element.\n\t     *\n\t     * Used internally by Angular forms.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControl = (function (_super) {\n\t        __extends$2(NgControl, _super);\n\t        function NgControl() {\n\t            _super.apply(this, arguments);\n\t            /** @internal */\n\t            this._parent = null;\n\t            this.name = null;\n\t            this.valueAccessor = null;\n\t            /** @internal */\n\t            this._rawValidators = [];\n\t            /** @internal */\n\t            this._rawAsyncValidators = [];\n\t        }\n\t        Object.defineProperty(NgControl.prototype, \"validator\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgControl;\n\t    }(AbstractControlDirective));\n\t\n\t    var RADIO_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * Internal class used by Angular to uncheck radio buttons with the matching name.\n\t     */\n\t    var RadioControlRegistry = (function () {\n\t        function RadioControlRegistry() {\n\t            this._accessors = [];\n\t        }\n\t        RadioControlRegistry.prototype.add = function (control, accessor) {\n\t            this._accessors.push([control, accessor]);\n\t        };\n\t        RadioControlRegistry.prototype.remove = function (accessor) {\n\t            var indexToRemove = -1;\n\t            for (var i = 0; i < this._accessors.length; ++i) {\n\t                if (this._accessors[i][1] === accessor) {\n\t                    indexToRemove = i;\n\t                }\n\t            }\n\t            this._accessors.splice(indexToRemove, 1);\n\t        };\n\t        RadioControlRegistry.prototype.select = function (accessor) {\n\t            var _this = this;\n\t            this._accessors.forEach(function (c) {\n\t                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n\t                    c[1].fireUncheck(accessor.value);\n\t                }\n\t            });\n\t        };\n\t        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n\t            if (!controlPair[0].control)\n\t                return false;\n\t            return controlPair[0]._parent === accessor._control._parent &&\n\t                controlPair[1].name === accessor.name;\n\t        };\n\t        RadioControlRegistry.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlRegistry.ctorParameters = [];\n\t        return RadioControlRegistry;\n\t    }());\n\t    /**\n\t     * @whatItDoes  Writes radio control values and listens to radio control changes.\n\t     *\n\t     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n\t     * to keep the view synced with the {@link FormControl} model.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n\t     * value accessor will be active on any radio control that has a form directive. You do\n\t     * **not** need to add a special selector to activate it.\n\t     *\n\t     * ### How to use radio buttons with form directives\n\t     *\n\t     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n\t     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n\t     * attributes do not affect each other.\n\t     *\n\t     * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n\t     *\n\t     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n\t     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n\t     *\n\t     * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n\t     *\n\t     *  * **npm package**: `@angular/forms`\n\t     *\n\t     *  @stable\n\t     */\n\t    var RadioControlValueAccessor = (function () {\n\t        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this._registry = _registry;\n\t            this._injector = _injector;\n\t            this.onChange = function () { };\n\t            this.onTouched = function () { };\n\t        }\n\t        RadioControlValueAccessor.prototype.ngOnInit = function () {\n\t            this._control = this._injector.get(NgControl);\n\t            this._checkName();\n\t            this._registry.add(this._control, this);\n\t        };\n\t        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n\t        RadioControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._state = value === this.value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n\t        };\n\t        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this._fn = fn;\n\t            this.onChange = function () {\n\t                fn(_this.value);\n\t                _this._registry.select(_this);\n\t            };\n\t        };\n\t        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n\t        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        RadioControlValueAccessor.prototype._checkName = function () {\n\t            if (this.name && this.formControlName && this.name !== this.formControlName) {\n\t                this._throwNameError();\n\t            }\n\t            if (!this.name && this.formControlName)\n\t                this.name = this.formControlName;\n\t        };\n\t        RadioControlValueAccessor.prototype._throwNameError = function () {\n\t            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n\t        };\n\t        RadioControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n\t                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n\t                        providers: [RADIO_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: RadioControlRegistry, },\n\t            { type: _angular_core.Injector, },\n\t        ];\n\t        RadioControlValueAccessor.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'formControlName': [{ type: _angular_core.Input },],\n\t            'value': [{ type: _angular_core.Input },],\n\t        };\n\t        return RadioControlValueAccessor;\n\t    }());\n\t\n\t    var SELECT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    function _buildValueString(id, value) {\n\t        if (isBlank(id))\n\t            return \"\" + value;\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    function _extractId(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     * @whatItDoes Writes values and listens to changes on a select element.\n\t     *\n\t     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n\t     * to keep the view synced with the {@link FormControl} model.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n\t     * value accessor will be active on any select control that has a form directive. You do\n\t     * **not** need to add a special selector to activate it.\n\t     *\n\t     * ### How to use select controls with form directives\n\t     *\n\t     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n\t     * attribute to the main `<select>` tag.\n\t     *\n\t     * If your option values are simple strings, you can bind to the normal `value` property\n\t     * on the option.  If your option values happen to be objects (and you'd like to save the\n\t     * selection in your form as an object), use `ngValue` instead:\n\t     *\n\t     * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n\t     *\n\t     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n\t     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n\t     * choice of binding to the  `value` or `ngValue` property on the select's options.\n\t     *\n\t     * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n\t     *\n\t     * Note: We listen to the 'change' event because 'input' events aren't fired\n\t     * for selects in Firefox and IE:\n\t     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n\t     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var SelectControlValueAccessor = (function () {\n\t        function SelectControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        SelectControlValueAccessor.prototype.writeValue = function (value) {\n\t            this.value = value;\n\t            var valueString = _buildValueString(this._getOptionId(value), value);\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n\t        };\n\t        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (valueString) {\n\t                _this.value = valueString;\n\t                fn(_this._getOptionValue(valueString));\n\t            };\n\t        };\n\t        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id), value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var value = this._optionMap.get(_extractId(valueString));\n\t            return isPresent(value) ? value : valueString;\n\t        };\n\t        SelectControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return SelectControlValueAccessor;\n\t    }());\n\t    /**\n\t     * @whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * See docs for {@link SelectControlValueAccessor} for usage examples.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSelectOption = (function () {\n\t        function NgSelectOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (isPresent(this._select))\n\t                this.id = this._select._registerOption();\n\t        }\n\t        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._select._optionMap.set(this.id, value);\n\t                this._setElementValue(_buildValueString(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n\t            set: function (value) {\n\t                this._setElementValue(value);\n\t                if (isPresent(this._select))\n\t                    this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        NgSelectOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        NgSelectOption.prototype.ngOnDestroy = function () {\n\t            if (isPresent(this._select)) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectOption.ctorParameters = [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ];\n\t        NgSelectOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectOption;\n\t    }());\n\t\n\t    var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    function _buildValueString$1(id, value) {\n\t        if (isBlank(id))\n\t            return \"\" + value;\n\t        if (typeof value === 'string')\n\t            value = \"'\" + value + \"'\";\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    function _extractId$1(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     * The accessor for writing a value and listening to changes on a select element.\n\t     *\n\t     * @stable\n\t     */\n\t    var SelectMultipleControlValueAccessor = (function () {\n\t        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n\t            var _this = this;\n\t            this.value = value;\n\t            if (value == null)\n\t                return;\n\t            var values = value;\n\t            // convert values to ids\n\t            var ids = values.map(function (v) { return _this._getOptionId(v); });\n\t            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n\t        };\n\t        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (_) {\n\t                var selected = [];\n\t                if (_.hasOwnProperty('selectedOptions')) {\n\t                    var options = _.selectedOptions;\n\t                    for (var i = 0; i < options.length; i++) {\n\t                        var opt = options.item(i);\n\t                        var val = _this._getOptionValue(opt.value);\n\t                        selected.push(val);\n\t                    }\n\t                }\n\t                else {\n\t                    var options = _.options;\n\t                    for (var i = 0; i < options.length; i++) {\n\t                        var opt = options.item(i);\n\t                        if (opt.selected) {\n\t                            var val = _this._getOptionValue(opt.value);\n\t                            selected.push(val);\n\t                        }\n\t                    }\n\t                }\n\t                fn(selected);\n\t            };\n\t        };\n\t        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n\t            var id = (this._idCounter++).toString();\n\t            this._optionMap.set(id, value);\n\t            return id;\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id)._value, value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var opt = this._optionMap.get(_extractId$1(valueString));\n\t            return isPresent(opt) ? opt._value : valueString;\n\t        };\n\t        SelectMultipleControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectMultipleControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return SelectMultipleControlValueAccessor;\n\t    }());\n\t    /**\n\t     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <select multiple name=\"city\" ngModel>\n\t     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n\t     * </select>\n\t     * ```\n\t     */\n\t    var NgSelectMultipleOption = (function () {\n\t        function NgSelectMultipleOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (isPresent(this._select)) {\n\t                this.id = this._select._registerOption(this);\n\t            }\n\t        }\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._value = value;\n\t                this._setElementValue(_buildValueString$1(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n\t            set: function (value) {\n\t                if (isPresent(this._select)) {\n\t                    this._value = value;\n\t                    this._setElementValue(_buildValueString$1(this.id, value));\n\t                    this._select.writeValue(this._select.value);\n\t                }\n\t                else {\n\t                    this._setElementValue(value);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        /** @internal */\n\t        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n\t        };\n\t        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n\t            if (isPresent(this._select)) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectMultipleOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectMultipleOption.ctorParameters = [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ];\n\t        NgSelectMultipleOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectMultipleOption;\n\t    }());\n\t\n\t    function controlPath(name, parent) {\n\t        return parent.path.concat([name]);\n\t    }\n\t    function setUpControl(control, dir) {\n\t        if (!control)\n\t            _throwError(dir, 'Cannot find control with');\n\t        if (!dir.valueAccessor)\n\t            _throwError(dir, 'No value accessor for form control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t        dir.valueAccessor.writeValue(control.value);\n\t        // view -> model\n\t        dir.valueAccessor.registerOnChange(function (newValue) {\n\t            dir.viewToModelUpdate(newValue);\n\t            control.markAsDirty();\n\t            control.setValue(newValue, { emitModelToViewChange: false });\n\t        });\n\t        // touched\n\t        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n\t        control.registerOnChange(function (newValue, emitModelEvent) {\n\t            // control -> view\n\t            dir.valueAccessor.writeValue(newValue);\n\t            // control -> ngModel\n\t            if (emitModelEvent)\n\t                dir.viewToModelUpdate(newValue);\n\t        });\n\t        if (dir.valueAccessor.setDisabledState) {\n\t            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n\t        }\n\t        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange)\n\t                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange)\n\t                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t    }\n\t    function cleanUpControl(control, dir) {\n\t        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n\t        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n\t        dir._rawValidators.forEach(function (validator) { return validator.registerOnValidatorChange(null); });\n\t        dir._rawAsyncValidators.forEach(function (validator) { return validator.registerOnValidatorChange(null); });\n\t        if (control)\n\t            control._clearChangeFns();\n\t    }\n\t    function setUpFormContainer(control, dir) {\n\t        if (isBlank(control))\n\t            _throwError(dir, 'Cannot find control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t    }\n\t    function _noControlError(dir) {\n\t        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n\t    }\n\t    function _throwError(dir, message) {\n\t        var messageEnd;\n\t        if (dir.path.length > 1) {\n\t            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n\t        }\n\t        else if (dir.path[0]) {\n\t            messageEnd = \"name: '\" + dir.path + \"'\";\n\t        }\n\t        else {\n\t            messageEnd = 'unspecified name attribute';\n\t        }\n\t        throw new Error(message + \" \" + messageEnd);\n\t    }\n\t    function composeValidators(validators) {\n\t        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n\t    }\n\t    function composeAsyncValidators(validators) {\n\t        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n\t            null;\n\t    }\n\t    function isPropertyUpdated(changes, viewModel) {\n\t        if (!changes.hasOwnProperty('model'))\n\t            return false;\n\t        var change = changes['model'];\n\t        if (change.isFirstChange())\n\t            return true;\n\t        return !looseIdentical(viewModel, change.currentValue);\n\t    }\n\t    var BUILTIN_ACCESSORS = [\n\t        CheckboxControlValueAccessor,\n\t        NumberValueAccessor,\n\t        SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor,\n\t        RadioControlValueAccessor,\n\t    ];\n\t    function isBuiltInAccessor(valueAccessor) {\n\t        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n\t    }\n\t    // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n\t    function selectValueAccessor(dir, valueAccessors) {\n\t        if (!valueAccessors)\n\t            return null;\n\t        var defaultAccessor;\n\t        var builtinAccessor;\n\t        var customAccessor;\n\t        valueAccessors.forEach(function (v) {\n\t            if (v.constructor === DefaultValueAccessor) {\n\t                defaultAccessor = v;\n\t            }\n\t            else if (isBuiltInAccessor(v)) {\n\t                if (builtinAccessor)\n\t                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n\t                builtinAccessor = v;\n\t            }\n\t            else {\n\t                if (customAccessor)\n\t                    _throwError(dir, 'More than one custom value accessor matches form control with');\n\t                customAccessor = v;\n\t            }\n\t        });\n\t        if (customAccessor)\n\t            return customAccessor;\n\t        if (builtinAccessor)\n\t            return builtinAccessor;\n\t        if (defaultAccessor)\n\t            return defaultAccessor;\n\t        _throwError(dir, 'No valid value accessor for form control with');\n\t        return null;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractFormGroupDirective = (function (_super) {\n\t        __extends(AbstractFormGroupDirective, _super);\n\t        function AbstractFormGroupDirective() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormGroup(this);\n\t        };\n\t        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormGroup(this);\n\t            }\n\t        };\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n\t            /**\n\t             * Get the {@link FormGroup} backing this binding.\n\t             */\n\t            get: function () { return this.formDirective.getFormGroup(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n\t            /**\n\t             * Get the path to this control group.\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n\t            /**\n\t             * Get the {@link Form} to which this group belongs.\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n\t        return AbstractFormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var AbstractControlStatus = (function () {\n\t        function AbstractControlStatus(cd) {\n\t            this._cd = cd;\n\t        }\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n\t            get: function () {\n\t                return isPresent(this._cd.control) ? this._cd.control.untouched : false;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n\t            get: function () {\n\t                return isPresent(this._cd.control) ? this._cd.control.touched : false;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n\t            get: function () {\n\t                return isPresent(this._cd.control) ? this._cd.control.pristine : false;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n\t            get: function () {\n\t                return isPresent(this._cd.control) ? this._cd.control.dirty : false;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n\t            get: function () {\n\t                return isPresent(this._cd.control) ? this._cd.control.valid : false;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n\t            get: function () {\n\t                return isPresent(this._cd.control) ? this._cd.control.invalid : false;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AbstractControlStatus;\n\t    }());\n\t    var ngControlStatusHost = {\n\t        '[class.ng-untouched]': 'ngClassUntouched',\n\t        '[class.ng-touched]': 'ngClassTouched',\n\t        '[class.ng-pristine]': 'ngClassPristine',\n\t        '[class.ng-dirty]': 'ngClassDirty',\n\t        '[class.ng-valid]': 'ngClassValid',\n\t        '[class.ng-invalid]': 'ngClassInvalid'\n\t    };\n\t    /**\n\t     * Directive automatically applied to Angular form controls that sets CSS classes\n\t     * based on control status (valid/invalid/dirty/etc).\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControlStatus = (function (_super) {\n\t        __extends$3(NgControlStatus, _super);\n\t        function NgControlStatus(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatus.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatus.ctorParameters = [\n\t            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n\t        ];\n\t        return NgControlStatus;\n\t    }(AbstractControlStatus));\n\t    /**\n\t     * Directive automatically applied to Angular form groups that sets CSS classes\n\t     * based on control status (valid/invalid/dirty/etc).\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControlStatusGroup = (function (_super) {\n\t        __extends$3(NgControlStatusGroup, _super);\n\t        function NgControlStatusGroup(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatusGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n\t                        host: ngControlStatusHost\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatusGroup.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n\t        ];\n\t        return NgControlStatusGroup;\n\t    }(AbstractControlStatus));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   @Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   @Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * @stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$5(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var schedulerFn;\n\t            var errorFn = function (err) { return null; };\n\t            var completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n\t     */\n\t    var VALID = 'VALID';\n\t    /**\n\t     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n\t     */\n\t    var INVALID = 'INVALID';\n\t    /**\n\t     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n\t     * errors are not yet available for the input value.\n\t     */\n\t    var PENDING = 'PENDING';\n\t    /**\n\t     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n\t     * calculations of validity or value.\n\t     */\n\t    var DISABLED = 'DISABLED';\n\t    function _find(control, path, delimiter) {\n\t        if (path == null)\n\t            return null;\n\t        if (!(path instanceof Array)) {\n\t            path = path.split(delimiter);\n\t        }\n\t        if (path instanceof Array && (path.length === 0))\n\t            return null;\n\t        return path.reduce(function (v, name) {\n\t            if (v instanceof FormGroup) {\n\t                return v.controls[name] || null;\n\t            }\n\t            if (v instanceof FormArray) {\n\t                return v.at(name) || null;\n\t            }\n\t            return null;\n\t        }, control);\n\t    }\n\t    function toObservable(r) {\n\t        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n\t    }\n\t    function coerceToValidator(validator) {\n\t        return Array.isArray(validator) ? composeValidators(validator) : validator;\n\t    }\n\t    function coerceToAsyncValidator(asyncValidator) {\n\t        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n\t    }\n\t    /**\n\t     * @whatItDoes This is the base class for {@link FormControl}, {@link FormGroup}, and\n\t     * {@link FormArray}.\n\t     *\n\t     * It provides some of the shared behavior that all controls and groups of controls have, like\n\t     * running validators, calculating status, and resetting state. It also defines the properties\n\t     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n\t     * instantiated directly.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractControl = (function () {\n\t        function AbstractControl(validator, asyncValidator) {\n\t            this.validator = validator;\n\t            this.asyncValidator = asyncValidator;\n\t            /** @internal */\n\t            this._onCollectionChange = function () { };\n\t            this._pristine = true;\n\t            this._touched = false;\n\t            /** @internal */\n\t            this._onDisabledChange = [];\n\t        }\n\t        Object.defineProperty(AbstractControl.prototype, \"value\", {\n\t            /**\n\t             * The value of the control.\n\t             */\n\t            get: function () { return this._value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"status\", {\n\t            /**\n\t             * The validation status of the control. There are four possible\n\t             * validation statuses:\n\t             *\n\t             * * **VALID**:  control has passed all validation checks\n\t             * * **INVALID**: control has failed at least one validation check\n\t             * * **PENDING**: control is in the midst of conducting a validation check\n\t             * * **DISABLED**: control is exempt from validation checks\n\t             *\n\t             * These statuses are mutually exclusive, so a control cannot be\n\t             * both valid AND invalid or invalid AND disabled.\n\t             */\n\t            get: function () { return this._status; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n\t            /**\n\t             * A control is `valid` when its `status === VALID`.\n\t             *\n\t             * In order to have this status, the control must have passed all its\n\t             * validation checks.\n\t             */\n\t            get: function () { return this._status === VALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n\t            /**\n\t             * A control is `invalid` when its `status === INVALID`.\n\t             *\n\t             * In order to have this status, the control must have failed\n\t             * at least one of its validation checks.\n\t             */\n\t            get: function () { return this._status === INVALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n\t            /**\n\t             * A control is `pending` when its `status === PENDING`.\n\t             *\n\t             * In order to have this status, the control must be in the\n\t             * middle of conducting a validation check.\n\t             */\n\t            get: function () { return this._status == PENDING; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n\t            /**\n\t             * A control is `disabled` when its `status === DISABLED`.\n\t             *\n\t             * Disabled controls are exempt from validation checks and\n\t             * are not included in the aggregate value of their ancestor\n\t             * controls.\n\t             */\n\t            get: function () { return this._status === DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n\t            /**\n\t             * A control is `enabled` as long as its `status !== DISABLED`.\n\t             *\n\t             * In other words, it has a status of `VALID`, `INVALID`, or\n\t             * `PENDING`.\n\t             */\n\t            get: function () { return this._status !== DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n\t            /**\n\t             * Returns any errors generated by failing validation. If there\n\t             * are no errors, it will return null.\n\t             */\n\t            get: function () { return this._errors; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n\t            /**\n\t             * A control is `pristine` if the user has not yet changed\n\t             * the value in the UI.\n\t             *\n\t             * Note that programmatic changes to a control's value will\n\t             * *not* mark it dirty.\n\t             */\n\t            get: function () { return this._pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n\t            /**\n\t             * A control is `dirty` if the user has changed the value\n\t             * in the UI.\n\t             *\n\t             * Note that programmatic changes to a control's value will\n\t             * *not* mark it dirty.\n\t             */\n\t            get: function () { return !this.pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n\t            /**\n\t            * A control is marked `touched` once the user has triggered\n\t            * a `blur` event on it.\n\t            */\n\t            get: function () { return this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n\t            /**\n\t             * A control is `untouched` if the user has not yet triggered\n\t             * a `blur` event on it.\n\t             */\n\t            get: function () { return !this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n\t            /**\n\t             * Emits an event every time the value of the control changes, in\n\t             * the UI or programmatically.\n\t             */\n\t            get: function () { return this._valueChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n\t            /**\n\t             * Emits an event every time the validation status of the control\n\t             * is re-calculated.\n\t             */\n\t            get: function () { return this._statusChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Sets the synchronous validators that are active on this control.  Calling\n\t         * this will overwrite any existing sync validators.\n\t         */\n\t        AbstractControl.prototype.setValidators = function (newValidator) {\n\t            this.validator = coerceToValidator(newValidator);\n\t        };\n\t        /**\n\t         * Sets the async validators that are active on this control. Calling this\n\t         * will overwrite any existing async validators.\n\t         */\n\t        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n\t            this.asyncValidator = coerceToAsyncValidator(newValidator);\n\t        };\n\t        /**\n\t         * Empties out the sync validator list.\n\t         */\n\t        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n\t        /**\n\t         * Empties out the async validator list.\n\t         */\n\t        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n\t        /**\n\t         * Marks the control as `touched`.\n\t         *\n\t         * This will also mark all direct ancestors as `touched` to maintain\n\t         * the model.\n\t         */\n\t        AbstractControl.prototype.markAsTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = true;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `untouched`.\n\t         *\n\t         * If the control has any children, it will also mark all children as `untouched`\n\t         * to maintain the model, and re-calculate the `touched` status of all parent\n\t         * controls.\n\t         */\n\t        AbstractControl.prototype.markAsUntouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = false;\n\t            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `dirty`.\n\t         *\n\t         * This will also mark all direct ancestors as `dirty` to maintain\n\t         * the model.\n\t         */\n\t        AbstractControl.prototype.markAsDirty = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = false;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsDirty({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `pristine`.\n\t         *\n\t         * If the control has any children, it will also mark all children as `pristine`\n\t         * to maintain the model, and re-calculate the `pristine` status of all parent\n\t         * controls.\n\t         */\n\t        AbstractControl.prototype.markAsPristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = true;\n\t            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `pending`.\n\t         */\n\t        AbstractControl.prototype.markAsPending = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._status = PENDING;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsPending({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Disables the control. This means the control will be exempt from validation checks and\n\t         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n\t         *\n\t         * If the control has children, all children will be disabled to maintain the model.\n\t         */\n\t        AbstractControl.prototype.disable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = DISABLED;\n\t            this._errors = null;\n\t            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n\t            this._updateValue();\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n\t        };\n\t        /**\n\t         * Enables the control. This means the control will be included in validation checks and\n\t         * the aggregate value of its parent. Its status is re-calculated based on its value and\n\t         * its validators.\n\t         *\n\t         * If the control has children, all children will be enabled.\n\t         */\n\t        AbstractControl.prototype.enable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = VALID;\n\t            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n\t        };\n\t        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity();\n\t                this._parent._updatePristine();\n\t                this._parent._updateTouched();\n\t            }\n\t        };\n\t        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n\t        /**\n\t         * Re-calculates the value and validation status of the control.\n\t         *\n\t         * By default, it will also update the value and validity of its ancestors.\n\t         */\n\t        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._setInitialStatus();\n\t            this._updateValue();\n\t            if (this.enabled) {\n\t                this._errors = this._runValidator();\n\t                this._status = this._calculateStatus();\n\t                if (this._status === VALID || this._status === PENDING) {\n\t                    this._runAsyncValidator(emitEvent);\n\t                }\n\t            }\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updateTreeValidity = function (_a) {\n\t            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n\t            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t        };\n\t        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n\t        AbstractControl.prototype._runValidator = function () {\n\t            return this.validator ? this.validator(this) : null;\n\t        };\n\t        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n\t            var _this = this;\n\t            if (this.asyncValidator) {\n\t                this._status = PENDING;\n\t                this._cancelExistingSubscription();\n\t                var obs = toObservable(this.asyncValidator(this));\n\t                this._asyncValidationSubscription =\n\t                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n\t            }\n\t        };\n\t        AbstractControl.prototype._cancelExistingSubscription = function () {\n\t            if (this._asyncValidationSubscription) {\n\t                this._asyncValidationSubscription.unsubscribe();\n\t            }\n\t        };\n\t        /**\n\t         * Sets errors on a form control.\n\t         *\n\t         * This is used when validations are run manually by the user, rather than automatically.\n\t         *\n\t         * Calling `setErrors` will also update the validity of the parent control.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * const login = new FormControl(\"someLogin\");\n\t         * login.setErrors({\n\t         *   \"notUnique\": true\n\t         * });\n\t         *\n\t         * expect(login.valid).toEqual(false);\n\t         * expect(login.errors).toEqual({\"notUnique\": true});\n\t         *\n\t         * login.setValue(\"someOtherLogin\");\n\t         *\n\t         * expect(login.valid).toEqual(true);\n\t         * ```\n\t         */\n\t        AbstractControl.prototype.setErrors = function (errors, _a) {\n\t            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n\t            this._errors = errors;\n\t            this._updateControlsErrors(emitEvent !== false);\n\t        };\n\t        /**\n\t         * Retrieves a child control given the control's name or path.\n\t         *\n\t         * Paths can be passed in as an array or a string delimited by a dot.\n\t         *\n\t         * To get a control nested within a `person` sub-group:\n\t         *\n\t         * * `this.form.get('person.name');`\n\t         *\n\t         * -OR-\n\t         *\n\t         * * `this.form.get(['person', 'name']);`\n\t         */\n\t        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n\t        /**\n\t         * Returns true if the control with the given path has the error specified. Otherwise\n\t         * returns null or undefined.\n\t         *\n\t         * If no path is given, it checks for the error on the present control.\n\t         */\n\t        AbstractControl.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            var control = path ? this.get(path) : this;\n\t            return control && control._errors ? control._errors[errorCode] : null;\n\t        };\n\t        /**\n\t         * Returns true if the control with the given path has the error specified. Otherwise\n\t         * returns false.\n\t         *\n\t         * If no path is given, it checks for the error on the present control.\n\t         */\n\t        AbstractControl.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return !!this.getError(errorCode, path);\n\t        };\n\t        Object.defineProperty(AbstractControl.prototype, \"root\", {\n\t            /**\n\t             * Retrieves the top-level ancestor of this control.\n\t             */\n\t            get: function () {\n\t                var x = this;\n\t                while (x._parent) {\n\t                    x = x._parent;\n\t                }\n\t                return x;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n\t            this._status = this._calculateStatus();\n\t            if (emitEvent) {\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent) {\n\t                this._parent._updateControlsErrors(emitEvent);\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._initObservables = function () {\n\t            this._valueChanges = new EventEmitter();\n\t            this._statusChanges = new EventEmitter();\n\t        };\n\t        AbstractControl.prototype._calculateStatus = function () {\n\t            if (this._allControlsDisabled())\n\t                return DISABLED;\n\t            if (this._errors)\n\t                return INVALID;\n\t            if (this._anyControlsHaveStatus(PENDING))\n\t                return PENDING;\n\t            if (this._anyControlsHaveStatus(INVALID))\n\t                return INVALID;\n\t            return VALID;\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n\t            return this._anyControls(function (control) { return control.status === status; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsDirty = function () {\n\t            return this._anyControls(function (control) { return control.dirty; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsTouched = function () {\n\t            return this._anyControls(function (control) { return control.touched; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updatePristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = !this._anyControlsDirty();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updateTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = this._anyControlsTouched();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._isBoxedValue = function (formState) {\n\t            return typeof formState === 'object' && formState !== null &&\n\t                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n\t        return AbstractControl;\n\t    }());\n\t    /**\n\t     * @whatItDoes Tracks the value and validation status of an individual form control.\n\t     *\n\t     * It is one of the three fundamental building blocks of Angular forms, along with\n\t     * {@link FormGroup} and {@link FormArray}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormControl}, you can pass in an initial value as the\n\t     * first argument. Example:\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl('some value');\n\t     * console.log(ctrl.value);     // 'some value'\n\t     *```\n\t     *\n\t     * You can also initialize the control with a form state object on instantiation,\n\t     * which includes both the value and whether or not the control is disabled.\n\t     * You can't use the value key without the disabled key; both are required\n\t     * to use this way of initialization.\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n\t     * console.log(ctrl.value);     // 'n/a'\n\t     * console.log(ctrl.status);   // 'DISABLED'\n\t     * ```\n\t     *\n\t     * To include a sync validator (or an array of sync validators) with the control,\n\t     * pass it in as the second argument. Async validators are also supported, but\n\t     * have to be passed in separately as the third arg.\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl('', Validators.required);\n\t     * console.log(ctrl.value);     // ''\n\t     * console.log(ctrl.status);   // 'INVALID'\n\t     * ```\n\t     *\n\t     * See its superclass, {@link AbstractControl}, for more properties and methods.\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormControl = (function (_super) {\n\t        __extends$6(FormControl, _super);\n\t        function FormControl(formState, validator, asyncValidator) {\n\t            if (formState === void 0) { formState = null; }\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n\t            /** @internal */\n\t            this._onChange = [];\n\t            this._applyFormState(formState);\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t            this._initObservables();\n\t        }\n\t        /**\n\t         * Set the value of the form control to `value`.\n\t         *\n\t         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n\t         * and not its parent component. This defaults to false.\n\t         *\n\t         * If `emitEvent` is `true`, this\n\t         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n\t         * to true (as it falls through to `updateValueAndValidity`).\n\t         *\n\t         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n\t         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n\t         * specified.\n\t         *\n\t         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n\t         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n\t         */\n\t        FormControl.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n\t            this._value = value;\n\t            if (this._onChange.length && emitModelToViewChange !== false) {\n\t                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n\t            }\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Patches the value of a control.\n\t         *\n\t         * This function is functionally the same as {@link FormControl.setValue} at this level.\n\t         * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n\t         * where it does behave differently.\n\t         */\n\t        FormControl.prototype.patchValue = function (value, options) {\n\t            if (options === void 0) { options = {}; }\n\t            this.setValue(value, options);\n\t        };\n\t        /**\n\t         * Resets the form control. This means by default:\n\t         *\n\t         * * it is marked as `pristine`\n\t         * * it is marked as `untouched`\n\t         * * value is set to null\n\t         *\n\t         * You can also reset to a specific form state by passing through a standalone\n\t         * value or a form state object that contains both a value and a disabled state\n\t         * (these are the only two properties that cannot be calculated).\n\t         *\n\t         * Ex:\n\t         *\n\t         * ```ts\n\t         * this.control.reset('Nancy');\n\t         *\n\t         * console.log(this.control.value);  // 'Nancy'\n\t         * ```\n\t         *\n\t         * OR\n\t         *\n\t         * ```\n\t         * this.control.reset({value: 'Nancy', disabled: true});\n\t         *\n\t         * console.log(this.control.value);  // 'Nancy'\n\t         * console.log(this.control.status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormControl.prototype.reset = function (formState, _a) {\n\t            if (formState === void 0) { formState = null; }\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._applyFormState(formState);\n\t            this.markAsPristine({ onlySelf: onlySelf });\n\t            this.markAsUntouched({ onlySelf: onlySelf });\n\t            this.setValue(this._value, { onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._updateValue = function () { };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._anyControls = function (condition) { return false; };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n\t        /**\n\t         * Register a listener for change events.\n\t         */\n\t        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._clearChangeFns = function () {\n\t            this._onChange = [];\n\t            this._onDisabledChange = [];\n\t            this._onCollectionChange = function () { };\n\t        };\n\t        /**\n\t         * Register a listener for disabled events.\n\t         */\n\t        FormControl.prototype.registerOnDisabledChange = function (fn) {\n\t            this._onDisabledChange.push(fn);\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._forEachChild = function (cb) { };\n\t        FormControl.prototype._applyFormState = function (formState) {\n\t            if (this._isBoxedValue(formState)) {\n\t                this._value = formState.value;\n\t                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n\t                    this.enable({ onlySelf: true, emitEvent: false });\n\t            }\n\t            else {\n\t                this._value = formState;\n\t            }\n\t        };\n\t        return FormControl;\n\t    }(AbstractControl));\n\t    /**\n\t     * @whatItDoes Tracks the value and validity state of a group of {@link FormControl}\n\t     * instances.\n\t     *\n\t     * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n\t     * with each control name as the key.  It calculates its status by reducing the statuses\n\t     * of its children. For example, if one of the controls in a group is invalid, the entire\n\t     * group becomes invalid.\n\t     *\n\t     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n\t     * along with {@link FormControl} and {@link FormArray}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n\t     * argument. The key for each child will be the name under which it is registered.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const form = new FormGroup({\n\t     *   first: new FormControl('Nancy', Validators.minLength(2)),\n\t     *   last: new FormControl('Drew'),\n\t     * });\n\t     *\n\t     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n\t     * console.log(form.status);  // 'VALID'\n\t     * ```\n\t     *\n\t     * You can also include group-level validators as the second arg, or group-level async\n\t     * validators as the third arg. These come in handy when you want to perform validation\n\t     * that considers the value of more than one child control.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const form = new FormGroup({\n\t     *   password: new FormControl('', Validators.minLength(2)),\n\t     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n\t     * }, passwordMatchValidator);\n\t     *\n\t     *\n\t     * function passwordMatchValidator(g: FormGroup) {\n\t     *    return g.get('password').value === g.get('passwordConfirm').value\n\t     *       ? null : {'mismatch': true};\n\t     * }\n\t     * ```\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormGroup = (function (_super) {\n\t        __extends$6(FormGroup, _super);\n\t        function FormGroup(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         * Registers a control with the group's list of controls.\n\t         *\n\t         * This method does not update value or validity of the control, so for\n\t         * most cases you'll want to use {@link FormGroup.addControl} instead.\n\t         */\n\t        FormGroup.prototype.registerControl = function (name, control) {\n\t            if (this.controls[name])\n\t                return this.controls[name];\n\t            this.controls[name] = control;\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t            return control;\n\t        };\n\t        /**\n\t         * Add a control to this group.\n\t         */\n\t        FormGroup.prototype.addControl = function (name, control) {\n\t            this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Remove a control from this group.\n\t         */\n\t        FormGroup.prototype.removeControl = function (name) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Replace an existing control.\n\t         */\n\t        FormGroup.prototype.setControl = function (name, control) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            if (control)\n\t                this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Check whether there is an enabled control with the given name in the group.\n\t         *\n\t         * It will return false for disabled controls. If you'd like to check for\n\t         * existence in the group only, use {@link AbstractControl.get} instead.\n\t         */\n\t        FormGroup.prototype.contains = function (controlName) {\n\t            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n\t        };\n\t        /**\n\t         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n\t         *  the structure of the group, with control names as keys.\n\t         *\n\t         * This method performs strict checks, so it will throw an error if you try\n\t         * to set the value of a control that doesn't exist or if you exclude the\n\t         * value of a control.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const form = new FormGroup({\n\t         *     first: new FormControl(),\n\t         *     last: new FormControl()\n\t         *  });\n\t         *  console.log(form.value);   // {first: null, last: null}\n\t         *\n\t         *  form.setValue({first: 'Nancy', last: 'Drew'});\n\t         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n\t         *\n\t         *  ```\n\t         */\n\t        FormGroup.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._checkAllValuesPresent(value);\n\t            Object.keys(value).forEach(function (name) {\n\t                _this._throwIfControlMissing(name);\n\t                _this.controls[name].setValue(value[name], { onlySelf: true });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n\t         *  names as keys, and will do its best to match the values to the correct controls\n\t         *  in the group.\n\t         *\n\t         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const form = new FormGroup({\n\t         *     first: new FormControl(),\n\t         *     last: new FormControl()\n\t         *  });\n\t         *  console.log(form.value);   // {first: null, last: null}\n\t         *\n\t         *  form.patchValue({first: 'Nancy'});\n\t         *  console.log(form.value);   // {first: 'Nancy', last: null}\n\t         *\n\t         *  ```\n\t         */\n\t        FormGroup.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            Object.keys(value).forEach(function (name) {\n\t                if (_this.controls[name]) {\n\t                    _this.controls[name].patchValue(value[name], { onlySelf: true });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * Resets the {@link FormGroup}. This means by default:\n\t         *\n\t         * * The group and all descendants are marked `pristine`\n\t         * * The group and all descendants are marked `untouched`\n\t         * * The value of all descendants will be null or null maps\n\t         *\n\t         * You can also reset to a specific form state by passing in a map of states\n\t         * that matches the structure of your form, with control names as keys. The state\n\t         * can be a standalone value or a form state object with both a value and a disabled\n\t         * status.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```ts\n\t         * this.form.reset({first: 'name', last: 'last name'});\n\t         *\n\t         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t         * ```\n\t         *\n\t         * - OR -\n\t         *\n\t         * ```\n\t         * this.form.reset({\n\t         *   first: {value: 'name', disabled: true},\n\t         *   last: 'last'\n\t         * });\n\t         *\n\t         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t         * console.log(this.form.get('first').status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormGroup.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = {}; }\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._forEachChild(function (control, name) {\n\t                control.reset(value[name], { onlySelf: true });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * The aggregate value of the {@link FormGroup}, including any disabled controls.\n\t         *\n\t         * If you'd like to include all values regardless of disabled status, use this method.\n\t         * Otherwise, the `value` property is the best way to get the value of the group.\n\t         */\n\t        FormGroup.prototype.getRawValue = function () {\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                acc[name] = control.value;\n\t                return acc;\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._throwIfControlMissing = function (name) {\n\t            if (!Object.keys(this.controls).length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.controls[name]) {\n\t                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n\t            }\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._forEachChild = function (cb) {\n\t            var _this = this;\n\t            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) {\n\t                control.setParent(_this);\n\t                control._registerOnCollectionChange(_this._onCollectionChange);\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n\t        /** @internal */\n\t        FormGroup.prototype._anyControls = function (condition) {\n\t            var _this = this;\n\t            var res = false;\n\t            this._forEachChild(function (control, name) {\n\t                res = res || (_this.contains(name) && condition(control));\n\t            });\n\t            return res;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._reduceValue = function () {\n\t            var _this = this;\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                if (control.enabled || _this.disabled) {\n\t                    acc[name] = control.value;\n\t                }\n\t                return acc;\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n\t            var res = initValue;\n\t            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n\t            return res;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n\t                var controlName = _a[_i];\n\t                if (this.controls[controlName].enabled) {\n\t                    return false;\n\t                }\n\t            }\n\t            return Object.keys(this.controls).length > 0 || this.disabled;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, name) {\n\t                if (value[name] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n\t                }\n\t            });\n\t        };\n\t        return FormGroup;\n\t    }(AbstractControl));\n\t    /**\n\t     * @whatItDoes Tracks the value and validity state of an array of {@link FormControl}\n\t     * instances.\n\t     *\n\t     * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n\t     * It calculates its status by reducing the statuses of its children. For example, if one of\n\t     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n\t     *\n\t     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n\t     * along with {@link FormControl} and {@link FormGroup}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n\t     * argument.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const arr = new FormArray([\n\t     *   new FormControl('Nancy', Validators.minLength(2)),\n\t     *   new FormControl('Drew'),\n\t     * ]);\n\t     *\n\t     * console.log(arr.value);   // ['Nancy', 'Drew']\n\t     * console.log(arr.status);  // 'VALID'\n\t     * ```\n\t     *\n\t     * You can also include array-level validators as the second arg, or array-level async\n\t     * validators as the third arg. These come in handy when you want to perform validation\n\t     * that considers the value of more than one child control.\n\t     *\n\t     * ### Adding or removing controls\n\t     *\n\t     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n\t     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n\t     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n\t     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n\t     * as broken change detection.\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormArray = (function (_super) {\n\t        __extends$6(FormArray, _super);\n\t        function FormArray(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         * Get the {@link AbstractControl} at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.at = function (index) { return this.controls[index]; };\n\t        /**\n\t         * Insert a new {@link AbstractControl} at the end of the array.\n\t         */\n\t        FormArray.prototype.push = function (control) {\n\t            this.controls.push(control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Insert a new {@link AbstractControl} at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.insert = function (index, control) {\n\t            this.controls.splice(index, 0, control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Remove the control at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.removeAt = function (index) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Replace an existing control.\n\t         */\n\t        FormArray.prototype.setControl = function (index, control) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            if (control) {\n\t                this.controls.splice(index, 0, control);\n\t                this._registerControl(control);\n\t            }\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        Object.defineProperty(FormArray.prototype, \"length\", {\n\t            /**\n\t             * Length of the control array.\n\t             */\n\t            get: function () { return this.controls.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n\t         *  the structure of the control.\n\t         *\n\t         * This method performs strict checks, so it will throw an error if you try\n\t         * to set the value of a control that doesn't exist or if you exclude the\n\t         * value of a control.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const arr = new FormArray([\n\t         *     new FormControl(),\n\t         *     new FormControl()\n\t         *  ]);\n\t         *  console.log(arr.value);   // [null, null]\n\t         *\n\t         *  arr.setValue(['Nancy', 'Drew']);\n\t         *  console.log(arr.value);   // ['Nancy', 'Drew']\n\t         *  ```\n\t         */\n\t        FormArray.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._checkAllValuesPresent(value);\n\t            value.forEach(function (newValue, index) {\n\t                _this._throwIfControlMissing(index);\n\t                _this.at(index).setValue(newValue, { onlySelf: true });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n\t         *  structure of the control, and will do its best to match the values to the correct\n\t         *  controls in the group.\n\t         *\n\t         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const arr = new FormArray([\n\t         *     new FormControl(),\n\t         *     new FormControl()\n\t         *  ]);\n\t         *  console.log(arr.value);   // [null, null]\n\t         *\n\t         *  arr.patchValue(['Nancy']);\n\t         *  console.log(arr.value);   // ['Nancy', null]\n\t         *  ```\n\t         */\n\t        FormArray.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            value.forEach(function (newValue, index) {\n\t                if (_this.at(index)) {\n\t                    _this.at(index).patchValue(newValue, { onlySelf: true });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * Resets the {@link FormArray}. This means by default:\n\t         *\n\t         * * The array and all descendants are marked `pristine`\n\t         * * The array and all descendants are marked `untouched`\n\t         * * The value of all descendants will be null or null maps\n\t         *\n\t         * You can also reset to a specific form state by passing in an array of states\n\t         * that matches the structure of the control. The state can be a standalone value\n\t         * or a form state object with both a value and a disabled status.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```ts\n\t         * this.arr.reset(['name', 'last name']);\n\t         *\n\t         * console.log(this.arr.value);  // ['name', 'last name']\n\t         * ```\n\t         *\n\t         * - OR -\n\t         *\n\t         * ```\n\t         * this.arr.reset([\n\t         *   {value: 'name', disabled: true},\n\t         *   'last'\n\t         * ]);\n\t         *\n\t         * console.log(this.arr.value);  // ['name', 'last name']\n\t         * console.log(this.arr.get(0).status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormArray.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = []; }\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._forEachChild(function (control, index) {\n\t                control.reset(value[index], { onlySelf: true });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * The aggregate value of the array, including any disabled controls.\n\t         *\n\t         * If you'd like to include all values regardless of disabled status, use this method.\n\t         * Otherwise, the `value` property is the best way to get the value of the array.\n\t         */\n\t        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n\t        /** @internal */\n\t        FormArray.prototype._throwIfControlMissing = function (index) {\n\t            if (!this.controls.length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.at(index)) {\n\t                throw new Error(\"Cannot find form control at index \" + index);\n\t            }\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._forEachChild = function (cb) {\n\t            this.controls.forEach(function (control, index) { cb(control, index); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._updateValue = function () {\n\t            var _this = this;\n\t            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n\t                .map(function (control) { return control.value; });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._anyControls = function (condition) {\n\t            return this.controls.some(function (control) { return control.enabled && condition(control); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) { return _this._registerControl(control); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, i) {\n\t                if (value[i] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n\t                }\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n\t                var control = _a[_i];\n\t                if (control.enabled)\n\t                    return false;\n\t            }\n\t            return this.controls.length > 0 || this.disabled;\n\t        };\n\t        FormArray.prototype._registerControl = function (control) {\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t        };\n\t        return FormArray;\n\t    }(AbstractControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formDirectiveProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n\t    };\n\t    var resolvedPromise = Promise.resolve(null);\n\t    /**\n\t     * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n\t     * to track aggregate form value and validation status.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * As soon as you import the `FormsModule`, this directive becomes active by default on\n\t     * all `<form>` tags.  You don't need to add a special selector.\n\t     *\n\t     * You can export the directive into a local template variable using `ngForm` as the key\n\t     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n\t     * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n\t     * will give you access to the aggregate value and validity status of the form, as well as\n\t     * user interaction properties like `dirty` and `touched`.\n\t     *\n\t     * To register child controls with the form, you'll want to use {@link NgModel} with a\n\t     * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n\t     * sub-groups within the form.\n\t     *\n\t     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n\t     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t     * submission event.\n\t     *\n\t     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `FormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var NgForm = (function (_super) {\n\t        __extends$4(NgForm, _super);\n\t        function NgForm(validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._submitted = false;\n\t            this.ngSubmit = new EventEmitter();\n\t            this.form =\n\t                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n\t        }\n\t        Object.defineProperty(NgForm.prototype, \"submitted\", {\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"controls\", {\n\t            get: function () { return this.form.controls; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgForm.prototype.addControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                dir._control = container.registerControl(dir.name, dir.control);\n\t                setUpControl(dir.control, dir);\n\t                dir.control.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n\t        NgForm.prototype.removeControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                if (isPresent(container)) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        NgForm.prototype.addFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                var group = new FormGroup({});\n\t                setUpFormContainer(group, dir);\n\t                container.registerControl(dir.name, group);\n\t                group.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        NgForm.prototype.removeFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                if (isPresent(container)) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n\t        NgForm.prototype.updateModel = function (dir, value) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var ctrl = _this.form.get(dir.path);\n\t                ctrl.setValue(value);\n\t            });\n\t        };\n\t        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n\t        NgForm.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        NgForm.prototype.onReset = function () { this.resetForm(); };\n\t        NgForm.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /** @internal */\n\t        NgForm.prototype._findContainer = function (path) {\n\t            path.pop();\n\t            return path.length ? this.form.get(path) : this.form;\n\t        };\n\t        NgForm.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n\t                        providers: [formDirectiveProvider],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        outputs: ['ngSubmit'],\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgForm.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        return NgForm;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var Examples = {\n\t        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n\t        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n\t        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n\t        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n\t        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n\t    };\n\t\n\t    var TemplateDrivenErrors = (function () {\n\t        function TemplateDrivenErrors() {\n\t        }\n\t        TemplateDrivenErrors.modelParentException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n\t        };\n\t        TemplateDrivenErrors.formGroupNameException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        TemplateDrivenErrors.missingNameException = function () {\n\t            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n\t        };\n\t        TemplateDrivenErrors.modelGroupParentException = function () {\n\t            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        return TemplateDrivenErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var modelGroupProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n\t    };\n\t    /**\n\t     * @whatItDoes Creates and binds a {@link FormGroup} instance to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can only be used as a child of {@link NgForm} (or in other words,\n\t     * within `<form>` tags).\n\t     *\n\t     * Use this directive if you'd like to create a sub-group within a form. This can\n\t     * come in handy if you want to validate a sub-group of your form separately from\n\t     * the rest of your form, or if some values in your domain model make more sense to\n\t     * consume together in a nested object.\n\t     *\n\t     * Pass in the name you'd like this sub-group to have and it will become the key\n\t     * for the sub-group in the form's full value. You can also export the directive into\n\t     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n\t     *\n\t     * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `FormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var NgModelGroup = (function (_super) {\n\t        __extends$8(NgModelGroup, _super);\n\t        function NgModelGroup(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /** @internal */\n\t        NgModelGroup.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelGroupParentException();\n\t            }\n\t        };\n\t        NgModelGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModelGroup.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        NgModelGroup.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n\t        };\n\t        return NgModelGroup;\n\t    }(AbstractFormGroupDirective));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formControlBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n\t    };\n\t    var resolvedPromise$1 = Promise.resolve(null);\n\t    /**\n\t     * @whatItDoes Creates a {@link FormControl} instance from a domain model and binds it\n\t     * to a form control element.\n\t     *\n\t     * The {@link FormControl} instance will track the value, user interaction, and\n\t     * validation status of the control and keep the view synced with the model. If used\n\t     * within a parent form, the directive will also register itself with the form as a child\n\t     * control.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can be used by itself or as part of a larger form. All you need is the\n\t     * `ngModel` selector to activate it.\n\t     *\n\t     * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n\t     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n\t     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n\t     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n\t     * the domain model in your class as well.\n\t     *\n\t     * If you wish to inspect the properties of the associated {@link FormControl} (like\n\t     * validity state), you can also export the directive into a local template variable using\n\t     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n\t     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n\t     * will fall through to the control anyway, so you can access them directly. You can see a\n\t     * full list of properties directly available in {@link AbstractControlDirective}.\n\t     *\n\t     * The following is an example of a simple standalone control using `ngModel`:\n\t     *\n\t     * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n\t     *\n\t     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n\t     * so that the control can be registered with the parent form under that name.\n\t     *\n\t     * It's worth noting that in the context of a parent form, you often can skip one-way or\n\t     * two-way binding because the parent form will sync the value for you. You can access\n\t     * its properties by exporting it into a local template variable using `ngForm` (ex:\n\t     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n\t     *\n\t     * If you do need to populate initial values into your form, using a one-way binding for\n\t     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n\t     * than the domain model's value on submit.\n\t     *\n\t     * Take a look at an example of using `ngModel` within a form:\n\t     *\n\t     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t     *\n\t     * To see `ngModel` examples with different form control types, see:\n\t     *\n\t     * * Radio buttons: {@link RadioControlValueAccessor}\n\t     * * Selects: {@link SelectControlValueAccessor}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: `FormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var NgModel = (function (_super) {\n\t        __extends$7(NgModel, _super);\n\t        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            /** @internal */\n\t            this._control = new FormControl();\n\t            /** @internal */\n\t            this._registered = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        NgModel.prototype.ngOnChanges = function (changes) {\n\t            this._checkForErrors();\n\t            if (!this._registered)\n\t                this._setUpControl();\n\t            if ('isDisabled' in changes) {\n\t                this._updateDisabled(changes);\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this._updateValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n\t        Object.defineProperty(NgModel.prototype, \"control\", {\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"path\", {\n\t            get: function () {\n\t                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModel.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        NgModel.prototype._setUpControl = function () {\n\t            this._isStandalone() ? this._setUpStandalone() :\n\t                this.formDirective.addControl(this);\n\t            this._registered = true;\n\t        };\n\t        NgModel.prototype._isStandalone = function () {\n\t            return !this._parent || (this.options && this.options.standalone);\n\t        };\n\t        NgModel.prototype._setUpStandalone = function () {\n\t            setUpControl(this._control, this);\n\t            this._control.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        NgModel.prototype._checkForErrors = function () {\n\t            if (!this._isStandalone()) {\n\t                this._checkParentType();\n\t            }\n\t            this._checkName();\n\t        };\n\t        NgModel.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                TemplateDrivenErrors.formGroupNameException();\n\t            }\n\t            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelParentException();\n\t            }\n\t        };\n\t        NgModel.prototype._checkName = function () {\n\t            if (this.options && this.options.name)\n\t                this.name = this.options.name;\n\t            if (!this._isStandalone() && !this.name) {\n\t                TemplateDrivenErrors.missingNameException();\n\t            }\n\t        };\n\t        NgModel.prototype._updateValue = function (value) {\n\t            var _this = this;\n\t            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n\t        };\n\t        NgModel.prototype._updateDisabled = function (changes) {\n\t            var _this = this;\n\t            var disabledValue = changes['isDisabled'].currentValue;\n\t            var isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n\t            resolvedPromise$1.then(function () {\n\t                if (isDisabled && !_this.control.disabled) {\n\t                    _this.control.disable();\n\t                }\n\t                else if (!isDisabled && _this.control.disabled) {\n\t                    _this.control.enable();\n\t                }\n\t            });\n\t        };\n\t        NgModel.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n\t                        providers: [formControlBinding],\n\t                        exportAs: 'ngModel'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModel.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        NgModel.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t        };\n\t        return NgModel;\n\t    }(NgControl));\n\t\n\t    var ReactiveErrors = (function () {\n\t        function ReactiveErrors() {\n\t        }\n\t        ReactiveErrors.controlParentException = function () {\n\t            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n\t        };\n\t        ReactiveErrors.ngModelGroupException = function () {\n\t            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n\t        };\n\t        ReactiveErrors.missingFormException = function () {\n\t            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n\t        };\n\t        ReactiveErrors.groupParentException = function () {\n\t            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n\t        };\n\t        ReactiveErrors.arrayParentException = function () {\n\t            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n\t        };\n\t        ReactiveErrors.disabledAttrWarning = function () {\n\t            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n\t        };\n\t        return ReactiveErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formControlBinding$1 = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a standalone {@link FormControl} instance to a form control element.\n\t     *\n\t     * In other words, this directive ensures that any values written to the {@link FormControl}\n\t     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t     * any values written to the DOM element through user input will be reflected in the\n\t     * {@link FormControl} instance (view -> model).\n\t     *\n\t     * @howToUse\n\t     *\n\t     * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n\t     * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n\t     * {@link FormControlDirective}.\n\t     *\n\t     * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n\t     * it does not require that your {@link FormControl} instance be part of any parent\n\t     * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n\t     * exists above it.\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormControl} instance. See a full list of available properties in\n\t     * {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n\t     * or you can set it programmatically later using {@link AbstractControl.setValue} or\n\t     * {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormControlDirective = (function (_super) {\n\t        __extends$9(FormControlDirective, _super);\n\t        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this.update = new EventEmitter();\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlDirective.prototype.ngOnChanges = function (changes) {\n\t            if (this._isControlChanged(changes)) {\n\t                setUpControl(this.form, this);\n\t                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                    this.valueAccessor.setDisabledState(true);\n\t                }\n\t                this.form.updateValueAndValidity({ emitEvent: false });\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.form.setValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        FormControlDirective.prototype._isControlChanged = function (changes) {\n\t            return changes.hasOwnProperty('form');\n\t        };\n\t        FormControlDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlDirective.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        FormControlDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlDirective;\n\t    }(NgControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formDirectiveProvider$1 = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n\t    };\n\t    /**\n\t     * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive accepts an existing {@link FormGroup} instance. It will then use this\n\t     * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n\t     * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n\t     * and {@link FormArrayName} directives.\n\t     *\n\t     * **Set value**: You can set the form's initial value when instantiating the\n\t     * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n\t     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n\t     * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n\t     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t     * submission event.\n\t     *\n\t     * ### Example\n\t     *\n\t     * In this example, we create form controls for first name and last name.\n\t     *\n\t     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormGroupDirective = (function (_super) {\n\t        __extends$11(FormGroupDirective, _super);\n\t        function FormGroupDirective(_validators, _asyncValidators) {\n\t            _super.call(this);\n\t            this._validators = _validators;\n\t            this._asyncValidators = _asyncValidators;\n\t            this._submitted = false;\n\t            this.directives = [];\n\t            this.form = null;\n\t            this.ngSubmit = new EventEmitter();\n\t        }\n\t        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n\t            this._checkFormPresent();\n\t            if (changes.hasOwnProperty('form')) {\n\t                this._updateValidators();\n\t                this._updateDomValue();\n\t                this._updateRegistrations();\n\t            }\n\t        };\n\t        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormGroupDirective.prototype.addControl = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpControl(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t            this.directives.push(dir);\n\t            return ctrl;\n\t        };\n\t        FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n\t        FormGroupDirective.prototype.addFormGroup = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n\t        FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.addFormArray = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n\t        FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.updateModel = function (dir, value) {\n\t            var ctrl = this.form.get(dir.path);\n\t            ctrl.setValue(value);\n\t        };\n\t        FormGroupDirective.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n\t        FormGroupDirective.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /** @internal */\n\t        FormGroupDirective.prototype._updateDomValue = function () {\n\t            var _this = this;\n\t            this.directives.forEach(function (dir) {\n\t                var newCtrl = _this.form.get(dir.path);\n\t                if (dir._control !== newCtrl) {\n\t                    cleanUpControl(dir._control, dir);\n\t                    if (newCtrl)\n\t                        setUpControl(newCtrl, dir);\n\t                    dir._control = newCtrl;\n\t                }\n\t            });\n\t            this.form._updateTreeValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype._updateRegistrations = function () {\n\t            var _this = this;\n\t            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n\t            if (this._oldForm)\n\t                this._oldForm._registerOnCollectionChange(function () { });\n\t            this._oldForm = this.form;\n\t        };\n\t        FormGroupDirective.prototype._updateValidators = function () {\n\t            var sync = composeValidators(this._validators);\n\t            this.form.validator = Validators.compose([this.form.validator, sync]);\n\t            var async = composeAsyncValidators(this._asyncValidators);\n\t            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n\t        };\n\t        FormGroupDirective.prototype._checkFormPresent = function () {\n\t            if (!this.form) {\n\t                ReactiveErrors.missingFormException();\n\t            }\n\t        };\n\t        FormGroupDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroup]',\n\t                        providers: [formDirectiveProvider$1],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupDirective.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormGroupDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n\t            'ngSubmit': [{ type: _angular_core.Output },],\n\t        };\n\t        return FormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formGroupNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a nested {@link FormGroup} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the nested {@link FormGroup} you want to link, and\n\t     * will look for a {@link FormGroup} registered with that name in the parent\n\t     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n\t     *\n\t     * Nested form groups can come in handy when you want to validate a sub-group of a\n\t     * form separately from the rest or when you'd like to group the values of certain\n\t     * controls into their own nested object.\n\t     *\n\t     * **Access the group**: You can access the associated {@link FormGroup} using the\n\t     * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n\t     *\n\t     * You can also access individual controls within the group using dot syntax.\n\t     * Ex: `this.form.get('name.first')`\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can set an initial value for each child control when instantiating\n\t     * the {@link FormGroup}, or you can set it programmatically later using\n\t     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormGroupName = (function (_super) {\n\t        __extends$12(FormGroupName, _super);\n\t        function FormGroupName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /** @internal */\n\t        FormGroupName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.groupParentException();\n\t            }\n\t        };\n\t        FormGroupName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormGroupName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n\t        };\n\t        return FormGroupName;\n\t    }(AbstractFormGroupDirective));\n\t    var formArrayNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a nested {@link FormArray} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the nested {@link FormArray} you want to link, and\n\t     * will look for a {@link FormArray} registered with that name in the parent\n\t     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n\t     *\n\t     * Nested form arrays can come in handy when you have a group of form controls but\n\t     * you're not sure how many there will be. Form arrays allow you to create new\n\t     * form controls dynamically.\n\t     *\n\t     * **Access the array**: You can access the associated {@link FormArray} using the\n\t     * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n\t     * Ex: `this.form.get('cities')`.\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can set an initial value for each child control when instantiating\n\t     * the {@link FormArray}, or you can set the value programmatically later using the\n\t     * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n\t     * methods.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n\t     * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n\t     * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n\t     * status is re-calculated.\n\t     *\n\t     * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n\t     * calling its {@link FormArray.push} method.\n\t     *  Ex: `this.form.get('cities').push(new FormControl());`\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormArrayName = (function (_super) {\n\t        __extends$12(FormArrayName, _super);\n\t        function FormArrayName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        FormArrayName.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormArray(this);\n\t        };\n\t        FormArrayName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormArray(this);\n\t            }\n\t        };\n\t        Object.defineProperty(FormArrayName.prototype, \"control\", {\n\t            get: function () { return this.formDirective.getFormArray(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n\t            get: function () {\n\t                return this._parent ? this._parent.formDirective : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"path\", {\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormArrayName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.arrayParentException();\n\t            }\n\t        };\n\t        FormArrayName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormArrayName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormArrayName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n\t        };\n\t        return FormArrayName;\n\t    }(ControlContainer));\n\t    function _hasInvalidParent(parent) {\n\t        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n\t            !(parent instanceof FormArrayName);\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var controlNameBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n\t    };\n\t    /**\n\t     * @whatItDoes  Syncs a {@link FormControl} in an existing {@link FormGroup} to a form control\n\t     * element by name.\n\t     *\n\t     * In other words, this directive ensures that any values written to the {@link FormControl}\n\t     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t     * any values written to the DOM element through user input will be reflected in the\n\t     * {@link FormControl} instance (view -> model).\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the {@link FormControl} instance you want to\n\t     * link, and will look for a {@link FormControl} registered with that name in the\n\t     * closest {@link FormGroup} or {@link FormArray} above it.\n\t     *\n\t     * **Access the control**: You can access the {@link FormControl} associated with\n\t     * this directive by using the {@link AbstractControl.get} method.\n\t     * Ex: `this.form.get('first');`\n\t     *\n\t     * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n\t     * See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     *  **Set value**: You can set an initial value for the control when instantiating the\n\t     *  {@link FormControl}, or you can set it programmatically later using\n\t     *  {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * In this example, we create form controls for first name and last name.\n\t     *\n\t     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t     *\n\t     * To see `formControlName` examples with different form control types, see:\n\t     *\n\t     * * Radio buttons: {@link RadioControlValueAccessor}\n\t     * * Selects: {@link SelectControlValueAccessor}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormControlName = (function (_super) {\n\t        __extends$10(FormControlName, _super);\n\t        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this._added = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlName.prototype.ngOnChanges = function (changes) {\n\t            if (!this._added)\n\t                this._setUpControl();\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.viewModel = this.model;\n\t                this.formDirective.updateModel(this, this.model);\n\t            }\n\t        };\n\t        FormControlName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeControl(this);\n\t            }\n\t        };\n\t        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        Object.defineProperty(FormControlName.prototype, \"path\", {\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"control\", {\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlName.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof FormGroupName) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                ReactiveErrors.ngModelGroupException();\n\t            }\n\t            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n\t                !(this._parent instanceof FormArrayName)) {\n\t                ReactiveErrors.controlParentException();\n\t            }\n\t        };\n\t        FormControlName.prototype._setUpControl = function () {\n\t            this._checkParentType();\n\t            this._control = this.formDirective.addControl(this);\n\t            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                this.valueAccessor.setDisabledState(true);\n\t            }\n\t            this._added = true;\n\t        };\n\t        FormControlName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        FormControlName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlName;\n\t    }(NgControl));\n\t\n\t    var REQUIRED_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A Directive that adds the `required` validator to any controls marked with the\n\t     * `required` attribute, via the {@link NG_VALIDATORS} binding.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input name=\"fullName\" ngModel required>\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var RequiredValidator = (function () {\n\t        function RequiredValidator() {\n\t        }\n\t        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n\t            get: function () { return this._required; },\n\t            set: function (value) {\n\t                this._required = isPresent(value) && \"\" + value !== 'false';\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RequiredValidator.prototype.validate = function (c) {\n\t            return this.required ? Validators.required(c) : null;\n\t        };\n\t        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        RequiredValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n\t                        providers: [REQUIRED_VALIDATOR],\n\t                        host: { '[attr.required]': 'required? \"\" : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RequiredValidator.ctorParameters = [];\n\t        RequiredValidator.propDecorators = {\n\t            'required': [{ type: _angular_core.Input },],\n\t        };\n\t        return RequiredValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='min'}\n\t     */\n\t    var MIN_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n\t     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n\t     *\n\t     * @stable\n\t     */\n\t    var MinLengthValidator = (function () {\n\t        function MinLengthValidator() {\n\t        }\n\t        MinLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n\t        };\n\t        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if (changes['minlength']) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        MinLengthValidator.prototype.validate = function (c) {\n\t            return isPresent(this.minlength) ? this._validator(c) : null;\n\t        };\n\t        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        MinLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n\t                        providers: [MIN_LENGTH_VALIDATOR],\n\t                        host: { '[attr.minlength]': 'minlength? minlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MinLengthValidator.ctorParameters = [];\n\t        MinLengthValidator.propDecorators = {\n\t            'minlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MinLengthValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='max'}\n\t     */\n\t    var MAX_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n\t     * `formControl`,\n\t     * or control with `ngModel` that also has a `maxlength` attribute.\n\t     *\n\t     * @stable\n\t     */\n\t    var MaxLengthValidator = (function () {\n\t        function MaxLengthValidator() {\n\t        }\n\t        MaxLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n\t        };\n\t        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if (changes['maxlength']) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        MaxLengthValidator.prototype.validate = function (c) {\n\t            return isPresent(this.maxlength) ? this._validator(c) : null;\n\t        };\n\t        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        MaxLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n\t                        providers: [MAX_LENGTH_VALIDATOR],\n\t                        host: { '[attr.maxlength]': 'maxlength? maxlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MaxLengthValidator.ctorParameters = [];\n\t        MaxLengthValidator.propDecorators = {\n\t            'maxlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MaxLengthValidator;\n\t    }());\n\t    var PATTERN_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A Directive that adds the `pattern` validator to any controls marked with the\n\t     * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n\t     * as the regex to validate Control value against.  Follows pattern attribute\n\t     * semantics; i.e. regex must match entire Control value.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n\t     * ```\n\t     * @stable\n\t     */\n\t    var PatternValidator = (function () {\n\t        function PatternValidator() {\n\t        }\n\t        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n\t        PatternValidator.prototype.ngOnChanges = function (changes) {\n\t            if (changes['pattern']) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        PatternValidator.prototype.validate = function (c) {\n\t            return isPresent(this.pattern) ? this._validator(c) : null;\n\t        };\n\t        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        PatternValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n\t                        providers: [PATTERN_VALIDATOR],\n\t                        host: { '[attr.pattern]': 'pattern? pattern : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PatternValidator.ctorParameters = [];\n\t        PatternValidator.propDecorators = {\n\t            'pattern': [{ type: _angular_core.Input },],\n\t        };\n\t        return PatternValidator;\n\t    }());\n\t\n\t    /**\n\t     * @whatItDoes Creates an {@link AbstractControl} from a user-specified configuration.\n\t     *\n\t     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n\t     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n\t     * forms.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * To use, inject `FormBuilder` into your component class. You can then call its methods\n\t     * directly.\n\t     *\n\t     * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n\t     *\n\t     *  * **npm package**: `@angular/forms`\n\t     *\n\t     *  * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     * @stable\n\t     */\n\t    var FormBuilder = (function () {\n\t        function FormBuilder() {\n\t        }\n\t        /**\n\t         * Construct a new {@link FormGroup} with the given map of configuration.\n\t         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n\t         *\n\t         * See the {@link FormGroup} constructor for more details.\n\t         */\n\t        FormBuilder.prototype.group = function (controlsConfig, extra) {\n\t            if (extra === void 0) { extra = null; }\n\t            var controls = this._reduceControls(controlsConfig);\n\t            var validator = isPresent(extra) ? extra['validator'] : null;\n\t            var asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n\t            return new FormGroup(controls, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n\t         * `asyncValidator`.\n\t         *\n\t         * `formState` can either be a standalone value for the form control or an object\n\t         * that contains both a value and a disabled status.\n\t         *\n\t         */\n\t        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            return new FormControl(formState, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * Construct a {@link FormArray} from the given `controlsConfig` array of\n\t         * configuration, with the given optional `validator` and `asyncValidator`.\n\t         */\n\t        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n\t            var _this = this;\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n\t            return new FormArray(controls, validator, asyncValidator);\n\t        };\n\t        /** @internal */\n\t        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n\t            var _this = this;\n\t            var controls = {};\n\t            Object.keys(controlsConfig).forEach(function (controlName) {\n\t                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n\t            });\n\t            return controls;\n\t        };\n\t        /** @internal */\n\t        FormBuilder.prototype._createControl = function (controlConfig) {\n\t            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n\t                controlConfig instanceof FormArray) {\n\t                return controlConfig;\n\t            }\n\t            else if (Array.isArray(controlConfig)) {\n\t                var value = controlConfig[0];\n\t                var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n\t                var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n\t                return this.control(value, validator, asyncValidator);\n\t            }\n\t            else {\n\t                return this.control(controlConfig);\n\t            }\n\t        };\n\t        FormBuilder.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        FormBuilder.ctorParameters = [];\n\t        return FormBuilder;\n\t    }());\n\t\n\t    var SHARED_FORM_DIRECTIVES = [\n\t        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n\t        CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor,\n\t        RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator,\n\t        MinLengthValidator, MaxLengthValidator, PatternValidator\n\t    ];\n\t    var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n\t    var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n\t    /**\n\t     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n\t     */\n\t    var InternalFormsSharedModule = (function () {\n\t        function InternalFormsSharedModule() {\n\t        }\n\t        InternalFormsSharedModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{ declarations: SHARED_FORM_DIRECTIVES, exports: SHARED_FORM_DIRECTIVES },] },\n\t        ];\n\t        /** @nocollapse */\n\t        InternalFormsSharedModule.ctorParameters = [];\n\t        return InternalFormsSharedModule;\n\t    }());\n\t\n\t    /**\n\t     * The ng module for forms.\n\t     * @stable\n\t     */\n\t    var FormsModule = (function () {\n\t        function FormsModule() {\n\t        }\n\t        FormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n\t                        providers: [RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormsModule.ctorParameters = [];\n\t        return FormsModule;\n\t    }());\n\t    /**\n\t     * The ng module for reactive forms.\n\t     * @stable\n\t     */\n\t    var ReactiveFormsModule = (function () {\n\t        function ReactiveFormsModule() {\n\t        }\n\t        ReactiveFormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n\t                        providers: [FormBuilder, RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ReactiveFormsModule.ctorParameters = [];\n\t        return ReactiveFormsModule;\n\t    }());\n\t\n\t    exports.AbstractControlDirective = AbstractControlDirective;\n\t    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n\t    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n\t    exports.ControlContainer = ControlContainer;\n\t    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n\t    exports.DefaultValueAccessor = DefaultValueAccessor;\n\t    exports.NgControl = NgControl;\n\t    exports.NgControlStatus = NgControlStatus;\n\t    exports.NgControlStatusGroup = NgControlStatusGroup;\n\t    exports.NgForm = NgForm;\n\t    exports.NgModel = NgModel;\n\t    exports.NgModelGroup = NgModelGroup;\n\t    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n\t    exports.FormControlDirective = FormControlDirective;\n\t    exports.FormControlName = FormControlName;\n\t    exports.FormGroupDirective = FormGroupDirective;\n\t    exports.FormArrayName = FormArrayName;\n\t    exports.FormGroupName = FormGroupName;\n\t    exports.NgSelectOption = NgSelectOption;\n\t    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n\t    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n\t    exports.MaxLengthValidator = MaxLengthValidator;\n\t    exports.MinLengthValidator = MinLengthValidator;\n\t    exports.PatternValidator = PatternValidator;\n\t    exports.RequiredValidator = RequiredValidator;\n\t    exports.FormBuilder = FormBuilder;\n\t    exports.AbstractControl = AbstractControl;\n\t    exports.FormArray = FormArray;\n\t    exports.FormControl = FormControl;\n\t    exports.FormGroup = FormGroup;\n\t    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n\t    exports.NG_VALIDATORS = NG_VALIDATORS;\n\t    exports.Validators = Validators;\n\t    exports.FormsModule = FormsModule;\n\t    exports.ReactiveFormsModule = ReactiveFormsModule;\n\t\n\t}));\n\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// app-routing.module.ts\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(30);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar login_component_1 = __webpack_require__(61);\n\tvar game_selection_component_1 = __webpack_require__(359);\n\tvar waiting_room_component_1 = __webpack_require__(360);\n\tvar in_game_component_1 = __webpack_require__(412);\n\tvar game_history_component_1 = __webpack_require__(413);\n\tvar profile_component_1 = __webpack_require__(414);\n\tvar options_component_1 = __webpack_require__(415);\n\tvar about_component_1 = __webpack_require__(416);\n\tvar routes = [\n\t    { path: \"\", component: profile_component_1.ProfileComponent, canActivate: [auth_service_1.AuthService] },\n\t    { path: \"login\", component: login_component_1.LoginComponent },\n\t    { path: \"game-selection\", component: game_selection_component_1.GameSelectionComponent, canActivate: [auth_service_1.AuthService] },\n\t    { path: \"waiting-room\", component: waiting_room_component_1.WaitingRoomComponent, canActivate: [auth_service_1.AuthService] },\n\t    { path: \"in-game\", component: in_game_component_1.InGameComponent, canActivate: [auth_service_1.AuthService] },\n\t    { path: \"game-history\", component: game_history_component_1.GameHistoryComponent, canActivate: [auth_service_1.AuthService] },\n\t    { path: \"profile\", component: profile_component_1.ProfileComponent, canActivate: [auth_service_1.AuthService] },\n\t    { path: \"options\", component: options_component_1.OptionsComponent, canActivate: [auth_service_1.AuthService] },\n\t    { path: \"about\", component: about_component_1.AboutComponent }\n\t];\n\tvar AppRoutingModule = (function () {\n\t    function AppRoutingModule(authService) {\n\t        this.authService = authService;\n\t    }\n\t    AppRoutingModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [router_1.RouterModule.forRoot(routes)],\n\t            exports: [router_1.RouterModule]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object])\n\t    ], AppRoutingModule);\n\t    return AppRoutingModule;\n\t    var _a;\n\t}());\n\texports.AppRoutingModule = AppRoutingModule;\n\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(30);\n\tvar AuthService = (function () {\n\t    function AuthService(router) {\n\t        this.router = router;\n\t        this.user = undefined;\n\t    }\n\t    AuthService.prototype.canActivate = function (route, state) {\n\t        if (this.user === undefined) {\n\t            this.router.navigate([\"login\"]);\n\t            return false;\n\t        }\n\t        return true;\n\t    };\n\t    AuthService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _a) || Object])\n\t    ], AuthService);\n\t    return AuthService;\n\t    var _a;\n\t}());\n\texports.AuthService = AuthService;\n\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar router_1 = __webpack_require__(30);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar LoginComponent = (function () {\n\t    function LoginComponent(authService, router, apiService) {\n\t        this.authService = authService;\n\t        this.router = router;\n\t        this.apiService = apiService;\n\t        this.register = false;\n\t        this.test = \"\";\n\t        this.loginUser = {\n\t            username: \"\",\n\t            email: \"\",\n\t            password: \"\"\n\t        };\n\t        this.password = \"\";\n\t        this.registerError = \"Passwords must match and be atleast 8 characters\";\n\t        this.error = \"\";\n\t    }\n\t    LoginComponent.prototype.newUser = function () {\n\t        this.register = !this.register;\n\t    };\n\t    ;\n\t    LoginComponent.prototype.sendRegistration = function () {\n\t        var _this = this;\n\t        if (this.passwordVerify()) {\n\t            this.apiService.postObs(\"/api/signup\", this.loginUser).subscribe(function (res) {\n\t                if (res.error) {\n\t                    _this.error = res.message;\n\t                }\n\t                else if (res.user) {\n\t                    _this.authService.user = res.user;\n\t                    _this.router.navigate([\"/\"]);\n\t                }\n\t            });\n\t        }\n\t    };\n\t    ;\n\t    LoginComponent.prototype.passwordVerify = function () {\n\t        if (this.password === this.loginUser.password && this.password.length >= 8) {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    LoginComponent.prototype.sendLogin = function () {\n\t        var _this = this;\n\t        this.apiService.postObs(\"/api/login\", this.loginUser).subscribe(function (res) {\n\t            if (res.loggedIn) {\n\t                _this.authService.user = res.userData[0];\n\t                _this.router.navigate([\"/profile\"]);\n\t            }\n\t            else if (res.error) {\n\t                _this.error = res.message;\n\t            }\n\t        });\n\t    };\n\t    LoginComponent.prototype.about = function () {\n\t        this.router.navigate([\"/about\"]);\n\t    };\n\t    LoginComponent = __decorate([\n\t        core_1.Component({\n\t            template: \"\\n\\t\\t<div>\\n\\t\\t\\t<h2 *ngIf=\\\"register\\\">Username: <span class=\\\"error\\\" *ngIf=\\\"error\\\">{{error}}</span></h2>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"loginUser.username\\\" placeholder=\\\"Username\\\" *ngIf=\\\"register\\\">\\n\\t\\t\\t<h3 class=\\\"error\\\" *ngIf=\\\"error\\\">{{error}}</h3>\\n\\t\\t\\t<h2>Email: </h2>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"loginUser.email\\\" placeholder=\\\"Email\\\">\\n\\n\\t\\t\\t<h2>Password: </h2>\\n\\t\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"loginUser.password\\\" placeholder=\\\"Password\\\">\\n\\n\\t\\t\\t<h2 *ngIf=\\\"register\\\">Re-enter Password: </h2>\\n\\t\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" *ngIf=\\\"register\\\">\\n\\t\\t\\t<h3 class=\\\"error\\\" *ngIf=\\\"register && !passwordVerify()\\\">{{registerError}}</h3>\\n\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"sendLogin()\\\" *ngIf=\\\"!register\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"inside-button\\\">Login</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"sendRegistration()\\\" *ngIf=\\\"register\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"inside-button\\\">Register</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"newUser()\\\" *ngIf=\\\"register\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"inside-button\\\">Login</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"newUser()\\\" *ngIf=\\\"!register\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"inside-button\\\">Create New User</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"button\\\" (click)=\\\"about()\\\">\\n\\t\\t\\t<p class=\\\"inside-button\\\">About</p>\\n\\t\\t</div>\\n\\t\",\n\t            styles: [\"\\n\\t\\tdiv.button: {\\n\\t\\t\\twidth: 49%;\\n\\t\\t\\tbackground-color: #505BFF;\\n\\t\\t\\tborder: none;\\n\\t\\t\\tbox-sizing: border-box;\\n\\t\\t\\tfloat: left;\\n\\t\\t}\\n\\t\"]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object, (typeof (_c = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _c) || Object])\n\t    ], LoginComponent);\n\t    return LoginComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.LoginComponent = LoginComponent;\n\n\n/***/ },\n\n/***/ 62:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// All services are decorated with the @Injectable decorator\n\tvar core_1 = __webpack_require__(3);\n\t// Import the HTTP libraries from the angular http folder\n\tvar http_1 = __webpack_require__(24);\n\t// Import async functionality from the rxjs (\"reactive js\") library, which\n\t// angular 2 uses to manage async requests.\n\tvar Observable_1 = __webpack_require__(5);\n\t__webpack_require__(63);\n\t__webpack_require__(128);\n\t// Decorate our ApiService as Injectable (service)\n\tvar ApiService = (function () {\n\t    // An empty constructor, but we inject the Http provider into our class here\n\t    function ApiService(http) {\n\t        this.http = http;\n\t        // We have different headers for post and get. For post, we are sending\n\t        // content and need a \"content-type\" header\n\t        this.postHeaders = new http_1.Headers({\n\t            \"Content-Type\": \"application/json\",\n\t            \"Accept\": \"application/json\"\n\t        });\n\t        // GET requests do not send any content, and just accept the JSON returned\n\t        this.getHeaders = new http_1.Headers({\n\t            \"Accept\": \"application/json\"\n\t        });\n\t        // This is the url of our server. We'll need to update this if our server\n\t        // moves\n\t        this.url = document.location.origin;\n\t    }\n\t    // A helper function which returns an object version of the response JSON\n\t    ApiService.prototype.getJSON = function (response) {\n\t        return response.json();\n\t    };\n\t    // A helper function which checks if our response was actually an error,\n\t    // and throws an error in that case. We could leverage this function to\n\t    // show a nice error message to the user instead.\n\t    ApiService.prototype.checkForError = function (response) {\n\t        if (response.status >= 200 && response.status < 300) {\n\t            return response;\n\t        }\n\t        else {\n\t            var error = new Error(response.statusText);\n\t            error['response'] = response;\n\t            throw error;\n\t        }\n\t    };\n\t    // Perform a GET request to the server on path `path`.\n\t    // IMPORTANT: This function actually returns an Observable object. This\n\t    // Observable doesn't do anything until we subscribe to it, at which point\n\t    // it performs the action and calls any attached callback functions.\n\t    ApiService.prototype.getObs = function (path) {\n\t        return this.http.get(this.url + path, { headers: this.getHeaders })\n\t            .map(this.checkForError)\n\t            .catch(function (err) { return Observable_1.Observable.throw(err); })\n\t            .map(this.getJSON);\n\t    };\n\t    // See get() for details - this is the same, but performs a POST with a body\n\t    ApiService.prototype.postObs = function (path, data) {\n\t        return this.http.post(this.url + path, data, { headers: this.getHeaders })\n\t            .map(this.checkForError)\n\t            .catch(function (err) { return Observable_1.Observable.throw(err); })\n\t            .map(this.getJSON);\n\t    };\n\t    ApiService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof http_1.Http !== 'undefined' && http_1.Http) === 'function' && _a) || Object])\n\t    ], ApiService);\n\t    return ApiService;\n\t    var _a;\n\t}());\n\texports.ApiService = ApiService;\n\n\n/***/ },\n\n/***/ 359:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar router_1 = __webpack_require__(30);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar GameSelectionComponent = (function () {\n\t    function GameSelectionComponent(apiService, router, authService) {\n\t        this.apiService = apiService;\n\t        this.router = router;\n\t        this.authService = authService;\n\t        this.start = true;\n\t        this.gameCreated = false;\n\t        this.gameJoined = false;\n\t        this.error = false;\n\t        this.errorMessage = \"\";\n\t    }\n\t    GameSelectionComponent.prototype.createGame = function () {\n\t        var _this = this;\n\t        this.apiService.postObs(\"/api/newGame\", { message: \"newgame\" }).subscribe(function (response) {\n\t            if (response.error) {\n\t                _this.error = true;\n\t                _this.errorMessage = response.message;\n\t                return;\n\t            }\n\t            if (response.gameId) {\n\t                _this.error = false;\n\t                _this.errorMessage = \"\";\n\t                _this.gameCreated = true;\n\t                _this.start = false;\n\t                _this.gameId = response.gameId;\n\t                _this.authService.user.currentGame = response.gameId;\n\t            }\n\t        });\n\t    };\n\t    GameSelectionComponent.prototype.joinGame = function () {\n\t        var _this = this;\n\t        this.apiService.postObs(\"/api/joinGame\", { message: \"joingame\", gameId: this.gameId }).subscribe(function (response) {\n\t            if (response.error) {\n\t                _this.error = true;\n\t                _this.errorMessage = response.message;\n\t                return;\n\t            }\n\t            if (response.success) {\n\t                _this.error = false;\n\t                _this.errorMessage = \"\";\n\t                _this.start = false;\n\t                _this.gameJoined = true;\n\t                _this.authService.user.currentGame = response.gameId;\n\t            }\n\t            else {\n\t                _this.error = true;\n\t                _this.errorMessage = \"Error encountered, please try again.\";\n\t            }\n\t        });\n\t    };\n\t    GameSelectionComponent.prototype.enterGame = function () {\n\t        this.router.navigate([\"waiting-room\"]);\n\t    };\n\t    GameSelectionComponent = __decorate([\n\t        core_1.Component({\n\t            template: \"\\n\\t\\t<div *ngIf=\\\"start\\\">\\n\\t\\t\\t<h2>Create or Join a Game</h2>\\n\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Username of Game Admin\\\" [(ngModel)]=\\\"gameId\\\">\\n\\t\\t\\t<div (click)=\\\"joinGame()\\\" class=\\\"button\\\">\\n\\t\\t\\t\\t<p class=\\\"inside-button\\\">Join Game</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div (click)=\\\"createGame()\\\" class=\\\"button\\\">\\n\\t\\t\\t\\t<p class=\\\"inside-button\\\">Create Game</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"gameCreated\\\">\\n\\t\\t\\t<h2>New Game Created</h2>\\n\\t\\t\\t<p class=\\\"styled\\\">Your friends can join your game by entering your username in the join game field.</p>\\n\\t\\t\\t<button class=\\\"button\\\" (click)=\\\"enterGame()\\\">Enter Waiting Room</button>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"gameJoined\\\">\\n\\t\\t\\t<h2>{{gameId}}'s game joined successfully!!!</h2>\\n\\t\\t\\t<button class=\\\"button\\\" (click)=\\\"enterGame()\\\">Enter Waiting Room</button>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"error\\\">\\n\\t\\t\\t<h3 class=\\\"error\\\">{{errorMessage}}</h3>\\n\\t\\t</div>\\n\\t\",\n\t            styles: [\"\\n\\n\\t\\th2 {\\n\\t\\t\\ttext-align: center;\\n\\t\\t\\tfont-family: sans-serif;\\n\\t\\t\\tcolor: #505BFF;\\n\\t\\t\\ttext-shadow: 0 0 20px rgb(73, 125, 232);\\n\\t\\t}\\n\\n\\t\\tp.styled {\\n\\t\\t\\ttext-align: center;\\n\\t\\t\\tfont-family: sans-serif;\\n\\t\\t\\tcolor: #505BFF;\\n\\t\\t\\ttext-shadow: 0 0 20px rgb(73, 125, 232);\\n\\t\\t}\\n\\n\\t\\tdiv.button {\\n\\t\\t\\twidth: 90%;\\n\\t\\t\\theight: 50px;\\n\\t\\t\\tmargin: 15px 15px 0px 15px;\\n\\t\\t\\tborder-radius: 5px;\\n\\t\\t\\tbackground-color: #505BFF;\\n\\t\\t\\t-moz-box-shadow: 0px 0px 20px rgb(73, 125, 232);\\n\\t\\t\\t-webkit-box-shadow: 0px 0px 20px rgb(73, 125, 232);\\n\\t\\t\\tbox-shadow: 0px 0px 20px rgb(73, 125, 232);\\n\\t\\t}\\n\\n\\t\\tinput {\\n\\t\\t\\tfont-size: 20px;\\n\\t\\t\\tfont-family: sans-serif;\\n\\t\\t\\tcolor: black;\\n\\t\\t\\twidth: 90%;\\n\\t\\t\\theight: 50px;\\n\\t\\t\\tmargin: 15px 15px 0px 15px;\\n\\t\\t\\tborder-radius: 5px;\\n\\t\\t\\tbackground-color: #505BFF;\\n\\t\\t\\tborder: 0;\\n\\t\\t\\t-moz-box-shadow: 0px 0px 20px rgb(73, 125, 232);\\n\\t\\t\\t-webkit-box-shadow: 0px 0px 20px rgb(73, 125, 232);\\n\\t\\t\\tbox-shadow: 0px 0px 20px rgb(73, 125, 232);\\n\\t\\t}\\n\\n\\t\\tp.inside-button {\\n\\t\\t\\tcolor: black;\\n\\t\\t\\ttext-align: center;\\n\\t\\t\\tvertical-align: middle;\\n\\t\\t\\tline-height: 50px;\\n\\t\\t\\tfont-size: 20px;\\n\\t\\t\\tfont-family: sans-serif;\\n\\t\\t}\\n\\n\\t\"]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object, (typeof (_c = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _c) || Object])\n\t    ], GameSelectionComponent);\n\t    return GameSelectionComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.GameSelectionComponent = GameSelectionComponent;\n\n\n/***/ },\n\n/***/ 360:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar router_1 = __webpack_require__(30);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar geo_service_1 = __webpack_require__(361);\n\tvar io = __webpack_require__(362);\n\tvar WaitingRoomComponent = (function () {\n\t    function WaitingRoomComponent(apiService, router, authService, geoService) {\n\t        this.apiService = apiService;\n\t        this.router = router;\n\t        this.authService = authService;\n\t        this.geoService = geoService;\n\t        this.gameId = this.authService.user.currentGame;\n\t        this.error = false;\n\t        this.errorMessage = \"\";\n\t    }\n\t    WaitingRoomComponent.prototype.launchGame = function () {\n\t        var _this = this;\n\t        this.apiService.postObs(\"/api/launch\", {\n\t            message: \"launch game\",\n\t            gameId: this.authService.user.currentGame\n\t        }).subscribe(function (res) {\n\t            if (res.success) {\n\t                _this.socket.emit(\"launch\", _this.authService.user.currentGame);\n\t            }\n\t            else {\n\t                _this.error = true;\n\t                _this.errorMessage = res.message;\n\t            }\n\t        });\n\t    };\n\t    ;\n\t    WaitingRoomComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.socket = io();\n\t        this.apiService.getObs(\"/api/game\").subscribe(function (response) {\n\t            if (response.error) {\n\t                _this.error = true;\n\t                _this.errorMessage = response.message;\n\t            }\n\t            _this.gameAdmin = response.gameAdmin;\n\t            _this.players = response.players;\n\t            var toSend = {\n\t                gameId: _this.authService.user.currentGame,\n\t                name: _this.authService.user.name\n\t            };\n\t            _this.socket.emit(\"waiting\", toSend);\n\t        });\n\t        this.geoService.postLocation();\n\t        this.socket.on(\"launch\", function () {\n\t            _this.router.navigate([\"/in-game\"]);\n\t        });\n\t        this.socket.on(\"update waiting\", function (newPlayer) {\n\t            if (!_this.players.includes(newPlayer)) {\n\t                _this.players.push(newPlayer);\n\t            }\n\t            console.log(\"recived waiting update, newPlayer is: \", newPlayer);\n\t        });\n\t    };\n\t    WaitingRoomComponent.prototype.ngOnDestroy = function () {\n\t        this.socket.disconnect();\n\t    };\n\t    WaitingRoomComponent = __decorate([\n\t        core_1.Component({\n\t            template: \"\\n\\t\\t<div *ngIf=\\\"gameAdmin\\\">\\n\\t\\t\\tNew players can not join once game has been launched.\\n\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"launchGame()\\\">\\n\\t\\t\\t\\t<p class=\\\"inside-button\\\">Launch Game</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"!error\\\">\\n\\t\\t\\t<h2>Players: </h2>\\n\\t\\t\\t<ul>\\n\\t\\t\\t\\t<li *ngFor=\\\"let player of players\\\">{{player}}</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"error\\\">\\n\\t\\t\\t<h3 class=\\\"error\\\">{{errorMessage}}</h3>\\n\\t\\t</div>\\n\\t\",\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object, (typeof (_c = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _c) || Object, (typeof (_d = typeof geo_service_1.GeoService !== 'undefined' && geo_service_1.GeoService) === 'function' && _d) || Object])\n\t    ], WaitingRoomComponent);\n\t    return WaitingRoomComponent;\n\t    var _a, _b, _c, _d;\n\t}());\n\texports.WaitingRoomComponent = WaitingRoomComponent;\n\n\n/***/ },\n\n/***/ 361:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar GeoService = (function () {\n\t    function GeoService(apiService) {\n\t        this.apiService = apiService;\n\t        this.positionOptions = {\n\t            enableHighAccuracy: true,\n\t            timeout: 15000,\n\t            maximumAge: 1000\n\t        };\n\t    }\n\t    GeoService.prototype.postLocation = function () {\n\t        navigator.geolocation.getCurrentPosition(this.postPositionSuccess.bind(this), this.handlePositionError.bind(this), this.positionOptions);\n\t    };\n\t    GeoService.prototype.getLocation = function (success, failure) {\n\t        navigator.geolocation.getCurrentPosition(success, failure, this.positionOptions);\n\t    };\n\t    GeoService.prototype.postPositionSuccess = function (pos) {\n\t        var coor = pos.coords;\n\t        var time = pos.timestamp;\n\t        var data = {\n\t            location: {\n\t                longitude: coor.longitude,\n\t                latitude: coor.latitude,\n\t                accuracy: coor.accuracy,\n\t                timestamp: time\n\t            }\n\t        };\n\t        this.apiService.postObs(\"/api/location\", data).subscribe(function (res) {\n\t            // todo update this to actually tell the user something useful\n\t            if (res.error) {\n\t                console.log(res.message);\n\t            }\n\t            console.log(res.message);\n\t        });\n\t    };\n\t    GeoService.prototype.getPositionSuccess = function (pos) {\n\t        var coor = pos.coords;\n\t        var time = pos.timestamp;\n\t        console.log(time);\n\t        return {\n\t            longitude: coor.longitude,\n\t            latitude: coor.latitude,\n\t            accuracy: coor.accuracy,\n\t            timestamp: time\n\t        };\n\t    };\n\t    GeoService.prototype.handlePositionError = function (err) {\n\t        console.warn('ERROR(' + err.code + '): ' + err.message);\n\t    };\n\t    GeoService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _a) || Object])\n\t    ], GeoService);\n\t    return GeoService;\n\t    var _a;\n\t}());\n\texports.GeoService = GeoService;\n\n\n/***/ },\n\n/***/ 362:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar url = __webpack_require__(363);\n\tvar parser = __webpack_require__(368);\n\tvar Manager = __webpack_require__(376);\n\tvar debug = __webpack_require__(365)('socket.io-client');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\n\t * Managers cache.\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\n\t * Looks up an existing `Manager` for multiplexing.\n\t * If the user summons:\n\t *\n\t *   `io('http://localhost/a');`\n\t *   `io('http://localhost/b');`\n\t *\n\t * We reuse the existing instance based on same scheme/port/host,\n\t * and we initialize sockets for each namespace.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction lookup (uri, opts) {\n\t  if (typeof uri === 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] ||\n\t                      false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t    debug('ignoring socket cache for %s', source);\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t      debug('new io instance for %s', source);\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t  if (parsed.query && !opts.query) {\n\t    opts.query = parsed.query;\n\t  } else if (opts && 'object' === typeof opts.query) {\n\t    opts.query = encodeQueryString(opts.query);\n\t  }\n\t  return io.socket(parsed.path, opts);\n\t}\n\t/**\n\t *  Helper method to parse query objects to string.\n\t * @param {object} query\n\t * @returns {string}\n\t */\n\tfunction encodeQueryString (obj) {\n\t  var str = [];\n\t  for (var p in obj) {\n\t    if (obj.hasOwnProperty(p)) {\n\t      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n\t    }\n\t  }\n\t  return str.join('&');\n\t}\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\n\t * `connect`.\n\t *\n\t * @param {String} uri\n\t * @api public\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\n\t * Expose constructors for standalone build.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Manager = __webpack_require__(376);\n\texports.Socket = __webpack_require__(404);\n\n\n/***/ },\n\n/***/ 363:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parseuri = __webpack_require__(364);\n\tvar debug = __webpack_require__(365)('socket.io-client:url');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\n\t * URL parser.\n\t *\n\t * @param {String} url\n\t * @param {Object} An object meant to mimic window.location.\n\t *                 Defaults to window.location.\n\t * @api public\n\t */\n\t\n\tfunction url (uri, loc) {\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  loc = loc || global.location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' === typeof uri) {\n\t    if ('/' === uri.charAt(0)) {\n\t      if ('/' === uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t      debug('protocol-less url %s', uri);\n\t      if ('undefined' !== typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t    debug('parse %s', uri);\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\t\n\t  return obj;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 364:\n/***/ function(module, exports) {\n\n\t/**\n\t * Parses an URI\n\t *\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\n\t * @api private\n\t */\n\t\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\t\n\tvar parts = [\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n\t];\n\t\n\tmodule.exports = function parseuri(str) {\n\t    var src = str,\n\t        b = str.indexOf('['),\n\t        e = str.indexOf(']');\n\t\n\t    if (b != -1 && e != -1) {\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n\t    }\n\t\n\t    var m = re.exec(str || ''),\n\t        uri = {},\n\t        i = 14;\n\t\n\t    while (i--) {\n\t        uri[parts[i]] = m[i] || '';\n\t    }\n\t\n\t    if (b != -1 && e != -1) {\n\t        uri.source = src;\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n\t        uri.ipv6uri = true;\n\t    }\n\t\n\t    return uri;\n\t};\n\n\n/***/ },\n\n/***/ 365:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(366);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  return ('WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  return JSON.stringify(v);\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\n\n/***/ },\n\n/***/ 366:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(367);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    if ('function' === typeof exports.formatArgs) {\n\t      args = exports.formatArgs.apply(self, args);\n\t    }\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n\n/***/ 367:\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options){\n\t  options = options || {};\n\t  if ('string' == typeof val) return parse(val);\n\t  return options.long\n\t    ? long(val)\n\t    : short(val);\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = '' + str;\n\t  if (str.length > 10000) return;\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\t  if (!match) return;\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction short(ms) {\n\t  if (ms >= d) return Math.round(ms / d) + 'd';\n\t  if (ms >= h) return Math.round(ms / h) + 'h';\n\t  if (ms >= m) return Math.round(ms / m) + 'm';\n\t  if (ms >= s) return Math.round(ms / s) + 's';\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction long(ms) {\n\t  return plural(ms, d, 'day')\n\t    || plural(ms, h, 'hour')\n\t    || plural(ms, m, 'minute')\n\t    || plural(ms, s, 'second')\n\t    || ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) return;\n\t  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ },\n\n/***/ 368:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(365)('socket.io-parser');\n\tvar json = __webpack_require__(369);\n\tvar Emitter = __webpack_require__(372);\n\tvar binary = __webpack_require__(373);\n\tvar isBuf = __webpack_require__(375);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = 4;\n\t\n\t/**\n\t * Packet types.\n\t *\n\t * @api public\n\t */\n\t\n\texports.types = [\n\t  'CONNECT',\n\t  'DISCONNECT',\n\t  'EVENT',\n\t  'ACK',\n\t  'ERROR',\n\t  'BINARY_EVENT',\n\t  'BINARY_ACK'\n\t];\n\t\n\t/**\n\t * Packet type `connect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.CONNECT = 0;\n\t\n\t/**\n\t * Packet type `disconnect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.DISCONNECT = 1;\n\t\n\t/**\n\t * Packet type `event`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.EVENT = 2;\n\t\n\t/**\n\t * Packet type `ack`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ACK = 3;\n\t\n\t/**\n\t * Packet type `error`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ERROR = 4;\n\t\n\t/**\n\t * Packet type 'binary event'\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_EVENT = 5;\n\t\n\t/**\n\t * Packet type `binary ack`. For acks with binary arguments.\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_ACK = 6;\n\t\n\t/**\n\t * Encoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Encoder = Encoder;\n\t\n\t/**\n\t * Decoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Decoder = Decoder;\n\t\n\t/**\n\t * A socket.io Encoder instance\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Encoder() {}\n\t\n\t/**\n\t * Encode a packet as a single string if non-binary, or as a\n\t * buffer sequence, depending on packet type.\n\t *\n\t * @param {Object} obj - packet object\n\t * @param {Function} callback - function to handle encodings (likely engine.write)\n\t * @return Calls callback with Array of encodings\n\t * @api public\n\t */\n\t\n\tEncoder.prototype.encode = function(obj, callback){\n\t  debug('encoding packet %j', obj);\n\t\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    encodeAsBinary(obj, callback);\n\t  }\n\t  else {\n\t    var encoding = encodeAsString(obj);\n\t    callback([encoding]);\n\t  }\n\t};\n\t\n\t/**\n\t * Encode packet as string.\n\t *\n\t * @param {Object} packet\n\t * @return {String} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsString(obj) {\n\t  var str = '';\n\t  var nsp = false;\n\t\n\t  // first is type\n\t  str += obj.type;\n\t\n\t  // attachments if we have them\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    str += obj.attachments;\n\t    str += '-';\n\t  }\n\t\n\t  // if we have a namespace other than `/`\n\t  // we append it followed by a comma `,`\n\t  if (obj.nsp && '/' != obj.nsp) {\n\t    nsp = true;\n\t    str += obj.nsp;\n\t  }\n\t\n\t  // immediately followed by the id\n\t  if (null != obj.id) {\n\t    if (nsp) {\n\t      str += ',';\n\t      nsp = false;\n\t    }\n\t    str += obj.id;\n\t  }\n\t\n\t  // json data\n\t  if (null != obj.data) {\n\t    if (nsp) str += ',';\n\t    str += json.stringify(obj.data);\n\t  }\n\t\n\t  debug('encoded %j as %s', obj, str);\n\t  return str;\n\t}\n\t\n\t/**\n\t * Encode packet as 'buffer sequence' by removing blobs, and\n\t * deconstructing packet into object with placeholders and\n\t * a list of buffers.\n\t *\n\t * @param {Object} packet\n\t * @return {Buffer} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsBinary(obj, callback) {\n\t\n\t  function writeEncoding(bloblessData) {\n\t    var deconstruction = binary.deconstructPacket(bloblessData);\n\t    var pack = encodeAsString(deconstruction.packet);\n\t    var buffers = deconstruction.buffers;\n\t\n\t    buffers.unshift(pack); // add packet info to beginning of data list\n\t    callback(buffers); // write all the buffers\n\t  }\n\t\n\t  binary.removeBlobs(obj, writeEncoding);\n\t}\n\t\n\t/**\n\t * A socket.io Decoder instance\n\t *\n\t * @return {Object} decoder\n\t * @api public\n\t */\n\t\n\tfunction Decoder() {\n\t  this.reconstructor = null;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter` with Decoder.\n\t */\n\t\n\tEmitter(Decoder.prototype);\n\t\n\t/**\n\t * Decodes an ecoded packet string into packet JSON.\n\t *\n\t * @param {String} obj - encoded packet\n\t * @return {Object} packet\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.add = function(obj) {\n\t  var packet;\n\t  if ('string' == typeof obj) {\n\t    packet = decodeString(obj);\n\t    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n\t      this.reconstructor = new BinaryReconstructor(packet);\n\t\n\t      // no attachments, labeled binary but no binary data to follow\n\t      if (this.reconstructor.reconPack.attachments === 0) {\n\t        this.emit('decoded', packet);\n\t      }\n\t    } else { // non-binary full packet\n\t      this.emit('decoded', packet);\n\t    }\n\t  }\n\t  else if (isBuf(obj) || obj.base64) { // raw binary data\n\t    if (!this.reconstructor) {\n\t      throw new Error('got binary data when not reconstructing a packet');\n\t    } else {\n\t      packet = this.reconstructor.takeBinaryData(obj);\n\t      if (packet) { // received final buffer\n\t        this.reconstructor = null;\n\t        this.emit('decoded', packet);\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    throw new Error('Unknown type: ' + obj);\n\t  }\n\t};\n\t\n\t/**\n\t * Decode a packet String (JSON data)\n\t *\n\t * @param {String} str\n\t * @return {Object} packet\n\t * @api private\n\t */\n\t\n\tfunction decodeString(str) {\n\t  var p = {};\n\t  var i = 0;\n\t\n\t  // look up type\n\t  p.type = Number(str.charAt(0));\n\t  if (null == exports.types[p.type]) return error();\n\t\n\t  // look up attachments if type binary\n\t  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n\t    var buf = '';\n\t    while (str.charAt(++i) != '-') {\n\t      buf += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    if (buf != Number(buf) || str.charAt(i) != '-') {\n\t      throw new Error('Illegal attachments');\n\t    }\n\t    p.attachments = Number(buf);\n\t  }\n\t\n\t  // look up namespace (if any)\n\t  if ('/' == str.charAt(i + 1)) {\n\t    p.nsp = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (',' == c) break;\n\t      p.nsp += c;\n\t      if (i == str.length) break;\n\t    }\n\t  } else {\n\t    p.nsp = '/';\n\t  }\n\t\n\t  // look up id\n\t  var next = str.charAt(i + 1);\n\t  if ('' !== next && Number(next) == next) {\n\t    p.id = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (null == c || Number(c) != c) {\n\t        --i;\n\t        break;\n\t      }\n\t      p.id += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    p.id = Number(p.id);\n\t  }\n\t\n\t  // look up json data\n\t  if (str.charAt(++i)) {\n\t    p = tryParse(p, str.substr(i));\n\t  }\n\t\n\t  debug('decoded %s as %j', str, p);\n\t  return p;\n\t}\n\t\n\tfunction tryParse(p, str) {\n\t  try {\n\t    p.data = json.parse(str);\n\t  } catch(e){\n\t    return error();\n\t  }\n\t  return p; \n\t};\n\t\n\t/**\n\t * Deallocates a parser's resources\n\t *\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.destroy = function() {\n\t  if (this.reconstructor) {\n\t    this.reconstructor.finishedReconstruction();\n\t  }\n\t};\n\t\n\t/**\n\t * A manager of a binary event's 'buffer sequence'. Should\n\t * be constructed whenever a packet of type BINARY_EVENT is\n\t * decoded.\n\t *\n\t * @param {Object} packet\n\t * @return {BinaryReconstructor} initialized reconstructor\n\t * @api private\n\t */\n\t\n\tfunction BinaryReconstructor(packet) {\n\t  this.reconPack = packet;\n\t  this.buffers = [];\n\t}\n\t\n\t/**\n\t * Method to be called when binary data received from connection\n\t * after a BINARY_EVENT packet.\n\t *\n\t * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n\t * @return {null | Object} returns null if more binary data is expected or\n\t *   a reconstructed packet object if all buffers have been received.\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n\t  this.buffers.push(binData);\n\t  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n\t    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n\t    this.finishedReconstruction();\n\t    return packet;\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Cleans up binary packet reconstruction variables.\n\t *\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.finishedReconstruction = function() {\n\t  this.reconPack = null;\n\t  this.buffers = [];\n\t};\n\t\n\tfunction error(data){\n\t  return {\n\t    type: exports.ERROR,\n\t    data: 'parser error'\n\t  };\n\t}\n\n\n/***/ },\n\n/***/ 369:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n\t;(function () {\n\t  // Detect the `define` function exposed by asynchronous module loaders. The\n\t  // strict `define` check is necessary for compatibility with `r.js`.\n\t  var isLoader = \"function\" === \"function\" && __webpack_require__(371);\n\t\n\t  // A set of types used to distinguish objects from primitives.\n\t  var objectTypes = {\n\t    \"function\": true,\n\t    \"object\": true\n\t  };\n\t\n\t  // Detect the `exports` object exposed by CommonJS implementations.\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  // Use the `global` object exposed by Node (including Browserify via\n\t  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n\t  // and the `window` object in browsers. Rhino exports a `global` function\n\t  // instead.\n\t  var root = objectTypes[typeof window] && window || this,\n\t      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\t\n\t  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n\t    root = freeGlobal;\n\t  }\n\t\n\t  // Public: Initializes JSON 3 using the given `context` object, attaching the\n\t  // `stringify` and `parse` functions to the specified `exports` object.\n\t  function runInContext(context, exports) {\n\t    context || (context = root[\"Object\"]());\n\t    exports || (exports = root[\"Object\"]());\n\t\n\t    // Native constructor aliases.\n\t    var Number = context[\"Number\"] || root[\"Number\"],\n\t        String = context[\"String\"] || root[\"String\"],\n\t        Object = context[\"Object\"] || root[\"Object\"],\n\t        Date = context[\"Date\"] || root[\"Date\"],\n\t        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n\t        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n\t        Math = context[\"Math\"] || root[\"Math\"],\n\t        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\t\n\t    // Delegate to the native `stringify` and `parse` implementations.\n\t    if (typeof nativeJSON == \"object\" && nativeJSON) {\n\t      exports.stringify = nativeJSON.stringify;\n\t      exports.parse = nativeJSON.parse;\n\t    }\n\t\n\t    // Convenience aliases.\n\t    var objectProto = Object.prototype,\n\t        getClass = objectProto.toString,\n\t        isProperty, forEach, undef;\n\t\n\t    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\t    var isExtended = new Date(-3509827334573292);\n\t    try {\n\t      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n\t      // results for certain dates in Opera >= 10.53.\n\t      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n\t        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n\t        // but clips the values returned by the date methods to the range of\n\t        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n\t        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n\t    } catch (exception) {}\n\t\n\t    // Internal: Determines whether the native `JSON.stringify` and `parse`\n\t    // implementations are spec-compliant. Based on work by Ken Snyder.\n\t    function has(name) {\n\t      if (has[name] !== undef) {\n\t        // Return cached feature test result.\n\t        return has[name];\n\t      }\n\t      var isSupported;\n\t      if (name == \"bug-string-char-index\") {\n\t        // IE <= 7 doesn't support accessing string characters using square\n\t        // bracket notation. IE 8 only supports this for primitives.\n\t        isSupported = \"a\"[0] != \"a\";\n\t      } else if (name == \"json\") {\n\t        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n\t        // supported.\n\t        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n\t      } else {\n\t        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n\t        // Test `JSON.stringify`.\n\t        if (name == \"json-stringify\") {\n\t          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n\t          if (stringifySupported) {\n\t            // A test function object with a custom `toJSON` method.\n\t            (value = function () {\n\t              return 1;\n\t            }).toJSON = value;\n\t            try {\n\t              stringifySupported =\n\t                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n\t                // primitives as object literals.\n\t                stringify(0) === \"0\" &&\n\t                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n\t                // literals.\n\t                stringify(new Number()) === \"0\" &&\n\t                stringify(new String()) == '\"\"' &&\n\t                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n\t                // does not define a canonical JSON representation (this applies to\n\t                // objects with `toJSON` properties as well, *unless* they are nested\n\t                // within an object or array).\n\t                stringify(getClass) === undef &&\n\t                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n\t                // FF 3.1b3 pass this test.\n\t                stringify(undef) === undef &&\n\t                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n\t                // respectively, if the value is omitted entirely.\n\t                stringify() === undef &&\n\t                // FF 3.1b1, 2 throw an error if the given value is not a number,\n\t                // string, array, object, Boolean, or `null` literal. This applies to\n\t                // objects with custom `toJSON` methods as well, unless they are nested\n\t                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n\t                // methods entirely.\n\t                stringify(value) === \"1\" &&\n\t                stringify([value]) == \"[1]\" &&\n\t                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n\t                // `\"[null]\"`.\n\t                stringify([undef]) == \"[null]\" &&\n\t                // YUI 3.0.0b1 fails to serialize `null` literals.\n\t                stringify(null) == \"null\" &&\n\t                // FF 3.1b1, 2 halts serialization if an array contains a function:\n\t                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n\t                // elides non-JSON values from objects and arrays, unless they\n\t                // define custom `toJSON` methods.\n\t                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n\t                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n\t                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n\t                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n\t                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n\t                stringify(null, value) === \"1\" &&\n\t                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n\t                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n\t                // serialize extended years.\n\t                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n\t                // The milliseconds are optional in ES 5, but required in 5.1.\n\t                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n\t                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n\t                // four-digit years instead of six-digit years. Credits: @Yaffle.\n\t                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n\t                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n\t                // values less than 1000. Credits: @Yaffle.\n\t                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n\t            } catch (exception) {\n\t              stringifySupported = false;\n\t            }\n\t          }\n\t          isSupported = stringifySupported;\n\t        }\n\t        // Test `JSON.parse`.\n\t        if (name == \"json-parse\") {\n\t          var parse = exports.parse;\n\t          if (typeof parse == \"function\") {\n\t            try {\n\t              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n\t              // Conforming implementations should also coerce the initial argument to\n\t              // a string prior to parsing.\n\t              if (parse(\"0\") === 0 && !parse(false)) {\n\t                // Simple parsing test.\n\t                value = parse(serialized);\n\t                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\t                if (parseSupported) {\n\t                  try {\n\t                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n\t                    parseSupported = !parse('\"\\t\"');\n\t                  } catch (exception) {}\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n\t                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n\t                      // certain octal literals.\n\t                      parseSupported = parse(\"01\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n\t                      // points. These environments, along with FF 3.1b1 and 2,\n\t                      // also allow trailing commas in JSON objects and arrays.\n\t                      parseSupported = parse(\"1.\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                }\n\t              }\n\t            } catch (exception) {\n\t              parseSupported = false;\n\t            }\n\t          }\n\t          isSupported = parseSupported;\n\t        }\n\t      }\n\t      return has[name] = !!isSupported;\n\t    }\n\t\n\t    if (!has(\"json\")) {\n\t      // Common `[[Class]]` name aliases.\n\t      var functionClass = \"[object Function]\",\n\t          dateClass = \"[object Date]\",\n\t          numberClass = \"[object Number]\",\n\t          stringClass = \"[object String]\",\n\t          arrayClass = \"[object Array]\",\n\t          booleanClass = \"[object Boolean]\";\n\t\n\t      // Detect incomplete support for accessing string characters by index.\n\t      var charIndexBuggy = has(\"bug-string-char-index\");\n\t\n\t      // Define additional utility methods if the `Date` methods are buggy.\n\t      if (!isExtended) {\n\t        var floor = Math.floor;\n\t        // A mapping between the months of the year and the number of days between\n\t        // January 1st and the first of the respective month.\n\t        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\t        // Internal: Calculates the number of days between the Unix epoch and the\n\t        // first day of the given month.\n\t        var getDay = function (year, month) {\n\t          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n\t        };\n\t      }\n\t\n\t      // Internal: Determines if a property is a direct property of the given\n\t      // object. Delegates to the native `Object#hasOwnProperty` method.\n\t      if (!(isProperty = objectProto.hasOwnProperty)) {\n\t        isProperty = function (property) {\n\t          var members = {}, constructor;\n\t          if ((members.__proto__ = null, members.__proto__ = {\n\t            // The *proto* property cannot be set multiple times in recent\n\t            // versions of Firefox and SeaMonkey.\n\t            \"toString\": 1\n\t          }, members).toString != getClass) {\n\t            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n\t            // supports the mutable *proto* property.\n\t            isProperty = function (property) {\n\t              // Capture and break the object's prototype chain (see section 8.6.2\n\t              // of the ES 5.1 spec). The parenthesized expression prevents an\n\t              // unsafe transformation by the Closure Compiler.\n\t              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n\t              // Restore the original prototype chain.\n\t              this.__proto__ = original;\n\t              return result;\n\t            };\n\t          } else {\n\t            // Capture a reference to the top-level `Object` constructor.\n\t            constructor = members.constructor;\n\t            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n\t            // other environments.\n\t            isProperty = function (property) {\n\t              var parent = (this.constructor || constructor).prototype;\n\t              return property in this && !(property in parent && this[property] === parent[property]);\n\t            };\n\t          }\n\t          members = null;\n\t          return isProperty.call(this, property);\n\t        };\n\t      }\n\t\n\t      // Internal: Normalizes the `for...in` iteration algorithm across\n\t      // environments. Each enumerated key is yielded to a `callback` function.\n\t      forEach = function (object, callback) {\n\t        var size = 0, Properties, members, property;\n\t\n\t        // Tests for bugs in the current environment's `for...in` algorithm. The\n\t        // `valueOf` property inherits the non-enumerable flag from\n\t        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\t        (Properties = function () {\n\t          this.valueOf = 0;\n\t        }).prototype.valueOf = 0;\n\t\n\t        // Iterate over a new instance of the `Properties` class.\n\t        members = new Properties();\n\t        for (property in members) {\n\t          // Ignore all properties inherited from `Object.prototype`.\n\t          if (isProperty.call(members, property)) {\n\t            size++;\n\t          }\n\t        }\n\t        Properties = members = null;\n\t\n\t        // Normalize the iteration algorithm.\n\t        if (!size) {\n\t          // A list of non-enumerable properties inherited from `Object.prototype`.\n\t          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n\t          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n\t          // properties.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, length;\n\t            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n\t            for (property in object) {\n\t              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n\t              // certain conditions; IE does not.\n\t              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for each non-enumerable property.\n\t            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n\t          };\n\t        } else if (size == 2) {\n\t          // Safari <= 2.0.4 enumerates shadowed properties twice.\n\t          forEach = function (object, callback) {\n\t            // Create a set of iterated properties.\n\t            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n\t            for (property in object) {\n\t              // Store each property name to prevent double enumeration. The\n\t              // `prototype` property of functions is not enumerated due to cross-\n\t              // environment inconsistencies.\n\t              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t          };\n\t        } else {\n\t          // No bugs detected; use the standard `for...in` algorithm.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n\t            for (property in object) {\n\t              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for the `constructor` property due to\n\t            // cross-environment inconsistencies.\n\t            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n\t              callback(property);\n\t            }\n\t          };\n\t        }\n\t        return forEach(object, callback);\n\t      };\n\t\n\t      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n\t      // `filter` argument may specify either a function that alters how object and\n\t      // array members are serialized, or an array of strings and numbers that\n\t      // indicates which properties should be serialized. The optional `width`\n\t      // argument may be either a string or number that specifies the indentation\n\t      // level of the output.\n\t      if (!has(\"json-stringify\")) {\n\t        // Internal: A map of control characters and their escaped equivalents.\n\t        var Escapes = {\n\t          92: \"\\\\\\\\\",\n\t          34: '\\\\\"',\n\t          8: \"\\\\b\",\n\t          12: \"\\\\f\",\n\t          10: \"\\\\n\",\n\t          13: \"\\\\r\",\n\t          9: \"\\\\t\"\n\t        };\n\t\n\t        // Internal: Converts `value` into a zero-padded string such that its\n\t        // length is at least equal to `width`. The `width` must be <= 6.\n\t        var leadingZeroes = \"000000\";\n\t        var toPaddedString = function (width, value) {\n\t          // The `|| 0` expression is necessary to work around a bug in\n\t          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n\t          return (leadingZeroes + (value || 0)).slice(-width);\n\t        };\n\t\n\t        // Internal: Double-quotes a string `value`, replacing all ASCII control\n\t        // characters (characters with code unit values between 0 and 31) with\n\t        // their escaped equivalents. This is an implementation of the\n\t        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\t        var unicodePrefix = \"\\\\u00\";\n\t        var quote = function (value) {\n\t          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n\t          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\t          for (; index < length; index++) {\n\t            var charCode = value.charCodeAt(index);\n\t            // If the character is a control character, append its Unicode or\n\t            // shorthand escape sequence; otherwise, append the character as-is.\n\t            switch (charCode) {\n\t              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n\t                result += Escapes[charCode];\n\t                break;\n\t              default:\n\t                if (charCode < 32) {\n\t                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n\t                  break;\n\t                }\n\t                result += useCharIndex ? symbols[index] : value.charAt(index);\n\t            }\n\t          }\n\t          return result + '\"';\n\t        };\n\t\n\t        // Internal: Recursively serializes an object. Implements the\n\t        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\t        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n\t          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\t          try {\n\t            // Necessary for host object support.\n\t            value = object[property];\n\t          } catch (exception) {}\n\t          if (typeof value == \"object\" && value) {\n\t            className = getClass.call(value);\n\t            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n\t              if (value > -1 / 0 && value < 1 / 0) {\n\t                // Dates are serialized according to the `Date#toJSON` method\n\t                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n\t                // for the ISO 8601 date time string format.\n\t                if (getDay) {\n\t                  // Manually compute the year, month, date, hours, minutes,\n\t                  // seconds, and milliseconds if the `getUTC*` methods are\n\t                  // buggy. Adapted from @Yaffle's `date-shim` project.\n\t                  date = floor(value / 864e5);\n\t                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n\t                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n\t                  date = 1 + date - getDay(year, month);\n\t                  // The `time` value specifies the time within the day (see ES\n\t                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n\t                  // to compute `A modulo B`, as the `%` operator does not\n\t                  // correspond to the `modulo` operation for negative numbers.\n\t                  time = (value % 864e5 + 864e5) % 864e5;\n\t                  // The hours, minutes, seconds, and milliseconds are obtained by\n\t                  // decomposing the time within the day. See section 15.9.1.10.\n\t                  hours = floor(time / 36e5) % 24;\n\t                  minutes = floor(time / 6e4) % 60;\n\t                  seconds = floor(time / 1e3) % 60;\n\t                  milliseconds = time % 1e3;\n\t                } else {\n\t                  year = value.getUTCFullYear();\n\t                  month = value.getUTCMonth();\n\t                  date = value.getUTCDate();\n\t                  hours = value.getUTCHours();\n\t                  minutes = value.getUTCMinutes();\n\t                  seconds = value.getUTCSeconds();\n\t                  milliseconds = value.getUTCMilliseconds();\n\t                }\n\t                // Serialize extended years correctly.\n\t                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n\t                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n\t                  // Months, dates, hours, minutes, and seconds should have two\n\t                  // digits; milliseconds should have three.\n\t                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n\t                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n\t                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n\t              } else {\n\t                value = null;\n\t              }\n\t            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n\t              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n\t              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n\t              // ignores all `toJSON` methods on these objects unless they are\n\t              // defined directly on an instance.\n\t              value = value.toJSON(property);\n\t            }\n\t          }\n\t          if (callback) {\n\t            // If a replacement function was provided, call it to obtain the value\n\t            // for serialization.\n\t            value = callback.call(object, property, value);\n\t          }\n\t          if (value === null) {\n\t            return \"null\";\n\t          }\n\t          className = getClass.call(value);\n\t          if (className == booleanClass) {\n\t            // Booleans are represented literally.\n\t            return \"\" + value;\n\t          } else if (className == numberClass) {\n\t            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n\t            // `\"null\"`.\n\t            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n\t          } else if (className == stringClass) {\n\t            // Strings are double-quoted and escaped.\n\t            return quote(\"\" + value);\n\t          }\n\t          // Recursively serialize objects and arrays.\n\t          if (typeof value == \"object\") {\n\t            // Check for cyclic structures. This is a linear search; performance\n\t            // is inversely proportional to the number of unique nested objects.\n\t            for (length = stack.length; length--;) {\n\t              if (stack[length] === value) {\n\t                // Cyclic structures cannot be serialized by `JSON.stringify`.\n\t                throw TypeError();\n\t              }\n\t            }\n\t            // Add the object to the stack of traversed objects.\n\t            stack.push(value);\n\t            results = [];\n\t            // Save the current indentation level and indent one additional level.\n\t            prefix = indentation;\n\t            indentation += whitespace;\n\t            if (className == arrayClass) {\n\t              // Recursively serialize array elements.\n\t              for (index = 0, length = value.length; index < length; index++) {\n\t                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n\t                results.push(element === undef ? \"null\" : element);\n\t              }\n\t              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n\t            } else {\n\t              // Recursively serialize object members. Members are selected from\n\t              // either a user-specified list of property names, or the object\n\t              // itself.\n\t              forEach(properties || value, function (property) {\n\t                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\t                if (element !== undef) {\n\t                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n\t                  // is not the empty string, let `member` {quote(property) + \":\"}\n\t                  // be the concatenation of `member` and the `space` character.\"\n\t                  // The \"`space` character\" refers to the literal space\n\t                  // character, not the `space` {width} argument provided to\n\t                  // `JSON.stringify`.\n\t                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n\t                }\n\t              });\n\t              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n\t            }\n\t            // Remove the object from the traversed object stack.\n\t            stack.pop();\n\t            return result;\n\t          }\n\t        };\n\t\n\t        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\t        exports.stringify = function (source, filter, width) {\n\t          var whitespace, callback, properties, className;\n\t          if (objectTypes[typeof filter] && filter) {\n\t            if ((className = getClass.call(filter)) == functionClass) {\n\t              callback = filter;\n\t            } else if (className == arrayClass) {\n\t              // Convert the property names array into a makeshift set.\n\t              properties = {};\n\t              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n\t            }\n\t          }\n\t          if (width) {\n\t            if ((className = getClass.call(width)) == numberClass) {\n\t              // Convert the `width` to an integer and create a string containing\n\t              // `width` number of space characters.\n\t              if ((width -= width % 1) > 0) {\n\t                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n\t              }\n\t            } else if (className == stringClass) {\n\t              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n\t            }\n\t          }\n\t          // Opera <= 7.54u2 discards the values associated with empty string keys\n\t          // (`\"\"`) only if they are used directly within an object member list\n\t          // (e.g., `!(\"\" in { \"\": 1})`).\n\t          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n\t        };\n\t      }\n\t\n\t      // Public: Parses a JSON source string.\n\t      if (!has(\"json-parse\")) {\n\t        var fromCharCode = String.fromCharCode;\n\t\n\t        // Internal: A map of escaped control characters and their unescaped\n\t        // equivalents.\n\t        var Unescapes = {\n\t          92: \"\\\\\",\n\t          34: '\"',\n\t          47: \"/\",\n\t          98: \"\\b\",\n\t          116: \"\\t\",\n\t          110: \"\\n\",\n\t          102: \"\\f\",\n\t          114: \"\\r\"\n\t        };\n\t\n\t        // Internal: Stores the parser state.\n\t        var Index, Source;\n\t\n\t        // Internal: Resets the parser state and throws a `SyntaxError`.\n\t        var abort = function () {\n\t          Index = Source = null;\n\t          throw SyntaxError();\n\t        };\n\t\n\t        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n\t        // the end of the source string. A token may be a string, number, `null`\n\t        // literal, or Boolean literal.\n\t        var lex = function () {\n\t          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n\t          while (Index < length) {\n\t            charCode = source.charCodeAt(Index);\n\t            switch (charCode) {\n\t              case 9: case 10: case 13: case 32:\n\t                // Skip whitespace tokens, including tabs, carriage returns, line\n\t                // feeds, and space characters.\n\t                Index++;\n\t                break;\n\t              case 123: case 125: case 91: case 93: case 58: case 44:\n\t                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n\t                // the current position.\n\t                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n\t                Index++;\n\t                return value;\n\t              case 34:\n\t                // `\"` delimits a JSON string; advance to the next character and\n\t                // begin parsing the string. String tokens are prefixed with the\n\t                // sentinel `@` character to distinguish them from punctuators and\n\t                // end-of-string tokens.\n\t                for (value = \"@\", Index++; Index < length;) {\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode < 32) {\n\t                    // Unescaped ASCII control characters (those with a code unit\n\t                    // less than the space character) are not permitted.\n\t                    abort();\n\t                  } else if (charCode == 92) {\n\t                    // A reverse solidus (`\\`) marks the beginning of an escaped\n\t                    // control character (including `\"`, `\\`, and `/`) or Unicode\n\t                    // escape sequence.\n\t                    charCode = source.charCodeAt(++Index);\n\t                    switch (charCode) {\n\t                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n\t                        // Revive escaped control characters.\n\t                        value += Unescapes[charCode];\n\t                        Index++;\n\t                        break;\n\t                      case 117:\n\t                        // `\\u` marks the beginning of a Unicode escape sequence.\n\t                        // Advance to the first character and validate the\n\t                        // four-digit code point.\n\t                        begin = ++Index;\n\t                        for (position = Index + 4; Index < position; Index++) {\n\t                          charCode = source.charCodeAt(Index);\n\t                          // A valid sequence comprises four hexdigits (case-\n\t                          // insensitive) that form a single hexadecimal value.\n\t                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n\t                            // Invalid Unicode escape sequence.\n\t                            abort();\n\t                          }\n\t                        }\n\t                        // Revive the escaped character.\n\t                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n\t                        break;\n\t                      default:\n\t                        // Invalid escape sequence.\n\t                        abort();\n\t                    }\n\t                  } else {\n\t                    if (charCode == 34) {\n\t                      // An unescaped double-quote character marks the end of the\n\t                      // string.\n\t                      break;\n\t                    }\n\t                    charCode = source.charCodeAt(Index);\n\t                    begin = Index;\n\t                    // Optimize for the common case where a string is valid.\n\t                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n\t                      charCode = source.charCodeAt(++Index);\n\t                    }\n\t                    // Append the string as-is.\n\t                    value += source.slice(begin, Index);\n\t                  }\n\t                }\n\t                if (source.charCodeAt(Index) == 34) {\n\t                  // Advance to the next character and return the revived string.\n\t                  Index++;\n\t                  return value;\n\t                }\n\t                // Unterminated string.\n\t                abort();\n\t              default:\n\t                // Parse numbers and literals.\n\t                begin = Index;\n\t                // Advance past the negative sign, if one is specified.\n\t                if (charCode == 45) {\n\t                  isSigned = true;\n\t                  charCode = source.charCodeAt(++Index);\n\t                }\n\t                // Parse an integer or floating-point value.\n\t                if (charCode >= 48 && charCode <= 57) {\n\t                  // Leading zeroes are interpreted as octal literals.\n\t                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n\t                    // Illegal octal literal.\n\t                    abort();\n\t                  }\n\t                  isSigned = false;\n\t                  // Parse the integer component.\n\t                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n\t                  // Floats cannot contain a leading decimal point; however, this\n\t                  // case is already accounted for by the parser.\n\t                  if (source.charCodeAt(Index) == 46) {\n\t                    position = ++Index;\n\t                    // Parse the decimal component.\n\t                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal trailing decimal.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Parse exponents. The `e` denoting the exponent is\n\t                  // case-insensitive.\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode == 101 || charCode == 69) {\n\t                    charCode = source.charCodeAt(++Index);\n\t                    // Skip past the sign following the exponent, if one is\n\t                    // specified.\n\t                    if (charCode == 43 || charCode == 45) {\n\t                      Index++;\n\t                    }\n\t                    // Parse the exponential component.\n\t                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal empty exponent.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Coerce the parsed value to a JavaScript number.\n\t                  return +source.slice(begin, Index);\n\t                }\n\t                // A negative sign may only precede numbers.\n\t                if (isSigned) {\n\t                  abort();\n\t                }\n\t                // `true`, `false`, and `null` literals.\n\t                if (source.slice(Index, Index + 4) == \"true\") {\n\t                  Index += 4;\n\t                  return true;\n\t                } else if (source.slice(Index, Index + 5) == \"false\") {\n\t                  Index += 5;\n\t                  return false;\n\t                } else if (source.slice(Index, Index + 4) == \"null\") {\n\t                  Index += 4;\n\t                  return null;\n\t                }\n\t                // Unrecognized token.\n\t                abort();\n\t            }\n\t          }\n\t          // Return the sentinel `$` character if the parser has reached the end\n\t          // of the source string.\n\t          return \"$\";\n\t        };\n\t\n\t        // Internal: Parses a JSON `value` token.\n\t        var get = function (value) {\n\t          var results, hasMembers;\n\t          if (value == \"$\") {\n\t            // Unexpected end of input.\n\t            abort();\n\t          }\n\t          if (typeof value == \"string\") {\n\t            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n\t              // Remove the sentinel `@` character.\n\t              return value.slice(1);\n\t            }\n\t            // Parse object and array literals.\n\t            if (value == \"[\") {\n\t              // Parses a JSON array, returning a new JavaScript array.\n\t              results = [];\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing square bracket marks the end of the array literal.\n\t                if (value == \"]\") {\n\t                  break;\n\t                }\n\t                // If the array literal contains elements, the current token\n\t                // should be a comma separating the previous element from the\n\t                // next.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"]\") {\n\t                      // Unexpected trailing `,` in array literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each array element.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Elisions and leading commas are not permitted.\n\t                if (value == \",\") {\n\t                  abort();\n\t                }\n\t                results.push(get(value));\n\t              }\n\t              return results;\n\t            } else if (value == \"{\") {\n\t              // Parses a JSON object, returning a new JavaScript object.\n\t              results = {};\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing curly brace marks the end of the object literal.\n\t                if (value == \"}\") {\n\t                  break;\n\t                }\n\t                // If the object literal contains members, the current token\n\t                // should be a comma separator.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"}\") {\n\t                      // Unexpected trailing `,` in object literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each object member.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Leading commas are not permitted, object property names must be\n\t                // double-quoted strings, and a `:` must separate each property\n\t                // name and value.\n\t                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n\t                  abort();\n\t                }\n\t                results[value.slice(1)] = get(lex());\n\t              }\n\t              return results;\n\t            }\n\t            // Unexpected token encountered.\n\t            abort();\n\t          }\n\t          return value;\n\t        };\n\t\n\t        // Internal: Updates a traversed object member.\n\t        var update = function (source, property, callback) {\n\t          var element = walk(source, property, callback);\n\t          if (element === undef) {\n\t            delete source[property];\n\t          } else {\n\t            source[property] = element;\n\t          }\n\t        };\n\t\n\t        // Internal: Recursively traverses a parsed JSON object, invoking the\n\t        // `callback` function for each value. This is an implementation of the\n\t        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\t        var walk = function (source, property, callback) {\n\t          var value = source[property], length;\n\t          if (typeof value == \"object\" && value) {\n\t            // `forEach` can't be used to traverse an array in Opera <= 8.54\n\t            // because its `Object#hasOwnProperty` implementation returns `false`\n\t            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n\t            if (getClass.call(value) == arrayClass) {\n\t              for (length = value.length; length--;) {\n\t                update(value, length, callback);\n\t              }\n\t            } else {\n\t              forEach(value, function (property) {\n\t                update(value, property, callback);\n\t              });\n\t            }\n\t          }\n\t          return callback.call(source, property, value);\n\t        };\n\t\n\t        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\t        exports.parse = function (source, callback) {\n\t          var result, value;\n\t          Index = 0;\n\t          Source = \"\" + source;\n\t          result = get(lex());\n\t          // If a JSON string contains multiple tokens, it is invalid.\n\t          if (lex() != \"$\") {\n\t            abort();\n\t          }\n\t          // Reset the parser state.\n\t          Index = Source = null;\n\t          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n\t        };\n\t      }\n\t    }\n\t\n\t    exports[\"runInContext\"] = runInContext;\n\t    return exports;\n\t  }\n\t\n\t  if (freeExports && !isLoader) {\n\t    // Export for CommonJS environments.\n\t    runInContext(root, freeExports);\n\t  } else {\n\t    // Export for web browsers and JavaScript engines.\n\t    var nativeJSON = root.JSON,\n\t        previousJSON = root[\"JSON3\"],\n\t        isRestored = false;\n\t\n\t    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n\t      // Public: Restores the original value of the global `JSON` object and\n\t      // returns a reference to the `JSON3` object.\n\t      \"noConflict\": function () {\n\t        if (!isRestored) {\n\t          isRestored = true;\n\t          root.JSON = nativeJSON;\n\t          root[\"JSON3\"] = previousJSON;\n\t          nativeJSON = previousJSON = null;\n\t        }\n\t        return JSON3;\n\t      }\n\t    }));\n\t\n\t    root.JSON = {\n\t      \"parse\": JSON3.parse,\n\t      \"stringify\": JSON3.stringify\n\t    };\n\t  }\n\t\n\t  // Export for asynchronous module loaders.\n\t  if (isLoader) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return JSON3;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}).call(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(370)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 370:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n\n/***/ 371:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n\n/***/ 372:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n\n/***/ 373:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\t\n\t/**\n\t * Module requirements\n\t */\n\t\n\tvar isArray = __webpack_require__(374);\n\tvar isBuf = __webpack_require__(375);\n\t\n\t/**\n\t * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n\t * Anything with blobs or files should be fed through removeBlobs before coming\n\t * here.\n\t *\n\t * @param {Object} packet - socket.io event packet\n\t * @return {Object} with deconstructed packet and list of buffers\n\t * @api public\n\t */\n\t\n\texports.deconstructPacket = function(packet){\n\t  var buffers = [];\n\t  var packetData = packet.data;\n\t\n\t  function _deconstructPacket(data) {\n\t    if (!data) return data;\n\t\n\t    if (isBuf(data)) {\n\t      var placeholder = { _placeholder: true, num: buffers.length };\n\t      buffers.push(data);\n\t      return placeholder;\n\t    } else if (isArray(data)) {\n\t      var newData = new Array(data.length);\n\t      for (var i = 0; i < data.length; i++) {\n\t        newData[i] = _deconstructPacket(data[i]);\n\t      }\n\t      return newData;\n\t    } else if ('object' == typeof data && !(data instanceof Date)) {\n\t      var newData = {};\n\t      for (var key in data) {\n\t        newData[key] = _deconstructPacket(data[key]);\n\t      }\n\t      return newData;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  var pack = packet;\n\t  pack.data = _deconstructPacket(packetData);\n\t  pack.attachments = buffers.length; // number of binary 'attachments'\n\t  return {packet: pack, buffers: buffers};\n\t};\n\t\n\t/**\n\t * Reconstructs a binary packet from its placeholder packet and buffers\n\t *\n\t * @param {Object} packet - event packet with placeholders\n\t * @param {Array} buffers - binary buffers to put in placeholder positions\n\t * @return {Object} reconstructed packet\n\t * @api public\n\t */\n\t\n\texports.reconstructPacket = function(packet, buffers) {\n\t  var curPlaceHolder = 0;\n\t\n\t  function _reconstructPacket(data) {\n\t    if (data && data._placeholder) {\n\t      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\t      return buf;\n\t    } else if (isArray(data)) {\n\t      for (var i = 0; i < data.length; i++) {\n\t        data[i] = _reconstructPacket(data[i]);\n\t      }\n\t      return data;\n\t    } else if (data && 'object' == typeof data) {\n\t      for (var key in data) {\n\t        data[key] = _reconstructPacket(data[key]);\n\t      }\n\t      return data;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  packet.data = _reconstructPacket(packet.data);\n\t  packet.attachments = undefined; // no longer useful\n\t  return packet;\n\t};\n\t\n\t/**\n\t * Asynchronously removes Blobs or Files from data via\n\t * FileReader's readAsArrayBuffer method. Used before encoding\n\t * data as msgpack. Calls callback with the blobless data.\n\t *\n\t * @param {Object} data\n\t * @param {Function} callback\n\t * @api private\n\t */\n\t\n\texports.removeBlobs = function(data, callback) {\n\t  function _removeBlobs(obj, curKey, containingObject) {\n\t    if (!obj) return obj;\n\t\n\t    // convert any blob\n\t    if ((global.Blob && obj instanceof Blob) ||\n\t        (global.File && obj instanceof File)) {\n\t      pendingBlobs++;\n\t\n\t      // async filereader\n\t      var fileReader = new FileReader();\n\t      fileReader.onload = function() { // this.result == arraybuffer\n\t        if (containingObject) {\n\t          containingObject[curKey] = this.result;\n\t        }\n\t        else {\n\t          bloblessData = this.result;\n\t        }\n\t\n\t        // if nothing pending its callback time\n\t        if(! --pendingBlobs) {\n\t          callback(bloblessData);\n\t        }\n\t      };\n\t\n\t      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n\t    } else if (isArray(obj)) { // handle array\n\t      for (var i = 0; i < obj.length; i++) {\n\t        _removeBlobs(obj[i], i, obj);\n\t      }\n\t    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n\t      for (var key in obj) {\n\t        _removeBlobs(obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t\n\t  var pendingBlobs = 0;\n\t  var bloblessData = data;\n\t  _removeBlobs(bloblessData);\n\t  if (!pendingBlobs) {\n\t    callback(bloblessData);\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 374:\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n\n/***/ 375:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tmodule.exports = isBuf;\n\t\n\t/**\n\t * Returns true if obj is a buffer or an arraybuffer.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction isBuf(obj) {\n\t  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 376:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar eio = __webpack_require__(377);\n\tvar Socket = __webpack_require__(404);\n\tvar Emitter = __webpack_require__(405);\n\tvar parser = __webpack_require__(368);\n\tvar on = __webpack_require__(407);\n\tvar bind = __webpack_require__(408);\n\tvar debug = __webpack_require__(365)('socket.io-client:manager');\n\tvar indexOf = __webpack_require__(402);\n\tvar Backoff = __webpack_require__(411);\n\t\n\t/**\n\t * IE6+ hasOwnProperty\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Module exports\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\n\t * `Manager` constructor.\n\t *\n\t * @param {String} engine instance or engine uri/opts\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Manager (uri, opts) {\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && ('object' === typeof uri)) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  this.encoder = new parser.Encoder();\n\t  this.decoder = new parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Propagate given event to sockets and emit on `this`\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.emitAll = function () {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Update `socket.id` of all sockets\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.updateSocketIds = function () {\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.engine.id;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\n\t * Sets the `reconnection` config.\n\t *\n\t * @param {Boolean} true/false if it should automatically reconnect\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnection = function (v) {\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the reconnection attempts config.\n\t *\n\t * @param {Number} max reconnection attempts before giving up\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function (v) {\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function (v) {\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the maximum delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the connection timeout. `false` to disable\n\t *\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.timeout = function (v) {\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Starts trying to reconnect if reconnection is enabled and we have not\n\t * started reconnecting yet\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function () {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Sets the current transport `socket`.\n\t *\n\t * @param {Function} optional, callback\n\t * @return {Manager} self\n\t * @api public\n\t */\n\t\n\tManager.prototype.open =\n\tManager.prototype.connect = function (fn, opts) {\n\t  debug('readyState %s', this.readyState);\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  debug('opening %s', this.uri);\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function () {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function (data) {\n\t    debug('connect_error');\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t    debug('connect attempt will timeout after %d', timeout);\n\t\n\t    // set timer\n\t    var timer = setTimeout(function () {\n\t      debug('connect attempt timed out after %d', timeout);\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function () {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport open.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onopen = function () {\n\t  debug('open');\n\t\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\n\t * Called upon a ping.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onping = function () {\n\t  this.lastPing = new Date();\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\n\t * Called upon a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onpong = function () {\n\t  this.emitAll('pong', new Date() - this.lastPing);\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondata = function (data) {\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\n\t * Called when parser fully decodes a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondecoded = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon socket error.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onerror = function (err) {\n\t  debug('error', err);\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\n\t * Creates a new socket for the given `nsp`.\n\t *\n\t * @return {Socket}\n\t * @api public\n\t */\n\t\n\tManager.prototype.socket = function (nsp, opts) {\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp, opts);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function () {\n\t      socket.id = self.engine.id;\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting evnet is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting () {\n\t    if (!~indexOf(self.connecting, socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\n\t * Called upon a socket close.\n\t *\n\t * @param {Socket} socket\n\t */\n\t\n\tManager.prototype.destroy = function (socket) {\n\t  var index = indexOf(this.connecting, socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\n\t * Writes a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tManager.prototype.packet = function (packet) {\n\t  debug('writing packet %j', packet);\n\t  var self = this;\n\t  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function (encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else { // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\n\t * If packet buffer is non-empty, begins encoding the\n\t * next packet in line.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.processPacketQueue = function () {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up transport subscriptions and packet buffer.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.cleanup = function () {\n\t  debug('cleanup');\n\t\n\t  var subsLength = this.subs.length;\n\t  for (var i = 0; i < subsLength; i++) {\n\t    var sub = this.subs.shift();\n\t    sub.destroy();\n\t  }\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\n\t * Close the current socket.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.close =\n\tManager.prototype.disconnect = function () {\n\t  debug('disconnect');\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' === this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\n\t * Called upon engine close.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onclose = function (reason) {\n\t  debug('onclose');\n\t\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Attempt a reconnection.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.reconnect = function () {\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t    debug('reconnect failed');\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t    debug('will wait %dms before reconnect attempt', delay);\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function () {\n\t      if (self.skipReconnect) return;\n\t\n\t      debug('attempting reconnect');\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function (err) {\n\t        if (err) {\n\t          debug('reconnect attempt error');\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t          debug('reconnect success');\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function () {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful reconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onreconnect = function () {\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n\n/***/ },\n\n/***/ 377:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(378);\n\n\n/***/ },\n\n/***/ 378:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(379);\n\t\n\t/**\n\t * Exports parser\n\t *\n\t * @api public\n\t *\n\t */\n\tmodule.exports.parser = __webpack_require__(386);\n\n\n/***/ },\n\n/***/ 379:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar transports = __webpack_require__(380);\n\tvar Emitter = __webpack_require__(395);\n\tvar debug = __webpack_require__(365)('engine.io-client:socket');\n\tvar index = __webpack_require__(402);\n\tvar parser = __webpack_require__(386);\n\tvar parseuri = __webpack_require__(364);\n\tvar parsejson = __webpack_require__(403);\n\tvar parseqs = __webpack_require__(396);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Socket;\n\t\n\t/**\n\t * Socket constructor.\n\t *\n\t * @param {String|Object} uri or options\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Socket (uri, opts) {\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\t\n\t  opts = opts || {};\n\t\n\t  if (uri && 'object' === typeof uri) {\n\t    opts = uri;\n\t    uri = null;\n\t  }\n\t\n\t  if (uri) {\n\t    uri = parseuri(uri);\n\t    opts.hostname = uri.host;\n\t    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n\t    opts.port = uri.port;\n\t    if (uri.query) opts.query = uri.query;\n\t  } else if (opts.host) {\n\t    opts.hostname = parseuri(opts.host).host;\n\t  }\n\t\n\t  this.secure = null != opts.secure ? opts.secure\n\t    : (global.location && 'https:' === location.protocol);\n\t\n\t  if (opts.hostname && !opts.port) {\n\t    // if no port is specified manually, use the protocol default\n\t    opts.port = this.secure ? '443' : '80';\n\t  }\n\t\n\t  this.agent = opts.agent || false;\n\t  this.hostname = opts.hostname ||\n\t    (global.location ? location.hostname : 'localhost');\n\t  this.port = opts.port || (global.location && location.port\n\t      ? location.port\n\t      : (this.secure ? 443 : 80));\n\t  this.query = opts.query || {};\n\t  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n\t  this.upgrade = false !== opts.upgrade;\n\t  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n\t  this.forceJSONP = !!opts.forceJSONP;\n\t  this.jsonp = false !== opts.jsonp;\n\t  this.forceBase64 = !!opts.forceBase64;\n\t  this.enablesXDR = !!opts.enablesXDR;\n\t  this.timestampParam = opts.timestampParam || 't';\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.transports = opts.transports || ['polling', 'websocket'];\n\t  this.readyState = '';\n\t  this.writeBuffer = [];\n\t  this.prevBufferLen = 0;\n\t  this.policyPort = opts.policyPort || 843;\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\n\t  this.binaryType = null;\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\t  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\t\n\t  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\t  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n\t    this.perMessageDeflate.threshold = 1024;\n\t  }\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx || null;\n\t  this.key = opts.key || null;\n\t  this.passphrase = opts.passphrase || null;\n\t  this.cert = opts.cert || null;\n\t  this.ca = opts.ca || null;\n\t  this.ciphers = opts.ciphers || null;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  var freeGlobal = typeof global === 'object' && global;\n\t  if (freeGlobal.global === freeGlobal) {\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n\t      this.extraHeaders = opts.extraHeaders;\n\t    }\n\t  }\n\t\n\t  // set on handshake\n\t  this.id = null;\n\t  this.upgrades = null;\n\t  this.pingInterval = null;\n\t  this.pingTimeout = null;\n\t\n\t  // set on heartbeat\n\t  this.pingIntervalTimer = null;\n\t  this.pingTimeoutTimer = null;\n\t\n\t  this.open();\n\t}\n\t\n\tSocket.priorWebsocketSuccess = false;\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.protocol = parser.protocol; // this is an int\n\t\n\t/**\n\t * Expose deps for legacy compatibility\n\t * and standalone browser access.\n\t */\n\t\n\tSocket.Socket = Socket;\n\tSocket.Transport = __webpack_require__(385);\n\tSocket.transports = __webpack_require__(380);\n\tSocket.parser = __webpack_require__(386);\n\t\n\t/**\n\t * Creates transport of the given type.\n\t *\n\t * @param {String} transport name\n\t * @return {Transport}\n\t * @api private\n\t */\n\t\n\tSocket.prototype.createTransport = function (name) {\n\t  debug('creating transport \"%s\"', name);\n\t  var query = clone(this.query);\n\t\n\t  // append engine.io protocol identifier\n\t  query.EIO = parser.protocol;\n\t\n\t  // transport name\n\t  query.transport = name;\n\t\n\t  // session id if we already have one\n\t  if (this.id) query.sid = this.id;\n\t\n\t  var transport = new transports[name]({\n\t    agent: this.agent,\n\t    hostname: this.hostname,\n\t    port: this.port,\n\t    secure: this.secure,\n\t    path: this.path,\n\t    query: query,\n\t    forceJSONP: this.forceJSONP,\n\t    jsonp: this.jsonp,\n\t    forceBase64: this.forceBase64,\n\t    enablesXDR: this.enablesXDR,\n\t    timestampRequests: this.timestampRequests,\n\t    timestampParam: this.timestampParam,\n\t    policyPort: this.policyPort,\n\t    socket: this,\n\t    pfx: this.pfx,\n\t    key: this.key,\n\t    passphrase: this.passphrase,\n\t    cert: this.cert,\n\t    ca: this.ca,\n\t    ciphers: this.ciphers,\n\t    rejectUnauthorized: this.rejectUnauthorized,\n\t    perMessageDeflate: this.perMessageDeflate,\n\t    extraHeaders: this.extraHeaders\n\t  });\n\t\n\t  return transport;\n\t};\n\t\n\tfunction clone (obj) {\n\t  var o = {};\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      o[i] = obj[i];\n\t    }\n\t  }\n\t  return o;\n\t}\n\t\n\t/**\n\t * Initializes transport to use and starts probe.\n\t *\n\t * @api private\n\t */\n\tSocket.prototype.open = function () {\n\t  var transport;\n\t  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n\t    transport = 'websocket';\n\t  } else if (0 === this.transports.length) {\n\t    // Emit error on next tick so it can be listened to\n\t    var self = this;\n\t    setTimeout(function () {\n\t      self.emit('error', 'No transports available');\n\t    }, 0);\n\t    return;\n\t  } else {\n\t    transport = this.transports[0];\n\t  }\n\t  this.readyState = 'opening';\n\t\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\n\t  try {\n\t    transport = this.createTransport(transport);\n\t  } catch (e) {\n\t    this.transports.shift();\n\t    this.open();\n\t    return;\n\t  }\n\t\n\t  transport.open();\n\t  this.setTransport(transport);\n\t};\n\t\n\t/**\n\t * Sets the current transport. Disables the existing one (if any).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setTransport = function (transport) {\n\t  debug('setting transport %s', transport.name);\n\t  var self = this;\n\t\n\t  if (this.transport) {\n\t    debug('clearing existing transport %s', this.transport.name);\n\t    this.transport.removeAllListeners();\n\t  }\n\t\n\t  // set up transport\n\t  this.transport = transport;\n\t\n\t  // set up transport listeners\n\t  transport\n\t  .on('drain', function () {\n\t    self.onDrain();\n\t  })\n\t  .on('packet', function (packet) {\n\t    self.onPacket(packet);\n\t  })\n\t  .on('error', function (e) {\n\t    self.onError(e);\n\t  })\n\t  .on('close', function () {\n\t    self.onClose('transport close');\n\t  });\n\t};\n\t\n\t/**\n\t * Probes a transport.\n\t *\n\t * @param {String} transport name\n\t * @api private\n\t */\n\t\n\tSocket.prototype.probe = function (name) {\n\t  debug('probing transport \"%s\"', name);\n\t  var transport = this.createTransport(name, { probe: 1 });\n\t  var failed = false;\n\t  var self = this;\n\t\n\t  Socket.priorWebsocketSuccess = false;\n\t\n\t  function onTransportOpen () {\n\t    if (self.onlyBinaryUpgrades) {\n\t      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n\t      failed = failed || upgradeLosesBinary;\n\t    }\n\t    if (failed) return;\n\t\n\t    debug('probe transport \"%s\" opened', name);\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\n\t    transport.once('packet', function (msg) {\n\t      if (failed) return;\n\t      if ('pong' === msg.type && 'probe' === msg.data) {\n\t        debug('probe transport \"%s\" pong', name);\n\t        self.upgrading = true;\n\t        self.emit('upgrading', transport);\n\t        if (!transport) return;\n\t        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\t\n\t        debug('pausing current transport \"%s\"', self.transport.name);\n\t        self.transport.pause(function () {\n\t          if (failed) return;\n\t          if ('closed' === self.readyState) return;\n\t          debug('changing transport and sending upgrade packet');\n\t\n\t          cleanup();\n\t\n\t          self.setTransport(transport);\n\t          transport.send([{ type: 'upgrade' }]);\n\t          self.emit('upgrade', transport);\n\t          transport = null;\n\t          self.upgrading = false;\n\t          self.flush();\n\t        });\n\t      } else {\n\t        debug('probe transport \"%s\" failed', name);\n\t        var err = new Error('probe error');\n\t        err.transport = transport.name;\n\t        self.emit('upgradeError', err);\n\t      }\n\t    });\n\t  }\n\t\n\t  function freezeTransport () {\n\t    if (failed) return;\n\t\n\t    // Any callback called by transport should be ignored since now\n\t    failed = true;\n\t\n\t    cleanup();\n\t\n\t    transport.close();\n\t    transport = null;\n\t  }\n\t\n\t  // Handle any error that happens while probing\n\t  function onerror (err) {\n\t    var error = new Error('probe error: ' + err);\n\t    error.transport = transport.name;\n\t\n\t    freezeTransport();\n\t\n\t    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\t\n\t    self.emit('upgradeError', error);\n\t  }\n\t\n\t  function onTransportClose () {\n\t    onerror('transport closed');\n\t  }\n\t\n\t  // When the socket is closed while we're probing\n\t  function onclose () {\n\t    onerror('socket closed');\n\t  }\n\t\n\t  // When the socket is upgraded while we're probing\n\t  function onupgrade (to) {\n\t    if (transport && to.name !== transport.name) {\n\t      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n\t      freezeTransport();\n\t    }\n\t  }\n\t\n\t  // Remove all listeners on the transport and on self\n\t  function cleanup () {\n\t    transport.removeListener('open', onTransportOpen);\n\t    transport.removeListener('error', onerror);\n\t    transport.removeListener('close', onTransportClose);\n\t    self.removeListener('close', onclose);\n\t    self.removeListener('upgrading', onupgrade);\n\t  }\n\t\n\t  transport.once('open', onTransportOpen);\n\t  transport.once('error', onerror);\n\t  transport.once('close', onTransportClose);\n\t\n\t  this.once('close', onclose);\n\t  this.once('upgrading', onupgrade);\n\t\n\t  transport.open();\n\t};\n\t\n\t/**\n\t * Called when connection is deemed open.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.onOpen = function () {\n\t  debug('socket open');\n\t  this.readyState = 'open';\n\t  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n\t  this.emit('open');\n\t  this.flush();\n\t\n\t  // we check for `readyState` in case an `open`\n\t  // listener already closed the socket\n\t  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n\t    debug('starting upgrade probes');\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n\t      this.probe(this.upgrades[i]);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Handles a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onPacket = function (packet) {\n\t  if ('opening' === this.readyState || 'open' === this.readyState ||\n\t      'closing' === this.readyState) {\n\t    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\t\n\t    this.emit('packet', packet);\n\t\n\t    // Socket is live - any packet counts\n\t    this.emit('heartbeat');\n\t\n\t    switch (packet.type) {\n\t      case 'open':\n\t        this.onHandshake(parsejson(packet.data));\n\t        break;\n\t\n\t      case 'pong':\n\t        this.setPing();\n\t        this.emit('pong');\n\t        break;\n\t\n\t      case 'error':\n\t        var err = new Error('server error');\n\t        err.code = packet.data;\n\t        this.onError(err);\n\t        break;\n\t\n\t      case 'message':\n\t        this.emit('data', packet.data);\n\t        this.emit('message', packet.data);\n\t        break;\n\t    }\n\t  } else {\n\t    debug('packet received with socket readyState \"%s\"', this.readyState);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon handshake completion.\n\t *\n\t * @param {Object} handshake obj\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHandshake = function (data) {\n\t  this.emit('handshake', data);\n\t  this.id = data.sid;\n\t  this.transport.query.sid = data.sid;\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\n\t  this.pingInterval = data.pingInterval;\n\t  this.pingTimeout = data.pingTimeout;\n\t  this.onOpen();\n\t  // In case open handler closes socket\n\t  if ('closed' === this.readyState) return;\n\t  this.setPing();\n\t\n\t  // Prolong liveness of socket on heartbeat\n\t  this.removeListener('heartbeat', this.onHeartbeat);\n\t  this.on('heartbeat', this.onHeartbeat);\n\t};\n\t\n\t/**\n\t * Resets ping timeout.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHeartbeat = function (timeout) {\n\t  clearTimeout(this.pingTimeoutTimer);\n\t  var self = this;\n\t  self.pingTimeoutTimer = setTimeout(function () {\n\t    if ('closed' === self.readyState) return;\n\t    self.onClose('ping timeout');\n\t  }, timeout || (self.pingInterval + self.pingTimeout));\n\t};\n\t\n\t/**\n\t * Pings server every `this.pingInterval` and expects response\n\t * within `this.pingTimeout` or closes connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setPing = function () {\n\t  var self = this;\n\t  clearTimeout(self.pingIntervalTimer);\n\t  self.pingIntervalTimer = setTimeout(function () {\n\t    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n\t    self.ping();\n\t    self.onHeartbeat(self.pingTimeout);\n\t  }, self.pingInterval);\n\t};\n\t\n\t/**\n\t* Sends a ping packet.\n\t*\n\t* @api private\n\t*/\n\t\n\tSocket.prototype.ping = function () {\n\t  var self = this;\n\t  this.sendPacket('ping', function () {\n\t    self.emit('ping');\n\t  });\n\t};\n\t\n\t/**\n\t * Called on `drain` event\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onDrain = function () {\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\n\t\n\t  // setting prevBufferLen = 0 is very important\n\t  // for example, when upgrading, upgrade packet is sent over,\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\n\t  this.prevBufferLen = 0;\n\t\n\t  if (0 === this.writeBuffer.length) {\n\t    this.emit('drain');\n\t  } else {\n\t    this.flush();\n\t  }\n\t};\n\t\n\t/**\n\t * Flush write buffers.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.flush = function () {\n\t  if ('closed' !== this.readyState && this.transport.writable &&\n\t    !this.upgrading && this.writeBuffer.length) {\n\t    debug('flushing %d packets in socket', this.writeBuffer.length);\n\t    this.transport.send(this.writeBuffer);\n\t    // keep track of current length of writeBuffer\n\t    // splice writeBuffer and callbackBuffer on `drain`\n\t    this.prevBufferLen = this.writeBuffer.length;\n\t    this.emit('flush');\n\t  }\n\t};\n\t\n\t/**\n\t * Sends a message.\n\t *\n\t * @param {String} message.\n\t * @param {Function} callback function.\n\t * @param {Object} options.\n\t * @return {Socket} for chaining.\n\t * @api public\n\t */\n\t\n\tSocket.prototype.write =\n\tSocket.prototype.send = function (msg, options, fn) {\n\t  this.sendPacket('message', msg, options, fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {String} packet type.\n\t * @param {String} data.\n\t * @param {Object} options.\n\t * @param {Function} callback function.\n\t * @api private\n\t */\n\t\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\n\t  if ('function' === typeof data) {\n\t    fn = data;\n\t    data = undefined;\n\t  }\n\t\n\t  if ('function' === typeof options) {\n\t    fn = options;\n\t    options = null;\n\t  }\n\t\n\t  if ('closing' === this.readyState || 'closed' === this.readyState) {\n\t    return;\n\t  }\n\t\n\t  options = options || {};\n\t  options.compress = false !== options.compress;\n\t\n\t  var packet = {\n\t    type: type,\n\t    data: data,\n\t    options: options\n\t  };\n\t  this.emit('packetCreate', packet);\n\t  this.writeBuffer.push(packet);\n\t  if (fn) this.once('flush', fn);\n\t  this.flush();\n\t};\n\t\n\t/**\n\t * Closes the connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.readyState = 'closing';\n\t\n\t    var self = this;\n\t\n\t    if (this.writeBuffer.length) {\n\t      this.once('drain', function () {\n\t        if (this.upgrading) {\n\t          waitForUpgrade();\n\t        } else {\n\t          close();\n\t        }\n\t      });\n\t    } else if (this.upgrading) {\n\t      waitForUpgrade();\n\t    } else {\n\t      close();\n\t    }\n\t  }\n\t\n\t  function close () {\n\t    self.onClose('forced close');\n\t    debug('socket closing - telling transport to close');\n\t    self.transport.close();\n\t  }\n\t\n\t  function cleanupAndClose () {\n\t    self.removeListener('upgrade', cleanupAndClose);\n\t    self.removeListener('upgradeError', cleanupAndClose);\n\t    close();\n\t  }\n\t\n\t  function waitForUpgrade () {\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\n\t    self.once('upgrade', cleanupAndClose);\n\t    self.once('upgradeError', cleanupAndClose);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport error\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onError = function (err) {\n\t  debug('socket error %j', err);\n\t  Socket.priorWebsocketSuccess = false;\n\t  this.emit('error', err);\n\t  this.onClose('transport error', err);\n\t};\n\t\n\t/**\n\t * Called upon transport close.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onClose = function (reason, desc) {\n\t  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n\t    debug('socket close with reason: \"%s\"', reason);\n\t    var self = this;\n\t\n\t    // clear timers\n\t    clearTimeout(this.pingIntervalTimer);\n\t    clearTimeout(this.pingTimeoutTimer);\n\t\n\t    // stop event from firing again for transport\n\t    this.transport.removeAllListeners('close');\n\t\n\t    // ensure transport won't stay open\n\t    this.transport.close();\n\t\n\t    // ignore further transport communication\n\t    this.transport.removeAllListeners();\n\t\n\t    // set ready state\n\t    this.readyState = 'closed';\n\t\n\t    // clear session id\n\t    this.id = null;\n\t\n\t    // emit close event\n\t    this.emit('close', reason, desc);\n\t\n\t    // clean buffers after, so users can still\n\t    // grab the buffers on `close` event\n\t    self.writeBuffer = [];\n\t    self.prevBufferLen = 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Filters upgrades, returning only those matching client transports.\n\t *\n\t * @param {Array} server upgrades\n\t * @api private\n\t *\n\t */\n\t\n\tSocket.prototype.filterUpgrades = function (upgrades) {\n\t  var filteredUpgrades = [];\n\t  for (var i = 0, j = upgrades.length; i < j; i++) {\n\t    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n\t  }\n\t  return filteredUpgrades;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 380:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(381);\n\tvar XHR = __webpack_require__(383);\n\tvar JSONP = __webpack_require__(399);\n\tvar websocket = __webpack_require__(400);\n\t\n\t/**\n\t * Export transports.\n\t */\n\t\n\texports.polling = polling;\n\texports.websocket = websocket;\n\t\n\t/**\n\t * Polling transport polymorphic constructor.\n\t * Decides on xhr vs jsonp based on feature detection.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction polling (opts) {\n\t  var xhr;\n\t  var xd = false;\n\t  var xs = false;\n\t  var jsonp = false !== opts.jsonp;\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' === location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    xd = opts.hostname !== location.hostname || port !== opts.port;\n\t    xs = opts.secure !== isSSL;\n\t  }\n\t\n\t  opts.xdomain = xd;\n\t  opts.xscheme = xs;\n\t  xhr = new XMLHttpRequest(opts);\n\t\n\t  if ('open' in xhr && !opts.forceJSONP) {\n\t    return new XHR(opts);\n\t  } else {\n\t    if (!jsonp) throw new Error('JSONP disabled');\n\t    return new JSONP(opts);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 381:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// browser shim for xmlhttprequest module\n\t\n\tvar hasCORS = __webpack_require__(382);\n\t\n\tmodule.exports = function (opts) {\n\t  var xdomain = opts.xdomain;\n\t\n\t  // scheme must be same when usign XDomainRequest\n\t  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t  var xscheme = opts.xscheme;\n\t\n\t  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n\t  // https://github.com/Automattic/engine.io-client/pull/217\n\t  var enablesXDR = opts.enablesXDR;\n\t\n\t  // XMLHttpRequest can be disabled on IE\n\t  try {\n\t    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n\t      return new XMLHttpRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  // Use XDomainRequest for IE8 if enablesXDR is true\n\t  // because loading bar keeps flashing when using jsonp-polling\n\t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\t  try {\n\t    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n\t      return new XDomainRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  if (!xdomain) {\n\t    try {\n\t      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n\t    } catch (e) { }\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 382:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t *\n\t * Logic borrowed from Modernizr:\n\t *\n\t *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n\t */\n\t\n\ttry {\n\t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n\t    'withCredentials' in new XMLHttpRequest();\n\t} catch (err) {\n\t  // if XMLHttp support is disabled in IE then it will throw\n\t  // when trying to create\n\t  module.exports = false;\n\t}\n\n\n/***/ },\n\n/***/ 383:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module requirements.\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(381);\n\tvar Polling = __webpack_require__(384);\n\tvar Emitter = __webpack_require__(395);\n\tvar inherit = __webpack_require__(397);\n\tvar debug = __webpack_require__(365)('engine.io-client:polling-xhr');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = XHR;\n\tmodule.exports.Request = Request;\n\t\n\t/**\n\t * Empty function\n\t */\n\t\n\tfunction empty () {}\n\t\n\t/**\n\t * XHR Polling constructor.\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction XHR (opts) {\n\t  Polling.call(this, opts);\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' === location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    this.xd = opts.hostname !== global.location.hostname ||\n\t      port !== opts.port;\n\t    this.xs = opts.secure !== isSSL;\n\t  } else {\n\t    this.extraHeaders = opts.extraHeaders;\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(XHR, Polling);\n\t\n\t/**\n\t * XHR supports binary\n\t */\n\t\n\tXHR.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Creates a request.\n\t *\n\t * @param {String} method\n\t * @api private\n\t */\n\t\n\tXHR.prototype.request = function (opts) {\n\t  opts = opts || {};\n\t  opts.uri = this.uri();\n\t  opts.xd = this.xd;\n\t  opts.xs = this.xs;\n\t  opts.agent = this.agent || false;\n\t  opts.supportsBinary = this.supportsBinary;\n\t  opts.enablesXDR = this.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  opts.extraHeaders = this.extraHeaders;\n\t\n\t  return new Request(opts);\n\t};\n\t\n\t/**\n\t * Sends data.\n\t *\n\t * @param {String} data to send.\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doWrite = function (data, fn) {\n\t  var isBinary = typeof data !== 'string' && data !== undefined;\n\t  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n\t  var self = this;\n\t  req.on('success', fn);\n\t  req.on('error', function (err) {\n\t    self.onError('xhr post error', err);\n\t  });\n\t  this.sendXhr = req;\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doPoll = function () {\n\t  debug('xhr poll');\n\t  var req = this.request();\n\t  var self = this;\n\t  req.on('data', function (data) {\n\t    self.onData(data);\n\t  });\n\t  req.on('error', function (err) {\n\t    self.onError('xhr poll error', err);\n\t  });\n\t  this.pollXhr = req;\n\t};\n\t\n\t/**\n\t * Request constructor\n\t *\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Request (opts) {\n\t  this.method = opts.method || 'GET';\n\t  this.uri = opts.uri;\n\t  this.xd = !!opts.xd;\n\t  this.xs = !!opts.xs;\n\t  this.async = false !== opts.async;\n\t  this.data = undefined !== opts.data ? opts.data : null;\n\t  this.agent = opts.agent;\n\t  this.isBinary = opts.isBinary;\n\t  this.supportsBinary = opts.supportsBinary;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t\n\t  this.create();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Creates the XHR object and sends the request.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.create = function () {\n\t  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  var xhr = this.xhr = new XMLHttpRequest(opts);\n\t  var self = this;\n\t\n\t  try {\n\t    debug('xhr open %s: %s', this.method, this.uri);\n\t    xhr.open(this.method, this.uri, this.async);\n\t    try {\n\t      if (this.extraHeaders) {\n\t        xhr.setDisableHeaderCheck(true);\n\t        for (var i in this.extraHeaders) {\n\t          if (this.extraHeaders.hasOwnProperty(i)) {\n\t            xhr.setRequestHeader(i, this.extraHeaders[i]);\n\t          }\n\t        }\n\t      }\n\t    } catch (e) {}\n\t    if (this.supportsBinary) {\n\t      // This has to be done after open because Firefox is stupid\n\t      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n\t      xhr.responseType = 'arraybuffer';\n\t    }\n\t\n\t    if ('POST' === this.method) {\n\t      try {\n\t        if (this.isBinary) {\n\t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n\t        } else {\n\t          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n\t        }\n\t      } catch (e) {}\n\t    }\n\t\n\t    try {\n\t      xhr.setRequestHeader('Accept', '*/*');\n\t    } catch (e) {}\n\t\n\t    // ie6 check\n\t    if ('withCredentials' in xhr) {\n\t      xhr.withCredentials = true;\n\t    }\n\t\n\t    if (this.hasXDR()) {\n\t      xhr.onload = function () {\n\t        self.onLoad();\n\t      };\n\t      xhr.onerror = function () {\n\t        self.onError(xhr.responseText);\n\t      };\n\t    } else {\n\t      xhr.onreadystatechange = function () {\n\t        if (4 !== xhr.readyState) return;\n\t        if (200 === xhr.status || 1223 === xhr.status) {\n\t          self.onLoad();\n\t        } else {\n\t          // make sure the `error` event handler that's user-set\n\t          // does not throw in the same tick and gets caught here\n\t          setTimeout(function () {\n\t            self.onError(xhr.status);\n\t          }, 0);\n\t        }\n\t      };\n\t    }\n\t\n\t    debug('xhr data %s', this.data);\n\t    xhr.send(this.data);\n\t  } catch (e) {\n\t    // Need to defer since .create() is called directly fhrom the constructor\n\t    // and thus the 'error' event can only be only bound *after* this exception\n\t    // occurs.  Therefore, also, we cannot throw here at all.\n\t    setTimeout(function () {\n\t      self.onError(e);\n\t    }, 0);\n\t    return;\n\t  }\n\t\n\t  if (global.document) {\n\t    this.index = Request.requestsCount++;\n\t    Request.requests[this.index] = this;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful response.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onSuccess = function () {\n\t  this.emit('success');\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Called if we have data.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onData = function (data) {\n\t  this.emit('data', data);\n\t  this.onSuccess();\n\t};\n\t\n\t/**\n\t * Called upon error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onError = function (err) {\n\t  this.emit('error', err);\n\t  this.cleanup(true);\n\t};\n\t\n\t/**\n\t * Cleans up house.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.cleanup = function (fromError) {\n\t  if ('undefined' === typeof this.xhr || null === this.xhr) {\n\t    return;\n\t  }\n\t  // xmlhttprequest\n\t  if (this.hasXDR()) {\n\t    this.xhr.onload = this.xhr.onerror = empty;\n\t  } else {\n\t    this.xhr.onreadystatechange = empty;\n\t  }\n\t\n\t  if (fromError) {\n\t    try {\n\t      this.xhr.abort();\n\t    } catch (e) {}\n\t  }\n\t\n\t  if (global.document) {\n\t    delete Request.requests[this.index];\n\t  }\n\t\n\t  this.xhr = null;\n\t};\n\t\n\t/**\n\t * Called upon load.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onLoad = function () {\n\t  var data;\n\t  try {\n\t    var contentType;\n\t    try {\n\t      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n\t    } catch (e) {}\n\t    if (contentType === 'application/octet-stream') {\n\t      data = this.xhr.response || this.xhr.responseText;\n\t    } else {\n\t      if (!this.supportsBinary) {\n\t        data = this.xhr.responseText;\n\t      } else {\n\t        try {\n\t          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n\t        } catch (e) {\n\t          var ui8Arr = new Uint8Array(this.xhr.response);\n\t          var dataArray = [];\n\t          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n\t            dataArray.push(ui8Arr[idx]);\n\t          }\n\t\n\t          data = String.fromCharCode.apply(null, dataArray);\n\t        }\n\t      }\n\t    }\n\t  } catch (e) {\n\t    this.onError(e);\n\t  }\n\t  if (null != data) {\n\t    this.onData(data);\n\t  }\n\t};\n\t\n\t/**\n\t * Check if it has XDomainRequest.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.hasXDR = function () {\n\t  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n\t};\n\t\n\t/**\n\t * Aborts the request.\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function () {\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Aborts pending requests when unloading the window. This is needed to prevent\n\t * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n\t * emitted.\n\t */\n\t\n\tRequest.requestsCount = 0;\n\tRequest.requests = {};\n\t\n\tif (global.document) {\n\t  if (global.attachEvent) {\n\t    global.attachEvent('onunload', unloadHandler);\n\t  } else if (global.addEventListener) {\n\t    global.addEventListener('beforeunload', unloadHandler, false);\n\t  }\n\t}\n\t\n\tfunction unloadHandler () {\n\t  for (var i in Request.requests) {\n\t    if (Request.requests.hasOwnProperty(i)) {\n\t      Request.requests[i].abort();\n\t    }\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 384:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(385);\n\tvar parseqs = __webpack_require__(396);\n\tvar parser = __webpack_require__(386);\n\tvar inherit = __webpack_require__(397);\n\tvar yeast = __webpack_require__(398);\n\tvar debug = __webpack_require__(365)('engine.io-client:polling');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Polling;\n\t\n\t/**\n\t * Is XHR2 supported?\n\t */\n\t\n\tvar hasXHR2 = (function () {\n\t  var XMLHttpRequest = __webpack_require__(381);\n\t  var xhr = new XMLHttpRequest({ xdomain: false });\n\t  return null != xhr.responseType;\n\t})();\n\t\n\t/**\n\t * Polling interface.\n\t *\n\t * @param {Object} opts\n\t * @api private\n\t */\n\t\n\tfunction Polling (opts) {\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (!hasXHR2 || forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(Polling, Transport);\n\t\n\t/**\n\t * Transport name.\n\t */\n\t\n\tPolling.prototype.name = 'polling';\n\t\n\t/**\n\t * Opens the socket (triggers polling). We write a PING message to determine\n\t * when the transport is open.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doOpen = function () {\n\t  this.poll();\n\t};\n\t\n\t/**\n\t * Pauses polling.\n\t *\n\t * @param {Function} callback upon buffers are flushed and transport is paused\n\t * @api private\n\t */\n\t\n\tPolling.prototype.pause = function (onPause) {\n\t  var self = this;\n\t\n\t  this.readyState = 'pausing';\n\t\n\t  function pause () {\n\t    debug('paused');\n\t    self.readyState = 'paused';\n\t    onPause();\n\t  }\n\t\n\t  if (this.polling || !this.writable) {\n\t    var total = 0;\n\t\n\t    if (this.polling) {\n\t      debug('we are currently polling - waiting to pause');\n\t      total++;\n\t      this.once('pollComplete', function () {\n\t        debug('pre-pause polling complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t\n\t    if (!this.writable) {\n\t      debug('we are currently writing - waiting to pause');\n\t      total++;\n\t      this.once('drain', function () {\n\t        debug('pre-pause writing complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t  } else {\n\t    pause();\n\t  }\n\t};\n\t\n\t/**\n\t * Starts polling cycle.\n\t *\n\t * @api public\n\t */\n\t\n\tPolling.prototype.poll = function () {\n\t  debug('polling');\n\t  this.polling = true;\n\t  this.doPoll();\n\t  this.emit('poll');\n\t};\n\t\n\t/**\n\t * Overloads onData to detect payloads.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.onData = function (data) {\n\t  var self = this;\n\t  debug('polling got data %s', data);\n\t  var callback = function (packet, index, total) {\n\t    // if its the first message we consider the transport open\n\t    if ('opening' === self.readyState) {\n\t      self.onOpen();\n\t    }\n\t\n\t    // if its a close packet, we close the ongoing requests\n\t    if ('close' === packet.type) {\n\t      self.onClose();\n\t      return false;\n\t    }\n\t\n\t    // otherwise bypass onData and handle the message\n\t    self.onPacket(packet);\n\t  };\n\t\n\t  // decode payload\n\t  parser.decodePayload(data, this.socket.binaryType, callback);\n\t\n\t  // if an event did not trigger closing\n\t  if ('closed' !== this.readyState) {\n\t    // if we got data we're not polling\n\t    this.polling = false;\n\t    this.emit('pollComplete');\n\t\n\t    if ('open' === this.readyState) {\n\t      this.poll();\n\t    } else {\n\t      debug('ignoring poll - transport state \"%s\"', this.readyState);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * For polling, send a close packet.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doClose = function () {\n\t  var self = this;\n\t\n\t  function close () {\n\t    debug('writing close packet');\n\t    self.write([{ type: 'close' }]);\n\t  }\n\t\n\t  if ('open' === this.readyState) {\n\t    debug('transport open - closing');\n\t    close();\n\t  } else {\n\t    // in case we're trying to close while\n\t    // handshaking is in progress (GH-164)\n\t    debug('transport not open - deferring close');\n\t    this.once('open', close);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes a packets payload.\n\t *\n\t * @param {Array} data packets\n\t * @param {Function} drain callback\n\t * @api private\n\t */\n\t\n\tPolling.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t  var callbackfn = function () {\n\t    self.writable = true;\n\t    self.emit('drain');\n\t  };\n\t\n\t  parser.encodePayload(packets, this.supportsBinary, function (data) {\n\t    self.doWrite(data, callbackfn);\n\t  });\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'https' : 'http';\n\t  var port = '';\n\t\n\t  // cache busting is forced\n\t  if (false !== this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  if (!this.supportsBinary && !query.sid) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('https' === schema && this.port !== 443) ||\n\t     ('http' === schema && this.port !== 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\n\n/***/ },\n\n/***/ 385:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(386);\n\tvar Emitter = __webpack_require__(395);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Transport;\n\t\n\t/**\n\t * Transport abstract constructor.\n\t *\n\t * @param {Object} options.\n\t * @api private\n\t */\n\t\n\tfunction Transport (opts) {\n\t  this.path = opts.path;\n\t  this.hostname = opts.hostname;\n\t  this.port = opts.port;\n\t  this.secure = opts.secure;\n\t  this.query = opts.query;\n\t  this.timestampParam = opts.timestampParam;\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.readyState = '';\n\t  this.agent = opts.agent || false;\n\t  this.socket = opts.socket;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Transport.prototype);\n\t\n\t/**\n\t * Emits an error.\n\t *\n\t * @param {String} str\n\t * @return {Transport} for chaining\n\t * @api public\n\t */\n\t\n\tTransport.prototype.onError = function (msg, desc) {\n\t  var err = new Error(msg);\n\t  err.type = 'TransportError';\n\t  err.description = desc;\n\t  this.emit('error', err);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Opens the transport.\n\t *\n\t * @api public\n\t */\n\t\n\tTransport.prototype.open = function () {\n\t  if ('closed' === this.readyState || '' === this.readyState) {\n\t    this.readyState = 'opening';\n\t    this.doOpen();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Closes the transport.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.doClose();\n\t    this.onClose();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends multiple packets.\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\tTransport.prototype.send = function (packets) {\n\t  if ('open' === this.readyState) {\n\t    this.write(packets);\n\t  } else {\n\t    throw new Error('Transport not open');\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon open\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onOpen = function () {\n\t  this.readyState = 'open';\n\t  this.writable = true;\n\t  this.emit('open');\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @param {String} data\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onData = function (data) {\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\n\t  this.onPacket(packet);\n\t};\n\t\n\t/**\n\t * Called with a decoded packet.\n\t */\n\t\n\tTransport.prototype.onPacket = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon close.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onClose = function () {\n\t  this.readyState = 'closed';\n\t  this.emit('close');\n\t};\n\n\n/***/ },\n\n/***/ 386:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(387);\n\tvar hasBinary = __webpack_require__(388);\n\tvar sliceBuffer = __webpack_require__(390);\n\tvar after = __webpack_require__(391);\n\tvar utf8 = __webpack_require__(392);\n\t\n\tvar base64encoder;\n\tif (global && global.ArrayBuffer) {\n\t  base64encoder = __webpack_require__(393);\n\t}\n\t\n\t/**\n\t * Check if we are running an android browser. That requires us to use\n\t * ArrayBuffer with polling transports...\n\t *\n\t * http://ghinda.net/jpeg-blob-ajax-android/\n\t */\n\t\n\tvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\t\n\t/**\n\t * Check if we are running in PhantomJS.\n\t * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n\t * https://github.com/ariya/phantomjs/issues/11395\n\t * @type boolean\n\t */\n\tvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\t\n\t/**\n\t * When true, avoids using Blobs to encode payloads.\n\t * @type boolean\n\t */\n\tvar dontSendBlobs = isAndroid || isPhantomJS;\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = exports.packets = {\n\t    open:     0    // non-ws\n\t  , close:    1    // non-ws\n\t  , ping:     2\n\t  , pong:     3\n\t  , message:  4\n\t  , upgrade:  5\n\t  , noop:     6\n\t};\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: 'error', data: 'parser error' };\n\t\n\t/**\n\t * Create a blob api even for blob builder when vendor prefixes exist\n\t */\n\t\n\tvar Blob = __webpack_require__(394);\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n\t  if ('function' == typeof supportsBinary) {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if ('function' == typeof utf8encode) {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data = (packet.data === undefined)\n\t    ? undefined\n\t    : packet.data.buffer || packet.data;\n\t\n\t  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n\t    return encodeArrayBuffer(packet, supportsBinary, callback);\n\t  } else if (Blob && data instanceof global.Blob) {\n\t    return encodeBlob(packet, supportsBinary, callback);\n\t  }\n\t\n\t  // might be an object with { base64: true, data: dataAsBase64String }\n\t  if (data && data.base64) {\n\t    return encodeBase64Object(packet, callback);\n\t  }\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n\t  }\n\t\n\t  return callback('' + encoded);\n\t\n\t};\n\t\n\tfunction encodeBase64Object(packet, callback) {\n\t  // packet data is an object { base64: true, data: dataAsBase64String }\n\t  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n\t  return callback(message);\n\t}\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\tfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var data = packet.data;\n\t  var contentArray = new Uint8Array(data);\n\t  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\t\n\t  resultBuffer[0] = packets[packet.type];\n\t  for (var i = 0; i < contentArray.length; i++) {\n\t    resultBuffer[i+1] = contentArray[i];\n\t  }\n\t\n\t  return callback(resultBuffer.buffer);\n\t}\n\t\n\tfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var fr = new FileReader();\n\t  fr.onload = function() {\n\t    packet.data = fr.result;\n\t    exports.encodePacket(packet, supportsBinary, true, callback);\n\t  };\n\t  return fr.readAsArrayBuffer(packet.data);\n\t}\n\t\n\tfunction encodeBlob(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  if (dontSendBlobs) {\n\t    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n\t  }\n\t\n\t  var length = new Uint8Array(1);\n\t  length[0] = packets[packet.type];\n\t  var blob = new Blob([length.buffer, packet.data]);\n\t\n\t  return callback(blob);\n\t}\n\t\n\t/**\n\t * Encodes a packet with binary data in a base64 string\n\t *\n\t * @param {Object} packet, has `type` and `data`\n\t * @return {String} base64 encoded message\n\t */\n\t\n\texports.encodeBase64Packet = function(packet, callback) {\n\t  var message = 'b' + exports.packets[packet.type];\n\t  if (Blob && packet.data instanceof global.Blob) {\n\t    var fr = new FileReader();\n\t    fr.onload = function() {\n\t      var b64 = fr.result.split(',')[1];\n\t      callback(message + b64);\n\t    };\n\t    return fr.readAsDataURL(packet.data);\n\t  }\n\t\n\t  var b64data;\n\t  try {\n\t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n\t  } catch (e) {\n\t    // iPhone Safari doesn't let you apply with typed arrays\n\t    var typed = new Uint8Array(packet.data);\n\t    var basic = new Array(typed.length);\n\t    for (var i = 0; i < typed.length; i++) {\n\t      basic[i] = typed[i];\n\t    }\n\t    b64data = String.fromCharCode.apply(null, basic);\n\t  }\n\t  message += global.btoa(b64data);\n\t  return callback(message);\n\t};\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function (data, binaryType, utf8decode) {\n\t  if (data === undefined) {\n\t    return err;\n\t  }\n\t  // String data\n\t  if (typeof data == 'string') {\n\t    if (data.charAt(0) == 'b') {\n\t      return exports.decodeBase64Packet(data.substr(1), binaryType);\n\t    }\n\t\n\t    if (utf8decode) {\n\t      data = tryDecode(data);\n\t      if (data === false) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  if (Blob && binaryType === 'blob') {\n\t    rest = new Blob([rest]);\n\t  }\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\tfunction tryDecode(data) {\n\t  try {\n\t    data = utf8.decode(data);\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Decodes a packet encoded in a base64 string\n\t *\n\t * @param {String} base64 encoded message\n\t * @return {Object} with `type` and `data` (if any)\n\t */\n\t\n\texports.decodeBase64Packet = function(msg, binaryType) {\n\t  var type = packetslist[msg.charAt(0)];\n\t  if (!base64encoder) {\n\t    return { type: type, data: { base64: true, data: msg.substr(1) } };\n\t  }\n\t\n\t  var data = base64encoder.decode(msg.substr(1));\n\t\n\t  if (binaryType === 'blob' && Blob) {\n\t    data = new Blob([data]);\n\t  }\n\t\n\t  return { type: type, data: data };\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function (packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary == 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (supportsBinary && isBinary) {\n\t    if (Blob && !dontSendBlobs) {\n\t      return exports.encodePayloadAsBlob(packets, callback);\n\t    }\n\t\n\t    return exports.encodePayloadAsArrayBuffer(packets, callback);\n\t  }\n\t\n\t  if (!packets.length) {\n\t    return callback('0:');\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + ':' + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n\t      doneCallback(null, setLengthHeader(message));\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(''));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function (data, binaryType, callback) {\n\t  if (typeof data != 'string') {\n\t    return exports.decodePayloadAsBinary(data, binaryType, callback);\n\t  }\n\t\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data == '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = ''\n\t    , n, msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (':' != chr) {\n\t      length += chr;\n\t    } else {\n\t      if ('' == length || (length != (n = Number(length)))) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      msg = data.substr(i + 1, n);\n\t\n\t      if (length != msg.length) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      if (msg.length) {\n\t        packet = exports.decodePacket(msg, binaryType, true);\n\t\n\t        if (err.type == packet.type && err.data == packet.data) {\n\t          // parser error in individual packet - ignoring payload\n\t          return callback(err, 0, 1);\n\t        }\n\t\n\t        var ret = callback(packet, i + n, l);\n\t        if (false === ret) return;\n\t      }\n\t\n\t      // advance cursor\n\t      i += n;\n\t      length = '';\n\t    }\n\t  }\n\t\n\t  if (length != '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload) as binary.\n\t *\n\t * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n\t * 255><data>\n\t *\n\t * Example:\n\t * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n\t *\n\t * @param {Array} packets\n\t * @return {ArrayBuffer} encoded payload\n\t * @api private\n\t */\n\t\n\texports.encodePayloadAsArrayBuffer = function(packets, callback) {\n\t  if (!packets.length) {\n\t    return callback(new ArrayBuffer(0));\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(data) {\n\t      return doneCallback(null, data);\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, encodedPackets) {\n\t    var totalLength = encodedPackets.reduce(function(acc, p) {\n\t      var len;\n\t      if (typeof p === 'string'){\n\t        len = p.length;\n\t      } else {\n\t        len = p.byteLength;\n\t      }\n\t      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n\t    }, 0);\n\t\n\t    var resultArray = new Uint8Array(totalLength);\n\t\n\t    var bufferIndex = 0;\n\t    encodedPackets.forEach(function(p) {\n\t      var isString = typeof p === 'string';\n\t      var ab = p;\n\t      if (isString) {\n\t        var view = new Uint8Array(p.length);\n\t        for (var i = 0; i < p.length; i++) {\n\t          view[i] = p.charCodeAt(i);\n\t        }\n\t        ab = view.buffer;\n\t      }\n\t\n\t      if (isString) { // not true binary\n\t        resultArray[bufferIndex++] = 0;\n\t      } else { // true binary\n\t        resultArray[bufferIndex++] = 1;\n\t      }\n\t\n\t      var lenStr = ab.byteLength.toString();\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n\t      }\n\t      resultArray[bufferIndex++] = 255;\n\t\n\t      var view = new Uint8Array(ab);\n\t      for (var i = 0; i < view.length; i++) {\n\t        resultArray[bufferIndex++] = view[i];\n\t      }\n\t    });\n\t\n\t    return callback(resultArray.buffer);\n\t  });\n\t};\n\t\n\t/**\n\t * Encode as Blob\n\t */\n\t\n\texports.encodePayloadAsBlob = function(packets, callback) {\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(encoded) {\n\t      var binaryIdentifier = new Uint8Array(1);\n\t      binaryIdentifier[0] = 1;\n\t      if (typeof encoded === 'string') {\n\t        var view = new Uint8Array(encoded.length);\n\t        for (var i = 0; i < encoded.length; i++) {\n\t          view[i] = encoded.charCodeAt(i);\n\t        }\n\t        encoded = view.buffer;\n\t        binaryIdentifier[0] = 0;\n\t      }\n\t\n\t      var len = (encoded instanceof ArrayBuffer)\n\t        ? encoded.byteLength\n\t        : encoded.size;\n\t\n\t      var lenStr = len.toString();\n\t      var lengthAry = new Uint8Array(lenStr.length + 1);\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        lengthAry[i] = parseInt(lenStr[i]);\n\t      }\n\t      lengthAry[lenStr.length] = 255;\n\t\n\t      if (Blob) {\n\t        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n\t        doneCallback(null, blob);\n\t      }\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(new Blob(results));\n\t  });\n\t};\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Strings are decoded by\n\t * interpreting each byte as a key code for entries marked to start with 0. See\n\t * description of encodePayloadAsBinary\n\t *\n\t * @param {ArrayBuffer} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayloadAsBinary = function (data, binaryType, callback) {\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var bufferTail = data;\n\t  var buffers = [];\n\t\n\t  var numberTooLong = false;\n\t  while (bufferTail.byteLength > 0) {\n\t    var tailArray = new Uint8Array(bufferTail);\n\t    var isString = tailArray[0] === 0;\n\t    var msgLength = '';\n\t\n\t    for (var i = 1; ; i++) {\n\t      if (tailArray[i] == 255) break;\n\t\n\t      if (msgLength.length > 310) {\n\t        numberTooLong = true;\n\t        break;\n\t      }\n\t\n\t      msgLength += tailArray[i];\n\t    }\n\t\n\t    if(numberTooLong) return callback(err, 0, 1);\n\t\n\t    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n\t    msgLength = parseInt(msgLength);\n\t\n\t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\t    if (isString) {\n\t      try {\n\t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n\t      } catch (e) {\n\t        // iPhone Safari doesn't let you apply to typed arrays\n\t        var typed = new Uint8Array(msg);\n\t        msg = '';\n\t        for (var i = 0; i < typed.length; i++) {\n\t          msg += String.fromCharCode(typed[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    buffers.push(msg);\n\t    bufferTail = sliceBuffer(bufferTail, msgLength);\n\t  }\n\t\n\t  var total = buffers.length;\n\t  buffers.forEach(function(buffer, i) {\n\t    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n\t  });\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 387:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ },\n\n/***/ 388:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(389);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      if (obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 389:\n374,\n\n/***/ 390:\n/***/ function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ },\n\n/***/ 391:\n/***/ function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n\n/***/ 392:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/wtf8 v1.0.0 by @mathias */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code,\n\t\t// and use it as `root`\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [];\n\t\t\tvar counter = 0;\n\t\t\tvar length = string.length;\n\t\t\tvar value;\n\t\t\tvar extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2encode(array) {\n\t\t\tvar length = array.length;\n\t\t\tvar index = -1;\n\t\t\tvar value;\n\t\t\tvar output = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvalue = array[index];\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction createByte(codePoint, shift) {\n\t\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t\t}\n\t\n\t\tfunction encodeCodePoint(codePoint) {\n\t\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\t\treturn stringFromCharCode(codePoint);\n\t\t\t}\n\t\t\tvar symbol = '';\n\t\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\t\treturn symbol;\n\t\t}\n\t\n\t\tfunction wtf8encode(string) {\n\t\t\tvar codePoints = ucs2decode(string);\n\t\t\tvar length = codePoints.length;\n\t\t\tvar index = -1;\n\t\t\tvar codePoint;\n\t\t\tvar byteString = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tcodePoint = codePoints[index];\n\t\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t\t}\n\t\t\treturn byteString;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction readContinuationByte() {\n\t\t\tif (byteIndex >= byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\t\treturn continuationByte & 0x3F;\n\t\t\t}\n\t\n\t\t\t// If we end up here, it’s not a continuation byte.\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t\n\t\tfunction decodeSymbol() {\n\t\t\tvar byte1;\n\t\t\tvar byte2;\n\t\t\tvar byte3;\n\t\t\tvar byte4;\n\t\t\tvar codePoint;\n\t\n\t\t\tif (byteIndex > byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tif (byteIndex == byteCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Read the first byte.\n\t\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\t// 1-byte sequence (no continuation bytes)\n\t\t\tif ((byte1 & 0x80) == 0) {\n\t\t\t\treturn byte1;\n\t\t\t}\n\t\n\t\t\t// 2-byte sequence\n\t\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\t\tvar byte2 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\t\tif (codePoint >= 0x80) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 4-byte sequence\n\t\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tbyte4 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthrow Error('Invalid WTF-8 detected');\n\t\t}\n\t\n\t\tvar byteArray;\n\t\tvar byteCount;\n\t\tvar byteIndex;\n\t\tfunction wtf8decode(byteString) {\n\t\t\tbyteArray = ucs2decode(byteString);\n\t\t\tbyteCount = byteArray.length;\n\t\t\tbyteIndex = 0;\n\t\t\tvar codePoints = [];\n\t\t\tvar tmp;\n\t\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\t\tcodePoints.push(tmp);\n\t\t\t}\n\t\t\treturn ucs2encode(codePoints);\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar wtf8 = {\n\t\t\t'version': '1.0.0',\n\t\t\t'encode': wtf8encode,\n\t\t\t'decode': wtf8decode\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn wtf8;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = wtf8;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tvar object = {};\n\t\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\t\tfor (var key in wtf8) {\n\t\t\t\t\thasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.wtf8 = wtf8;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(370)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 393:\n/***/ function(module, exports) {\n\n\t/*\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\t(function(){\n\t  \"use strict\";\n\t\n\t  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\n\t  // Use a lookup table to find the index.\n\t  var lookup = new Uint8Array(256);\n\t  for (var i = 0; i < chars.length; i++) {\n\t    lookup[chars.charCodeAt(i)] = i;\n\t  }\n\t\n\t  exports.encode = function(arraybuffer) {\n\t    var bytes = new Uint8Array(arraybuffer),\n\t    i, len = bytes.length, base64 = \"\";\n\t\n\t    for (i = 0; i < len; i+=3) {\n\t      base64 += chars[bytes[i] >> 2];\n\t      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t      base64 += chars[bytes[i + 2] & 63];\n\t    }\n\t\n\t    if ((len % 3) === 2) {\n\t      base64 = base64.substring(0, base64.length - 1) + \"=\";\n\t    } else if (len % 3 === 1) {\n\t      base64 = base64.substring(0, base64.length - 2) + \"==\";\n\t    }\n\t\n\t    return base64;\n\t  };\n\t\n\t  exports.decode =  function(base64) {\n\t    var bufferLength = base64.length * 0.75,\n\t    len = base64.length, i, p = 0,\n\t    encoded1, encoded2, encoded3, encoded4;\n\t\n\t    if (base64[base64.length - 1] === \"=\") {\n\t      bufferLength--;\n\t      if (base64[base64.length - 2] === \"=\") {\n\t        bufferLength--;\n\t      }\n\t    }\n\t\n\t    var arraybuffer = new ArrayBuffer(bufferLength),\n\t    bytes = new Uint8Array(arraybuffer);\n\t\n\t    for (i = 0; i < len; i+=4) {\n\t      encoded1 = lookup[base64.charCodeAt(i)];\n\t      encoded2 = lookup[base64.charCodeAt(i+1)];\n\t      encoded3 = lookup[base64.charCodeAt(i+2)];\n\t      encoded4 = lookup[base64.charCodeAt(i+3)];\n\t\n\t      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t    }\n\t\n\t    return arraybuffer;\n\t  };\n\t})();\n\n\n/***/ },\n\n/***/ 394:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Create a blob builder even when vendor prefixes exist\n\t */\n\t\n\tvar BlobBuilder = global.BlobBuilder\n\t  || global.WebKitBlobBuilder\n\t  || global.MSBlobBuilder\n\t  || global.MozBlobBuilder;\n\t\n\t/**\n\t * Check if Blob constructor is supported\n\t */\n\t\n\tvar blobSupported = (function() {\n\t  try {\n\t    var a = new Blob(['hi']);\n\t    return a.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if Blob constructor supports ArrayBufferViews\n\t * Fails in Safari 6, so we need to map to ArrayBuffers there.\n\t */\n\t\n\tvar blobSupportsArrayBufferView = blobSupported && (function() {\n\t  try {\n\t    var b = new Blob([new Uint8Array([1,2])]);\n\t    return b.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if BlobBuilder is supported\n\t */\n\t\n\tvar blobBuilderSupported = BlobBuilder\n\t  && BlobBuilder.prototype.append\n\t  && BlobBuilder.prototype.getBlob;\n\t\n\t/**\n\t * Helper function that maps ArrayBufferViews to ArrayBuffers\n\t * Used by BlobBuilder constructor and old browsers that didn't\n\t * support it in the Blob constructor.\n\t */\n\t\n\tfunction mapArrayBufferViews(ary) {\n\t  for (var i = 0; i < ary.length; i++) {\n\t    var chunk = ary[i];\n\t    if (chunk.buffer instanceof ArrayBuffer) {\n\t      var buf = chunk.buffer;\n\t\n\t      // if this is a subarray, make a copy so we only\n\t      // include the subarray region from the underlying buffer\n\t      if (chunk.byteLength !== buf.byteLength) {\n\t        var copy = new Uint8Array(chunk.byteLength);\n\t        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n\t        buf = copy.buffer;\n\t      }\n\t\n\t      ary[i] = buf;\n\t    }\n\t  }\n\t}\n\t\n\tfunction BlobBuilderConstructor(ary, options) {\n\t  options = options || {};\n\t\n\t  var bb = new BlobBuilder();\n\t  mapArrayBufferViews(ary);\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    bb.append(ary[i]);\n\t  }\n\t\n\t  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n\t};\n\t\n\tfunction BlobConstructor(ary, options) {\n\t  mapArrayBufferViews(ary);\n\t  return new Blob(ary, options || {});\n\t};\n\t\n\tmodule.exports = (function() {\n\t  if (blobSupported) {\n\t    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n\t  } else if (blobBuilderSupported) {\n\t    return BlobBuilderConstructor;\n\t  } else {\n\t    return undefined;\n\t  }\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 395:\n372,\n\n/***/ 396:\n/***/ function(module, exports) {\n\n\t/**\n\t * Compiles a querystring\n\t * Returns string representation of the object\n\t *\n\t * @param {Object}\n\t * @api private\n\t */\n\t\n\texports.encode = function (obj) {\n\t  var str = '';\n\t\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      if (str.length) str += '&';\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n\t    }\n\t  }\n\t\n\t  return str;\n\t};\n\t\n\t/**\n\t * Parses a simple querystring into an object\n\t *\n\t * @param {String} qs\n\t * @api private\n\t */\n\t\n\texports.decode = function(qs){\n\t  var qry = {};\n\t  var pairs = qs.split('&');\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\n\t    var pair = pairs[i].split('=');\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n\t  }\n\t  return qry;\n\t};\n\n\n/***/ },\n\n/***/ 397:\n/***/ function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ },\n\n/***/ 398:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ },\n\n/***/ 399:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module requirements.\n\t */\n\t\n\tvar Polling = __webpack_require__(384);\n\tvar inherit = __webpack_require__(397);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = JSONPPolling;\n\t\n\t/**\n\t * Cached regular expressions.\n\t */\n\t\n\tvar rNewline = /\\n/g;\n\tvar rEscapedNewline = /\\\\n/g;\n\t\n\t/**\n\t * Global JSONP callbacks.\n\t */\n\t\n\tvar callbacks;\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction empty () { }\n\t\n\t/**\n\t * JSONP Polling constructor.\n\t *\n\t * @param {Object} opts.\n\t * @api public\n\t */\n\t\n\tfunction JSONPPolling (opts) {\n\t  Polling.call(this, opts);\n\t\n\t  this.query = this.query || {};\n\t\n\t  // define global callbacks array if not present\n\t  // we do this here (lazily) to avoid unneeded global pollution\n\t  if (!callbacks) {\n\t    // we need to consider multiple engines in the same page\n\t    if (!global.___eio) global.___eio = [];\n\t    callbacks = global.___eio;\n\t  }\n\t\n\t  // callback identifier\n\t  this.index = callbacks.length;\n\t\n\t  // add callback to jsonp global\n\t  var self = this;\n\t  callbacks.push(function (msg) {\n\t    self.onData(msg);\n\t  });\n\t\n\t  // append to query string\n\t  this.query.j = this.index;\n\t\n\t  // prevent spurious errors from being emitted when the window is unloaded\n\t  if (global.document && global.addEventListener) {\n\t    global.addEventListener('beforeunload', function () {\n\t      if (self.script) self.script.onerror = empty;\n\t    }, false);\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(JSONPPolling, Polling);\n\t\n\t/*\n\t * JSONP only supports binary as base64 encoded strings\n\t */\n\t\n\tJSONPPolling.prototype.supportsBinary = false;\n\t\n\t/**\n\t * Closes the socket.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doClose = function () {\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  if (this.form) {\n\t    this.form.parentNode.removeChild(this.form);\n\t    this.form = null;\n\t    this.iframe = null;\n\t  }\n\t\n\t  Polling.prototype.doClose.call(this);\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doPoll = function () {\n\t  var self = this;\n\t  var script = document.createElement('script');\n\t\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  script.async = true;\n\t  script.src = this.uri();\n\t  script.onerror = function (e) {\n\t    self.onError('jsonp poll error', e);\n\t  };\n\t\n\t  var insertAt = document.getElementsByTagName('script')[0];\n\t  if (insertAt) {\n\t    insertAt.parentNode.insertBefore(script, insertAt);\n\t  } else {\n\t    (document.head || document.body).appendChild(script);\n\t  }\n\t  this.script = script;\n\t\n\t  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\t\n\t  if (isUAgecko) {\n\t    setTimeout(function () {\n\t      var iframe = document.createElement('iframe');\n\t      document.body.appendChild(iframe);\n\t      document.body.removeChild(iframe);\n\t    }, 100);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes with a hidden iframe.\n\t *\n\t * @param {String} data to send\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doWrite = function (data, fn) {\n\t  var self = this;\n\t\n\t  if (!this.form) {\n\t    var form = document.createElement('form');\n\t    var area = document.createElement('textarea');\n\t    var id = this.iframeId = 'eio_iframe_' + this.index;\n\t    var iframe;\n\t\n\t    form.className = 'socketio';\n\t    form.style.position = 'absolute';\n\t    form.style.top = '-1000px';\n\t    form.style.left = '-1000px';\n\t    form.target = id;\n\t    form.method = 'POST';\n\t    form.setAttribute('accept-charset', 'utf-8');\n\t    area.name = 'd';\n\t    form.appendChild(area);\n\t    document.body.appendChild(form);\n\t\n\t    this.form = form;\n\t    this.area = area;\n\t  }\n\t\n\t  this.form.action = this.uri();\n\t\n\t  function complete () {\n\t    initIframe();\n\t    fn();\n\t  }\n\t\n\t  function initIframe () {\n\t    if (self.iframe) {\n\t      try {\n\t        self.form.removeChild(self.iframe);\n\t      } catch (e) {\n\t        self.onError('jsonp polling iframe removal error', e);\n\t      }\n\t    }\n\t\n\t    try {\n\t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n\t      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n\t      iframe = document.createElement(html);\n\t    } catch (e) {\n\t      iframe = document.createElement('iframe');\n\t      iframe.name = self.iframeId;\n\t      iframe.src = 'javascript:0';\n\t    }\n\t\n\t    iframe.id = self.iframeId;\n\t\n\t    self.form.appendChild(iframe);\n\t    self.iframe = iframe;\n\t  }\n\t\n\t  initIframe();\n\t\n\t  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n\t  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\t  data = data.replace(rEscapedNewline, '\\\\\\n');\n\t  this.area.value = data.replace(rNewline, '\\\\n');\n\t\n\t  try {\n\t    this.form.submit();\n\t  } catch (e) {}\n\t\n\t  if (this.iframe.attachEvent) {\n\t    this.iframe.onreadystatechange = function () {\n\t      if (self.iframe.readyState === 'complete') {\n\t        complete();\n\t      }\n\t    };\n\t  } else {\n\t    this.iframe.onload = complete;\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 400:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(385);\n\tvar parser = __webpack_require__(386);\n\tvar parseqs = __webpack_require__(396);\n\tvar inherit = __webpack_require__(397);\n\tvar yeast = __webpack_require__(398);\n\tvar debug = __webpack_require__(365)('engine.io-client:websocket');\n\tvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\t\n\t/**\n\t * Get either the `WebSocket` or `MozWebSocket` globals\n\t * in the browser or try to resolve WebSocket-compatible\n\t * interface exposed by `ws` for Node-like environment.\n\t */\n\t\n\tvar WebSocket = BrowserWebSocket;\n\tif (!WebSocket && typeof window === 'undefined') {\n\t  try {\n\t    WebSocket = __webpack_require__(401);\n\t  } catch (e) { }\n\t}\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = WS;\n\t\n\t/**\n\t * WebSocket transport constructor.\n\t *\n\t * @api {Object} connection options\n\t * @api public\n\t */\n\t\n\tfunction WS (opts) {\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  this.perMessageDeflate = opts.perMessageDeflate;\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(WS, Transport);\n\t\n\t/**\n\t * Transport name.\n\t *\n\t * @api public\n\t */\n\t\n\tWS.prototype.name = 'websocket';\n\t\n\t/*\n\t * WebSockets support binary\n\t */\n\t\n\tWS.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Opens socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doOpen = function () {\n\t  if (!this.check()) {\n\t    // let probe timeout\n\t    return;\n\t  }\n\t\n\t  var uri = this.uri();\n\t  var protocols = void (0);\n\t  var opts = {\n\t    agent: this.agent,\n\t    perMessageDeflate: this.perMessageDeflate\n\t  };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  if (this.extraHeaders) {\n\t    opts.headers = this.extraHeaders;\n\t  }\n\t\n\t  try {\n\t    this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\t  } catch (err) {\n\t    return this.emit('error', err);\n\t  }\n\t\n\t  if (this.ws.binaryType === undefined) {\n\t    this.supportsBinary = false;\n\t  }\n\t\n\t  if (this.ws.supports && this.ws.supports.binary) {\n\t    this.supportsBinary = true;\n\t    this.ws.binaryType = 'nodebuffer';\n\t  } else {\n\t    this.ws.binaryType = 'arraybuffer';\n\t  }\n\t\n\t  this.addEventListeners();\n\t};\n\t\n\t/**\n\t * Adds event listeners to the socket\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.addEventListeners = function () {\n\t  var self = this;\n\t\n\t  this.ws.onopen = function () {\n\t    self.onOpen();\n\t  };\n\t  this.ws.onclose = function () {\n\t    self.onClose();\n\t  };\n\t  this.ws.onmessage = function (ev) {\n\t    self.onData(ev.data);\n\t  };\n\t  this.ws.onerror = function (e) {\n\t    self.onError('websocket error', e);\n\t  };\n\t};\n\t\n\t/**\n\t * Writes data to socket.\n\t *\n\t * @param {Array} array of packets.\n\t * @api private\n\t */\n\t\n\tWS.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t\n\t  // encodePacket efficient as it uses WS framing\n\t  // no need for encodePayload\n\t  var total = packets.length;\n\t  for (var i = 0, l = total; i < l; i++) {\n\t    (function (packet) {\n\t      parser.encodePacket(packet, self.supportsBinary, function (data) {\n\t        if (!BrowserWebSocket) {\n\t          // always create a new object (GH-437)\n\t          var opts = {};\n\t          if (packet.options) {\n\t            opts.compress = packet.options.compress;\n\t          }\n\t\n\t          if (self.perMessageDeflate) {\n\t            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n\t            if (len < self.perMessageDeflate.threshold) {\n\t              opts.compress = false;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Sometimes the websocket has already been closed but the browser didn't\n\t        // have a chance of informing us about it yet, in that case send will\n\t        // throw an error\n\t        try {\n\t          if (BrowserWebSocket) {\n\t            // TypeError is thrown when passing the second argument on Safari\n\t            self.ws.send(data);\n\t          } else {\n\t            self.ws.send(data, opts);\n\t          }\n\t        } catch (e) {\n\t          debug('websocket closed before onclose event');\n\t        }\n\t\n\t        --total || done();\n\t      });\n\t    })(packets[i]);\n\t  }\n\t\n\t  function done () {\n\t    self.emit('flush');\n\t\n\t    // fake drain\n\t    // defer to next tick to allow Socket to clear writeBuffer\n\t    setTimeout(function () {\n\t      self.writable = true;\n\t      self.emit('drain');\n\t    }, 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon close\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.onClose = function () {\n\t  Transport.prototype.onClose.call(this);\n\t};\n\t\n\t/**\n\t * Closes socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doClose = function () {\n\t  if (typeof this.ws !== 'undefined') {\n\t    this.ws.close();\n\t  }\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'wss' : 'ws';\n\t  var port = '';\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('wss' === schema && this.port !== 443) ||\n\t    ('ws' === schema && this.port !== 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // append timestamp to URI\n\t  if (this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  // communicate binary support capabilities\n\t  if (!this.supportsBinary) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\t\n\t/**\n\t * Feature detection for WebSocket.\n\t *\n\t * @return {Boolean} whether this transport is available.\n\t * @api public\n\t */\n\t\n\tWS.prototype.check = function () {\n\t  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 401:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 402:\n/***/ function(module, exports) {\n\n\t\n\tvar indexOf = [].indexOf;\n\t\n\tmodule.exports = function(arr, obj){\n\t  if (indexOf) return arr.indexOf(obj);\n\t  for (var i = 0; i < arr.length; ++i) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t};\n\n/***/ },\n\n/***/ 403:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * JSON parse.\n\t *\n\t * @see Based on jQuery#parseJSON (MIT) and JSON2\n\t * @api private\n\t */\n\t\n\tvar rvalidchars = /^[\\],:{}\\s]*$/;\n\tvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n\tvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n\tvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n\tvar rtrimLeft = /^\\s+/;\n\tvar rtrimRight = /\\s+$/;\n\t\n\tmodule.exports = function parsejson(data) {\n\t  if ('string' != typeof data || !data) {\n\t    return null;\n\t  }\n\t\n\t  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\t\n\t  // Attempt to parse using the native JSON parser first\n\t  if (global.JSON && JSON.parse) {\n\t    return JSON.parse(data);\n\t  }\n\t\n\t  if (rvalidchars.test(data.replace(rvalidescape, '@')\n\t      .replace(rvalidtokens, ']')\n\t      .replace(rvalidbraces, ''))) {\n\t    return (new Function('return ' + data))();\n\t  }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 404:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(368);\n\tvar Emitter = __webpack_require__(405);\n\tvar toArray = __webpack_require__(406);\n\tvar on = __webpack_require__(407);\n\tvar bind = __webpack_require__(408);\n\tvar debug = __webpack_require__(365)('socket.io-client:socket');\n\tvar hasBin = __webpack_require__(409);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\n\t * Internal events (blacklisted).\n\t * These events can't be emitted by the user.\n\t *\n\t * @api private\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\n\t * Shortcut to `Emitter#emit`.\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\n\t * `Socket` constructor.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Socket (io, nsp, opts) {\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  if (opts && opts.query) {\n\t    this.query = opts.query;\n\t  }\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Subscribe to open, close and packet events\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.subEvents = function () {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [\n\t    on(io, 'open', bind(this, 'onopen')),\n\t    on(io, 'packet', bind(this, 'onpacket')),\n\t    on(io, 'close', bind(this, 'onclose'))\n\t  ];\n\t};\n\t\n\t/**\n\t * \"Opens\" the socket.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.open =\n\tSocket.prototype.connect = function () {\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if ('open' === this.io.readyState) this.onopen();\n\t  this.emit('connecting');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a `message` event.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.send = function () {\n\t  var args = toArray(arguments);\n\t  args.unshift('message');\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override `emit`.\n\t * If the event is in `events`, it's emitted normally.\n\t *\n\t * @param {String} event name\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.emit = function (ev) {\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var parserType = parser.EVENT; // default\n\t  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n\t  var packet = { type: parserType, data: args };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if ('function' === typeof args[args.length - 1]) {\n\t    debug('emitting packet with ack id %d', this.ids);\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  delete this.flags;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.packet = function (packet) {\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\n\t * Called upon engine `open`.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onopen = function () {\n\t  debug('transport is open - connecting');\n\t\n\t  // write connect packet if necessary\n\t  if ('/' !== this.nsp) {\n\t    if (this.query) {\n\t      this.packet({type: parser.CONNECT, query: this.query});\n\t    } else {\n\t      this.packet({type: parser.CONNECT});\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon engine `close`.\n\t *\n\t * @param {String} reason\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onclose = function (reason) {\n\t  debug('close (%s)', reason);\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit('disconnect', reason);\n\t};\n\t\n\t/**\n\t * Called with socket packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onpacket = function (packet) {\n\t  if (packet.nsp !== this.nsp) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit('error', packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon a server event.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onevent = function (packet) {\n\t  var args = packet.data || [];\n\t  debug('emitting event %j', args);\n\t\n\t  if (null != packet.id) {\n\t    debug('attaching ack callback to event');\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\n\t * Produces an ack callback to emit with an event.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ack = function (id) {\n\t  var self = this;\n\t  var sent = false;\n\t  return function () {\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t    debug('sending ack %j', args);\n\t\n\t    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n\t    self.packet({\n\t      type: type,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\n\t * Called upon a server acknowlegement.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onack = function (packet) {\n\t  var ack = this.acks[packet.id];\n\t  if ('function' === typeof ack) {\n\t    debug('calling ack %s with %j', packet.id, packet.data);\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {\n\t    debug('bad ack %s', packet.id);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon server connect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onconnect = function () {\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit('connect');\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\n\t * Emit buffered events (received and emitted).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.emitBuffered = function () {\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\n\t * Called upon server disconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ondisconnect = function () {\n\t  debug('server disconnect (%s)', this.nsp);\n\t  this.destroy();\n\t  this.onclose('io server disconnect');\n\t};\n\t\n\t/**\n\t * Called upon forced client/server side disconnections,\n\t * this method ensures the manager stops tracking us and\n\t * that reconnections don't get triggered for this.\n\t *\n\t * @api private.\n\t */\n\t\n\tSocket.prototype.destroy = function () {\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\n\t * Disconnects the socket manually.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.close =\n\tSocket.prototype.disconnect = function () {\n\t  if (this.connected) {\n\t    debug('performing disconnect (%s)', this.nsp);\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose('io client disconnect');\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the compress flag.\n\t *\n\t * @param {Boolean} if `true`, compresses the sending data\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.compress = function (compress) {\n\t  this.flags = this.flags || {};\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\n\n/***/ },\n\n/***/ 405:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  function on() {\n\t    this.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks['$' + event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks['$' + event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks['$' + event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks['$' + event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n\n/***/ 406:\n/***/ function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ },\n\n/***/ 407:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\n\t * Helper for subscriptions.\n\t *\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n\t * @param {String} event name\n\t * @param {Function} callback\n\t * @api public\n\t */\n\t\n\tfunction on (obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function () {\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n\n/***/ },\n\n/***/ 408:\n/***/ function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ },\n\n/***/ 409:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(410);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      // see: https://github.com/Automattic/has-binary/pull/4\n\t      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 410:\n374,\n\n/***/ 411:\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ },\n\n/***/ 412:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar geo_service_1 = __webpack_require__(361);\n\tvar io = __webpack_require__(362);\n\tvar InGameComponent = (function () {\n\t    function InGameComponent(authService, apiService, geoService) {\n\t        this.authService = authService;\n\t        this.apiService = apiService;\n\t        this.geoService = geoService;\n\t        this.attacking = false;\n\t        this.error = false;\n\t        this.targetOnline = false;\n\t        this.gameId = this.authService.user.currentGame;\n\t    }\n\t    InGameComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.geoService.getLocation(this.positionSuccess.bind(this), this.positionErr.bind(this));\n\t        this.locationWatch = navigator.geolocation.watchPosition(this.iMovedSuccess.bind(this));\n\t        this.locationInterval = setInterval(this.sendLocation.bind(this), 15000);\n\t        this.socket = io();\n\t        this.socket.on(\"target online\", function (data) {\n\t            if (data) {\n\t                _this.targetOnline = true;\n\t                if (data.targetLat) {\n\t                    _this.targetLat = data.targetLat;\n\t                    _this.targetLong = data.targetLong;\n\t                    _this.targetAcc = data.targetAcc;\n\t                    _this.targetTime = data.targetTime;\n\t                    _this.update();\n\t                }\n\t            }\n\t            else {\n\t                _this.targetOnline = false;\n\t            }\n\t        });\n\t        this.socket.on(\"score\", function (data) {\n\t            _this.authService.user.score = data;\n\t        });\n\t        this.socket.on(\"being watched\", function (data) {\n\t            _this.rapidEmit(data);\n\t            console.log(\"you are being watched: \", data);\n\t        });\n\t        this.socket.on(\"attack result\", function (data) {\n\t            if (data) {\n\t                _this.attackMessage = \"Target taken out. Awaiting info on next target...\";\n\t                _this.nextTarget();\n\t            }\n\t            else {\n\t                _this.attackMessage = \"Target missed... \";\n\t                setTimeout(function () {\n\t                    this.attacking = false;\n\t                    this.attackMessage = \"\";\n\t                }.bind(_this), 15000);\n\t            }\n\t        });\n\t        this.socket.on(\"killed\", function (data) {\n\t            clearInterval(_this.locationInterval);\n\t            _this.authService.user.currentGame = \"\";\n\t            _this.authService.user.gameAdmin = false;\n\t            _this.authService.user.inGame = false;\n\t            _this.authService.user.currentTarget = \"\";\n\t            _this.error = true;\n\t            _this.errorMessage = \"You were killed by: \" + data;\n\t        });\n\t        this.socket.on(\"end game\", function (data) {\n\t            _this.attackMessage = \"\";\n\t            _this.error = true;\n\t            _this.errorMessage = \"Game Over. You were the last man standing!!!\";\n\t        });\n\t    };\n\t    ;\n\t    InGameComponent.prototype.ngAfterViewChecked = function () {\n\t        this.compass = document.getElementById(\"compassWrapper\");\n\t        this.compassWatch = Compass.watch(function (heading) {\n\t            this.compass.style.transform = \"rotate(\" + ((90 + heading) * -1) + \"deg)\";\n\t        }.bind(this));\n\t        Compass.noSupport(function () {\n\t            this.compass.style.transform = \"rotate(-90deg)\";\n\t        }.bind(this));\n\t    };\n\t    InGameComponent.prototype.ngOnDestroy = function () {\n\t        Compass.unwatch(this.compassWatch);\n\t        this.socket.disconnect();\n\t        clearInterval(this.locationInterval);\n\t        navigator.geolocation.clearWatch(this.locationWatch);\n\t    };\n\t    // functions for styling text colors based on variables\n\t    InGameComponent.prototype.online = function () {\n\t        if (this.targetOnline) {\n\t            return \"green\";\n\t        }\n\t        return \"cornflowerblue\";\n\t    };\n\t    InGameComponent.prototype.resolution = function () {\n\t        if (this.accuracy > 100) {\n\t            return \"red\";\n\t        }\n\t        else if (this.accuracy > 50) {\n\t            return \"yellow\";\n\t        }\n\t        else {\n\t            return \"green\";\n\t        }\n\t    };\n\t    // functions for practical uses\n\t    InGameComponent.prototype.takeAim = function () {\n\t        var data = {\n\t            targetName: this.targetName,\n\t            trackerName: this.authService.user.name\n\t        };\n\t        this.takingAim = true;\n\t        this.socket.emit(\"take aim\", data);\n\t        console.log(\"take aim data: \", data);\n\t        setInterval(function () {\n\t            if (this.takingAim) {\n\t                this.takingAim = false;\n\t                this.attacking = false;\n\t                this.attackMessage = \"\";\n\t            }\n\t        }.bind(this), 20000);\n\t    };\n\t    InGameComponent.prototype.attack = function () {\n\t        this.attacking = true;\n\t        this.takingAim = false;\n\t        this.attackMessage = \"Confirming kill...\";\n\t        var data = {\n\t            distance: this.distanceToTarget,\n\t            accuracy: this.accuracy,\n\t            targetName: this.targetName,\n\t            gameId: this.authService.user.currentGame\n\t        };\n\t        this.socket.emit(\"attack\", data);\n\t    };\n\t    InGameComponent.prototype.nextTarget = function () {\n\t        var _this = this;\n\t        this.apiService.getObs(\"/api/target\").subscribe(function (res) {\n\t            if (res.error) {\n\t                _this.error = true;\n\t                _this.errorMessage = res.message;\n\t                if (res.targetName) {\n\t                    _this.targetName = res.targetName;\n\t                }\n\t            }\n\t            else {\n\t                _this.attacking = false;\n\t                _this.attackMessage = \"\";\n\t                _this.targetName = res.targetName;\n\t                _this.targetLat = res.latitude;\n\t                _this.targetLong = res.longitude;\n\t                _this.targetAcc = res.accuracy;\n\t                _this.targetTime = res.timestamp;\n\t                _this.update();\n\t                var joinData = {\n\t                    name: _this.authService.user.name,\n\t                    targetName: res.targetName,\n\t                    lat: _this.myLat,\n\t                    long: _this.myLong,\n\t                    time: _this.myTime,\n\t                    acc: _this.myAcc,\n\t                    score: _this.authService.user.score\n\t                };\n\t                _this.socket.emit(\"join\", joinData);\n\t            }\n\t        });\n\t    };\n\t    InGameComponent.prototype.rapidEmit = function (hunterName) {\n\t        console.log(\"rapidEmit()\");\n\t        this.rapid = setInterval(function () {\n\t            console.log(\"inside rapidEmit interval function\");\n\t            var data = {\n\t                trackerName: hunterName,\n\t                latitude: this.myLat,\n\t                longitude: this.myLong,\n\t                accuracy: this.myAcc,\n\t                time: this.myTime\n\t            };\n\t            console.log(\"data inside rapidEmit interval funciton: \", data);\n\t            this.socket.emit(\"give aim\", data);\n\t        }.bind(this), 1000);\n\t        setTimeout(function () {\n\t            clearInterval(this.rapid);\n\t            this.takingAim = false;\n\t            console.log(\"inside setTimeout function.\");\n\t        }.bind(this), 15000);\n\t    };\n\t    InGameComponent.prototype.sendLocation = function () {\n\t        console.log(\"sendLocation()\");\n\t        var toSend = {\n\t            gameId: this.gameId,\n\t            latitude: this.myLat,\n\t            longitude: this.myLong,\n\t            accuracy: this.myAcc,\n\t            time: this.myTime,\n\t            currentTarget: this.targetName\n\t        };\n\t        this.socket.emit(\"update-location\", toSend);\n\t    };\n\t    InGameComponent.prototype.positionSuccess = function (pos) {\n\t        var _this = this;\n\t        var coor = pos.coords;\n\t        this.myLong = coor.longitude;\n\t        this.myLat = coor.latitude;\n\t        this.myTime = pos.timestamp;\n\t        this.myAcc = coor.accuracy;\n\t        this.apiService.getObs(\"/api/target\").subscribe(function (res) {\n\t            if (res.error) {\n\t                _this.error = true;\n\t                _this.errorMessage = res.message;\n\t                if (res.targetName) {\n\t                    _this.targetName = res.targetName;\n\t                }\n\t            }\n\t            else {\n\t                _this.attacking = false;\n\t                _this.attackMessage = \"\";\n\t                _this.targetName = res.targetName;\n\t                _this.targetLat = res.latitude;\n\t                _this.targetLong = res.longitude;\n\t                _this.targetAcc = res.accuracy;\n\t                _this.targetTime = res.timestamp;\n\t                _this.update();\n\t                var joinData = {\n\t                    name: _this.authService.user.name,\n\t                    targetName: res.targetName,\n\t                    lat: coor.latitude,\n\t                    long: coor.longitude,\n\t                    time: pos.timestamp,\n\t                    acc: coor.accuracy,\n\t                    score: _this.authService.user.score\n\t                };\n\t                _this.socket.emit(\"join\", joinData);\n\t                _this.compass = document.getElementById(\"compassWrapper\");\n\t            }\n\t        });\n\t    };\n\t    InGameComponent.prototype.positionErr = function (err) {\n\t        console.log(err);\n\t        this.error = true;\n\t        this.errorMessage = \"Unable to obtain your location, please make sure you have 'Location Services' turned on and try again.\";\n\t    };\n\t    InGameComponent.prototype.iMovedSuccess = function (pos) {\n\t        var coor = pos.coords;\n\t        this.myLong = coor.longitude;\n\t        this.myLat = coor.latitude;\n\t        this.myTime = pos.timestamp;\n\t        this.myAcc = coor.accuracy;\n\t        if (coor.heading) {\n\t            this.myHeading = coor.heading;\n\t        }\n\t        console.log(\"locationWatch: \", pos);\n\t        this.update();\n\t    };\n\t    InGameComponent.prototype.update = function () {\n\t        if (this.myLat && this.targetLat) {\n\t            this.distanceToTarget = Math.floor(this.getDistance(this.myLong, this.myLat, this.targetLong, this.targetLat));\n\t            this.accuracy = Math.floor(this.myAcc + this.targetAcc);\n\t            this.bearing = Math.floor(this.getBearing(this.myLong, this.myLat, this.targetLong, this.targetLat));\n\t            var toDraw = document.getElementById(\"toDraw\");\n\t            var toDrawX = Math.cos(this.rad(this.bearing)) * Math.min(this.distanceToTarget, 100);\n\t            var toDrawY = Math.sin(this.rad(this.bearing)) * Math.min(this.distanceToTarget, 100);\n\t            toDraw.style.left = toDrawX + \"%\";\n\t            toDraw.style.top = toDrawY + \"%\";\n\t        }\n\t    };\n\t    InGameComponent.prototype.rad = function (x) {\n\t        return x * Math.PI / 180;\n\t    };\n\t    ;\n\t    InGameComponent.prototype.deg = function (x) {\n\t        return x * (180 / Math.PI);\n\t    };\n\t    ;\n\t    InGameComponent.prototype.getDistance = function (mLong, mLat, tLong, tLat) {\n\t        var R = 6378137; // Earth’s mean radius in meter\n\t        var dLat = this.rad(tLat - mLat);\n\t        var dLong = this.rad(tLong - mLong);\n\t        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t            Math.cos(this.rad(mLat)) * Math.cos(this.rad(tLat)) *\n\t                Math.sin(dLong / 2) * Math.sin(dLong / 2);\n\t        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t        var d = R * c;\n\t        return d; // returns the distance in meter\n\t    };\n\t    ;\n\t    InGameComponent.prototype.getBearing = function (startLong, startLat, endLong, endLat) {\n\t        startLat = this.rad(startLat);\n\t        startLong = this.rad(startLong);\n\t        endLat = this.rad(endLat);\n\t        endLong = this.rad(endLong);\n\t        var dLong = endLong - startLong;\n\t        var dPhi = Math.log(Math.tan(endLat / 2.0 + Math.PI / 4.0) / Math.tan(startLat / 2.0 + Math.PI / 4.0));\n\t        if (Math.abs(dLong) > Math.PI) {\n\t            if (dLong > 0.0) {\n\t                dLong = -(2.0 * Math.PI - dLong);\n\t            }\n\t            else {\n\t                dLong = (2.0 * Math.PI + dLong);\n\t            }\n\t        }\n\t        return (this.deg(Math.atan2(dLong, dPhi)) + 360.0) % 360.0;\n\t    };\n\t    InGameComponent = __decorate([\n\t        core_1.Component({\n\t            template: \"\\n\\t\\t<div>\\n\\t\\t\\t<h2>Score: {{this.authService.user.score}}</h2>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"!error\\\">\\n\\t\\t\\t<h2 [style.color]=\\\"online()\\\">Target: {{targetName}}</h2>\\n\\t\\t\\t<p *ngIf=\\\"targetOnline\\\">Target Aquired: {{distanceToTarget}} meters from you location.</p>\\n\\t\\t\\t<p *ngIf=\\\"!targetOnline\\\">Target Last seen {{distanceToTarget}} meters from your location.</p>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"error\\\">\\n\\t\\t\\t<h2 class=\\\"error\\\">{{errorMessage}}</h2>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"compassWrapper\\\" id=\\\"compassWrapper\\\" *ngIf=\\\"!error\\\">\\n\\t\\t\\t<div class=\\\"compassQuarter one\\\">\\n\\t\\t\\t\\t<div class=\\\"compassSixty one\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"compassThird one\\\"></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"compassQuarter two\\\">\\n\\t\\t\\t\\t<div class=\\\"compassSixty two\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"compassThird two\\\"></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"compassQuarter three\\\">\\n\\t\\t\\t\\t<div class=\\\"compassSixty three\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"compassThird three\\\"></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"compassQuarter four\\\">\\n\\t\\t\\t\\t<div class=\\\"compassSixty four\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"compassThird four\\\"></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<p class=\\\"north\\\">N</p>\\n\\t\\t\\t\\t<div id=\\\"toDraw\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<button *ngIf=\\\"!takingAim && !attacking && !error\\\" class=\\\"button bottom\\\" (click)=\\\"takeAim()\\\">Take Aim</button>\\n\\t\\t<button *ngIf=\\\"takingAim && !attacking && !error\\\" class=\\\"button bottom\\\" (click)=\\\"attack()\\\">Attack</button>\\n\\t\\t<div *ngIf=\\\"attacking\\\">\\n\\t\\t\\t<h2>{{attackMessage}}</h2>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"!error && !attacking\\\">\\n\\t\\t\\t<h3 [style.color]=\\\"resolution()\\\">Accuracy: {{accuracy}} meters</h3>\\n\\t\\t</div>\\n\\t\",\n\t            styles: [\"\\n\\t\\t.compassWrapper {\\n\\t\\t\\twidth: 80%;\\n\\t\\t\\tmargin: auto;\\n\\t\\t\\theight: 0;\\n\\t\\t\\tpadding-bottom: 80%;\\n\\t\\t\\tposition: relative;\\n\\t\\t}\\n\\t\\t.compassQuarter {\\n\\t\\t\\tfloat: left;\\n\\t\\t\\tposition: relative;\\n\\t\\t\\twidth: 50%;\\n\\t\\t\\theight: 0;\\n\\t\\t\\tpadding-bottom: 50%;\\n\\t\\t\\tbox-sizing: border-box;\\n\\t\\t\\tborder: 1px solid rgb(73, 125, 232);\\n\\t\\t}\\n\\t\\t.compassThird {\\n\\n\\t\\t\\twidth: 50%;\\n\\t\\t\\theight: 0;\\n\\t\\t\\tpadding-bottom: 50%;\\n\\t\\t\\tposition: absolute;\\n\\n\\t\\t}\\n\\t\\t.compassSixty {\\n\\n\\t\\t\\twidth: 66%;\\n\\t\\t\\theight: 0;\\n\\t\\t\\tpadding-bottom: 66%;\\n\\t\\t\\tposition: absolute;\\n\\n\\t\\t}\\n\\t\\t.north {\\n\\t\\t\\ttransform: rotate(90deg);\\n\\t\\t\\ttop: -1.5em;\\n\\t\\t\\tleft: 101%;\\n\\t\\t\\tposition: absolute;\\n\\t\\t}\\n\\t\\t.one {\\n\\n\\t\\t\\tborder-radius: 100% 0 0 0;\\n\\t\\t\\t-moz-box-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t\\t-webkit-box-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t\\tbox-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\n\\t\\t}\\n\\t\\t.one .compassSixty {\\n\\t\\t\\ttop: 33.4%;\\n\\t\\t\\tleft: 33.2%;\\n\\t\\t\\tborder-top: 1px solid rgb(73, 125, 232);\\n\\t\\t\\tborder-left: 1px solid rgb(73, 125, 232);\\n\\t\\t}\\n\\t\\t.one .compassThird {\\n\\t\\t\\ttop: 50%;\\n\\t\\t\\tleft: 50%;\\n\\t\\t\\tborder-top: 1px solid rgb(73, 125, 232);\\n\\t\\t\\tborder-left: 1px solid rgb(73, 125, 232);\\n\\t\\t}\\n\\n\\t\\t.two {\\n\\n\\t\\t\\tborder-radius: 0 100% 0 0;\\n\\t\\t\\t-moz-box-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t\\t-webkit-box-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t\\tbox-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\n\\t\\t}\\n\\t\\t.two .compassSixty {\\n\\t\\t\\ttop: 33.4%;\\n\\t\\t\\tborder-top: 1px solid rgb(73, 125, 232);\\n\\t\\t\\tborder-right: 1px solid rgb(73, 125, 232);\\n\\t\\t}\\n\\t\\t.two .compassThird {\\n\\t\\t\\ttop: 50%;\\n\\t\\t\\tborder-top: 1px solid rgb(73, 125, 232);\\n\\t\\t\\tborder-right: 1px solid rgb(73, 125, 232);\\n\\t\\t}\\n\\t\\t.three {\\n\\n\\t\\t\\tborder-radius: 0 0 0 100%;\\n\\t\\t\\t-moz-box-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t\\t-webkit-box-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t\\tbox-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\n\\t\\t}\\n\\t\\t.three .compassSixty {\\n\\t\\t\\tleft: 33.2%;\\n\\t\\t\\tborder-bottom: 1px solid rgb(73, 125, 232);\\n\\t\\t\\tborder-left: 1px solid rgb(73, 125, 232);\\n\\t\\t}\\n\\t\\t.three .compassThird {\\n\\t\\t\\tleft: 50%;\\n\\t\\t\\tborder-bottom: 1px solid rgb(73, 125, 232);\\n\\t\\t\\tborder-left: 1px solid rgb(73, 125, 232);\\n\\t\\t}\\n\\t\\t.four {\\n\\n\\t\\t\\tborder-radius: 0 0 100% 0;\\n\\t\\t\\tborder-bottom: 1px solid rgb(73, 125, 232);\\n\\t\\t\\tborder-right: 1px solid rgb(73, 125, 232);\\n\\t\\t\\t-moz-box-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t\\t-webkit-box-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t\\tbox-shadow: 0px 0px 7px rgb(73, 125, 232);\\n\\t\\t}\\n\\t\\t#toDraw {\\n\\t\\t\\tbackground-color: rgb(68, 120, 227);\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\theight: 6px;\\n\\t\\t\\twidth: 6px;\\n\\t\\t\\tborder-radius: 3px;\\n\\t\\t\\t-moz-box-shadow: 0px 0px 5px rgb(73, 125, 232);\\n\\t\\t\\t-webkit-box-shadow: 0px 0px 5px rgb(73, 125, 232);\\n\\t\\t\\tbox-shadow: 0px 0px 5px rgb(73, 125, 232);\\n\\t\\t}\\n\\n\\t\"]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _b) || Object, (typeof (_c = typeof geo_service_1.GeoService !== 'undefined' && geo_service_1.GeoService) === 'function' && _c) || Object])\n\t    ], InGameComponent);\n\t    return InGameComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.InGameComponent = InGameComponent;\n\n\n/***/ },\n\n/***/ 413:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar GameHistoryComponent = (function () {\n\t    function GameHistoryComponent(apiService) {\n\t        this.apiService = apiService;\n\t        this.games = [];\n\t    }\n\t    GameHistoryComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.apiService.getObs(\"/api/game-history\").subscribe(function (res) {\n\t            _this.gameIds = res.history;\n\t            console.log(\"respose from /api/game-history\", res);\n\t            for (var i in _this.gameIds) {\n\t                var toSend = { gameId: _this.gameIds[i] };\n\t                _this.apiService.postObs(\"/api/game-stats\", toSend).subscribe(function (res) {\n\t                    _this.games.unshift(res.game);\n\t                });\n\t            }\n\t        });\n\t    };\n\t    GameHistoryComponent = __decorate([\n\t        core_1.Component({\n\t            template: \"\\n\\t\\t<div>\\n\\t\\t\\t<ul *ngFor=\\\"let game of games\\\">\\n\\t\\t\\t\\t<li class=\\\"listHead\\\">Creator: {{game.creator}}</li>\\n\\t\\t\\t\\t<li>Start Date: {{game.startDate}}</li>\\n\\t\\t\\t\\t<li>End Date: {{game.endDate}}</li>\\n\\t\\t\\t\\t<li>Last Man Standing: {{game.activePlayers[0]}}</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\tKills:\\n\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let kill of game.kills\\\">{{kill}}</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\",\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _a) || Object])\n\t    ], GameHistoryComponent);\n\t    return GameHistoryComponent;\n\t    var _a;\n\t}());\n\texports.GameHistoryComponent = GameHistoryComponent;\n\n\n/***/ },\n\n/***/ 414:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(30);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar ProfileComponent = (function () {\n\t    function ProfileComponent(router, apiService, authService) {\n\t        this.router = router;\n\t        this.apiService = apiService;\n\t        this.authService = authService;\n\t    }\n\t    ProfileComponent.prototype.ngOnInit = function () { };\n\t    ProfileComponent.prototype.gameSelect = function () {\n\t        if (this.authService.user.inGame) {\n\t            this.router.navigate([\"/in-game\"]);\n\t        }\n\t        else if (this.authService.user.currentGame) {\n\t            this.router.navigate([\"/waiting-room\"]);\n\t        }\n\t        else {\n\t            this.router.navigate([\"/game-selection\"]);\n\t        }\n\t    };\n\t    ProfileComponent.prototype.history = function () {\n\t        this.router.navigate([\"/game-history\"]);\n\t    };\n\t    ProfileComponent.prototype.options = function () {\n\t        this.router.navigate([\"/options\"]);\n\t    };\n\t    ProfileComponent = __decorate([\n\t        core_1.Component({\n\t            template: \"\\n\\t\\t<h2>Welcome: {{this.authService.user.name}}</h2>\\n\\t\\t<h3>Your Score: {{this.authService.user.score}}</h3>\\n\\t\\t<div class=\\\"button\\\" (click)=\\\"gameSelect()\\\">\\n\\t\\t\\t<p class=\\\"inside-button\\\" *ngIf=\\\"this.authService.user.currentGame && this.authService.user.inGame\\\">Enter Game</p>\\n\\t\\t\\t<p class=\\\"inside-button\\\" *ngIf=\\\"this.authService.user.currentGame && !this.authService.user.inGame\\\">Enter Waiting Room</p>\\n\\t\\t\\t<p class=\\\"inside-button\\\" *ngIf=\\\"!this.authService.user.currentGame\\\">Join or Create Game</p>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"button\\\" (click)=\\\"history()\\\">\\n\\t\\t\\t<p class=\\\"inside-button\\\">Game History</p>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"button\\\" (click)=\\\"options()\\\">\\n\\t\\t\\t<p class=\\\"inside-button\\\">Options</p>\\n\\t\\t</div>\\n\\t\",\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _a) || Object, (typeof (_b = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _b) || Object, (typeof (_c = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _c) || Object])\n\t    ], ProfileComponent);\n\t    return ProfileComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.ProfileComponent = ProfileComponent;\n\n\n/***/ },\n\n/***/ 415:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar router_1 = __webpack_require__(30);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar OptionsComponent = (function () {\n\t    function OptionsComponent(apiService, authService, router) {\n\t        this.apiService = apiService;\n\t        this.authService = authService;\n\t        this.router = router;\n\t        // display variables and functions\n\t        this.selectionMade = false;\n\t        this.result = false;\n\t        this.resultMessage = \"\";\n\t        this.displayChangePassword = false;\n\t        this.displayLeaveGame = false;\n\t        // change password variables and functions\n\t        this.oldPassword = \"\";\n\t        this.newPassword = \"\";\n\t        this.confirmPassword = \"\";\n\t    }\n\t    OptionsComponent.prototype.displayOptions = function () {\n\t        this.selectionMade = false;\n\t        this.result = false;\n\t        this.resultMessage = \"\";\n\t        this.displayChangePassword = false;\n\t        this.displayLeaveGame = false;\n\t    };\n\t    OptionsComponent.prototype.changePassword = function () {\n\t        this.selectionMade = true;\n\t        this.displayChangePassword = true;\n\t    };\n\t    OptionsComponent.prototype.leaveGame = function () {\n\t        this.selectionMade = true;\n\t        this.displayLeaveGame = true;\n\t    };\n\t    OptionsComponent.prototype.passwordVerify = function () {\n\t        if (this.newPassword === this.confirmPassword && this.newPassword.length >= 8) {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    OptionsComponent.prototype.sendPassword = function () {\n\t        var _this = this;\n\t        if (this.passwordVerify()) {\n\t            var toSend = {\n\t                oldPassword: this.oldPassword,\n\t                newPassword: this.newPassword\n\t            };\n\t            this.apiService.postObs(\"/api/change-password\", toSend).subscribe(function (res) {\n\t                _this.result = true;\n\t                _this.resultMessage = res.message;\n\t            });\n\t        }\n\t    };\n\t    ;\n\t    // leave game variables and functions\n\t    OptionsComponent.prototype.confirmLeaveGame = function () {\n\t        var _this = this;\n\t        this.apiService.postObs(\"/api/leave-game\", this.authService.user.currentGame).subscribe(function (res) {\n\t            _this.result = true;\n\t            _this.resultMessage = res.message;\n\t            if (res.message === \"Game Abandoned\") {\n\t                _this.authService.user.currentGame = \"\";\n\t                _this.authService.user.inGame = false;\n\t                _this.authService.user.gameAdmin = false;\n\t                _this.authService.user.currentTarget = \"\";\n\t            }\n\t        });\n\t    };\n\t    OptionsComponent = __decorate([\n\t        core_1.Component({\n\t            template: \"\\n\\t\\t<h2>Welcome: {{this.authService.user.name}}</h2>\\n\\t\\t<div *ngIf=\\\"!selectionMade && !result\\\">\\n\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"changePassword()\\\" *ngIf=\\\"!selectionMade\\\">\\n\\t\\t\\t\\t<p class=\\\"inside-button\\\">Change Password</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"button\\\" *ngIf=\\\"this.authService.user.currentGame\\\" (click)=\\\"leaveGame()\\\">\\n\\t\\t\\t\\t<p class=\\\"inside-button\\\">Leave Current Game</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div *ngIf=\\\"selectionMade && !result\\\">\\n\\t\\t\\t<div *ngIf=\\\"displayChangePassword\\\">\\n\\t\\t\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"oldPassword\\\" placeholder=\\\"Old Password\\\">\\n\\t\\t\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"newPassword\\\" placeholder=\\\"New Password\\\">\\n\\t\\t\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"confirmPassword\\\" placeholder=\\\"Confirm New Password\\\">\\n\\t\\t\\t\\t<h3 class=\\\"error\\\" *ngIf=\\\"!passwordVerify()\\\">Passwords must match and contain at least 8 characters</h3>\\n\\t\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"sendPassword()\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"inside-button\\\">Change Password</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div *ngIf=\\\"displayLeaveGame\\\">\\n\\t\\t\\t\\t<h3>Are you sure you want to leave your current game?</h3>\\n\\t\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"confirmLeaveGame()\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"inside-button\\\">Yes</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"displayOptions()\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"inside-button\\\">No</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<div *ngIf=\\\"result\\\">\\n\\t\\t\\t<h3>{{resultMessage}}</h3>\\n\\t\\t\\t<div class=\\\"button\\\" (click)=\\\"displayOptions()\\\">\\n\\t\\t\\t\\t<p class=\\\"inside-button\\\">Back to Options</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\",\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _a) || Object, (typeof (_b = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _b) || Object, (typeof (_c = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _c) || Object])\n\t    ], OptionsComponent);\n\t    return OptionsComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.OptionsComponent = OptionsComponent;\n\n\n/***/ },\n\n/***/ 416:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(30);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar AboutComponent = (function () {\n\t    function AboutComponent(authService, router) {\n\t        this.authService = authService;\n\t        this.router = router;\n\t    }\n\t    AboutComponent.prototype.toLogin = function () {\n\t        this.router.navigate([\"/login\"]);\n\t    };\n\t    AboutComponent = __decorate([\n\t        core_1.Component({\n\t            template: \"\\n\\t\\t<div>\\n\\t\\t\\t<h2>Welcome to Most Dangerous Game</h2>\\n\\t\\t\\t<h3>How it works:</h3>\\n\\t\\t\\t<p>A User creates a new private game and tells their friends to join the game. You can join a game by entering the username of the game creator and hitting \\\"Join Game\\\".</p>\\n\\t\\t\\t<p>You will then be able to enter the waiting room which is where you can see the names of the other players who have joined while waiting for the game admin to launch the game.</p>\\n\\t\\t\\t<p>Once the game has been launched each player will be assigned a random target from the player list. While you are online tracking your target your location is visible to the player tracking you.</p>\\n\\t\\t\\t<p>The closer you are to your target the more likely your attempt to take them out is to succeed.</p>\\n\\t\\t\\t<p>After you have taken out your target your score will increase and you will take over the target that player was tracking.</p>\\n\\t\\t\\t<p>The game ends when there is only one player left.</p>\\n\\t\\t\\t<p>In future implementations you will be able to trade in points from your score for temporary bonuses such as invisible tracking or increased attack range.</p>\\n\\t\\t\\t<p>If you have any feedback on how to improve the game please feel free to email the creator at foxinatardis@gmail.com</p>\\n\\n\\t\\t<div>\\n\\t\\t<div class=\\\"button\\\" *ngIf=\\\"!this.authService.user\\\">\\n\\t\\t\\t<p class=\\\"inside-button\\\" (click)=\\\"toLogin()\\\">Login/Register</p>\\n\\t\\t</div>\\n\\t\",\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object])\n\t    ], AboutComponent);\n\t    return AboutComponent;\n\t    var _a, _b;\n\t}());\n\texports.AboutComponent = AboutComponent;\n\n\n/***/ },\n\n/***/ 417:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar auth_service_1 = __webpack_require__(60);\n\tvar api_service_1 = __webpack_require__(62);\n\tvar router_1 = __webpack_require__(30);\n\tvar AppComponent = (function () {\n\t    function AppComponent(authService, apiService, router) {\n\t        this.authService = authService;\n\t        this.apiService = apiService;\n\t        this.router = router;\n\t    }\n\t    AppComponent.prototype.logout = function () {\n\t        var _this = this;\n\t        this.apiService.getObs(\"/logout\").subscribe(function (res) {\n\t            if (res.success) {\n\t                delete _this.authService.user;\n\t                _this.router.navigate([\"/login\"]);\n\t            }\n\t        });\n\t    };\n\t    AppComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'assassin',\n\t            template: \"\\n\\t\\t<nav>\\n\\t\\t\\t<div class=\\\"for-nav\\\" *ngIf=\\\"this.authService.user\\\" (click)=\\\"this.router.navigate(['/profile'])\\\">\\n\\t\\t\\t\\t<p class=\\\"p-nav\\\">Profile</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"for-nav\\\" (click)=\\\"logout()\\\" *ngIf=\\\"this.authService.user\\\">\\n\\t\\t\\t\\t<p class=\\\"p-nav\\\">Logout</p>\\n\\t\\t\\t</div>\\n\\t\\t</nav>\\n\\t\\t<router-outlet></router-outlet>\\n\\t\",\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _b) || Object, (typeof (_c = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _c) || Object])\n\t    ], AppComponent);\n\t    return AppComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.AppComponent = AppComponent;\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// app.0fe5d4aa55f182c30f33.js","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app.module';\n\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/main.ts","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from \"@angular/router\";\nimport { HttpModule } from \"@angular/http\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { ApiService } from \"./api.service\";\nimport { AuthService } from \"./auth.service\";\nimport { GeoService } from \"./geo.service\";\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from \"./login.component\";\nimport { GameSelectionComponent } from \"./game-selection.component\";\nimport { WaitingRoomComponent } from \"./waiting-room.component\";\nimport { InGameComponent } from \"./in-game.component\";\nimport { GameHistoryComponent } from \"./game-history.component\";\nimport { ProfileComponent } from \"./profile.component\";\nimport { OptionsComponent } from \"./options.component\";\nimport { AboutComponent } from \"./about.component\";\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tHttpModule,\n\t\tFormsModule,\n\t\tAppRoutingModule\n\t],\n\tproviders: [\n\t\tApiService,\n\t\tAuthService,\n\t\tGeoService\n\t],\n\tdeclarations: [\n\t\tAppComponent,\n\t\tLoginComponent,\n\t\tGameSelectionComponent,\n\t\tWaitingRoomComponent,\n\t\tInGameComponent,\n\t\tGameHistoryComponent,\n\t\tProfileComponent,\n\t\tOptionsComponent,\n\t\tAboutComponent\n\t],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/app.module.ts","/**\n * @license Angular v2.1.2\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operator/toPromise'), require('rxjs/Subject'), require('rxjs/Observable'), require('rxjs/observable/fromPromise')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    /**\n     * Base class for control directives.\n     *\n     * Only used internally in the forms module.\n     *\n     * @stable\n     */\n    var AbstractControlDirective = (function () {\n        function AbstractControlDirective() {\n        }\n        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n            get: function () { throw new Error('unimplemented'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n            get: function () { return isPresent(this.control) ? this.control.value : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n            get: function () { return isPresent(this.control) ? this.control.valid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n            get: function () { return isPresent(this.control) ? this.control.invalid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n            get: function () { return isPresent(this.control) ? this.control.pending : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n            get: function () {\n                return isPresent(this.control) ? this.control.errors : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n            get: function () { return isPresent(this.control) ? this.control.pristine : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n            get: function () { return isPresent(this.control) ? this.control.dirty : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n            get: function () { return isPresent(this.control) ? this.control.touched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n            get: function () { return isPresent(this.control) ? this.control.untouched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n            get: function () { return isPresent(this.control) ? this.control.disabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n            get: function () { return isPresent(this.control) ? this.control.enabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n            get: function () {\n                return isPresent(this.control) ? this.control.statusChanges : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n            get: function () {\n                return isPresent(this.control) ? this.control.valueChanges : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        AbstractControlDirective.prototype.reset = function (value) {\n            if (value === void 0) { value = undefined; }\n            if (isPresent(this.control))\n                this.control.reset(value);\n        };\n        return AbstractControlDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * A directive that contains multiple {@link NgControl}s.\n     *\n     * Only used by the forms module.\n     *\n     * @stable\n     */\n    var ControlContainer = (function (_super) {\n        __extends$1(ControlContainer, _super);\n        function ControlContainer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n            /**\n             * Get the form to which this container belongs.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ControlContainer.prototype, \"path\", {\n            /**\n             * Get the path to this container.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return ControlContainer;\n    }(AbstractControlDirective));\n\n    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n    var _arrayFromMap = (function () {\n        try {\n            if ((new Map()).values().next) {\n                return function createArrayFromMap(m, getValues) {\n                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n                };\n            }\n        }\n        catch (e) {\n        }\n        return function createArrayFromMapWithForeach(m, getValues) {\n            var res = new Array(m.size), i = 0;\n            m.forEach(function (v, k) {\n                res[i] = getValues ? v : k;\n                i++;\n            });\n            return res;\n        };\n    })();\n    var MapWrapper = (function () {\n        function MapWrapper() {\n        }\n        MapWrapper.createFromStringMap = function (stringMap) {\n            var result = new Map();\n            for (var prop in stringMap) {\n                result.set(prop, stringMap[prop]);\n            }\n            return result;\n        };\n        MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n        MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n        return MapWrapper;\n    }());\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                list.splice(index, 1);\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.maximum = function (list, predicate) {\n            if (list.length == 0) {\n                return null;\n            }\n            var solution = null;\n            var maxValue = -Infinity;\n            for (var index = 0; index < list.length; index++) {\n                var candidate = list[index];\n                if (candidate == null) {\n                    continue;\n                }\n                var candidateValue = predicate(candidate);\n                if (candidateValue > maxValue) {\n                    solution = candidate;\n                    maxValue = candidateValue;\n                }\n            }\n            return solution;\n        };\n        ListWrapper.flatten = function (list) {\n            var target = [];\n            _flattenArray(list, target);\n            return target;\n        };\n        return ListWrapper;\n    }());\n    function _flattenArray(source, target) {\n        if (isPresent(source)) {\n            for (var i = 0; i < source.length; i++) {\n                var item = source[i];\n                if (Array.isArray(item)) {\n                    _flattenArray(item, target);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n        }\n        return target;\n    }\n\n    var isPromise = _angular_core.__core_private__.isPromise;\n\n    function isEmptyInputValue(value) {\n        return value == null || typeof value === 'string' && value.length === 0;\n    }\n    /**\n     * Providers for validators to be used for {@link FormControl}s in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * ### Example\n     *\n     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n     * @stable\n     */\n    var NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n    /**\n     * Providers for asynchronous validators to be used for {@link FormControl}s\n     * in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * See {@link NG_VALIDATORS} for more details.\n     *\n     * @stable\n     */\n    var NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n    /**\n     * Provides a set of validators used by form controls.\n     *\n     * A validator is a function that processes a {@link FormControl} or collection of\n     * controls and returns a map of errors. A null map means that validation has passed.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * var loginControl = new FormControl(\"\", Validators.required)\n     * ```\n     *\n     * @stable\n     */\n    var Validators = (function () {\n        function Validators() {\n        }\n        /**\n         * Validator that requires controls to have a non-empty value.\n         */\n        Validators.required = function (control) {\n            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n        };\n        /**\n         * Validator that requires controls to have a value of a minimum length.\n         */\n        Validators.minLength = function (minLength) {\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var length = typeof control.value === 'string' ? control.value.length : 0;\n                return length < minLength ?\n                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires controls to have a value of a maximum length.\n         */\n        Validators.maxLength = function (maxLength) {\n            return function (control) {\n                var length = typeof control.value === 'string' ? control.value.length : 0;\n                return length > maxLength ?\n                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires a control to match a regex to its value.\n         */\n        Validators.pattern = function (pattern) {\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var regex = new RegExp(\"^\" + pattern + \"$\");\n                var value = control.value;\n                return regex.test(value) ?\n                    null :\n                    { 'pattern': { 'requiredPattern': \"^\" + pattern + \"$\", 'actualValue': value } };\n            };\n        };\n        /**\n         * No-op validator.\n         */\n        Validators.nullValidator = function (c) { return null; };\n        /**\n         * Compose multiple validators into a single function that returns the union\n         * of the individual error maps.\n         */\n        Validators.compose = function (validators) {\n            if (!validators)\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                return _mergeErrors(_executeValidators(control, presentValidators));\n            };\n        };\n        Validators.composeAsync = function (validators) {\n            if (!validators)\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n                return Promise.all(promises).then(_mergeErrors);\n            };\n        };\n        return Validators;\n    }());\n    function _convertToPromise(obj) {\n        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n    }\n    function _executeValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _executeAsyncValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _mergeErrors(arrayOfErrors) {\n        var res = arrayOfErrors.reduce(function (res, errors) {\n            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n        }, {});\n        return Object.keys(res).length === 0 ? null : res;\n    }\n\n    /**\n     * Used to provide a {@link ControlValueAccessor} for form controls.\n     *\n     * See {@link DefaultValueAccessor} for how to implement one.\n     * @stable\n     */\n    var NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\n    var CHECKBOX_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a value and listening to changes on a checkbox input element.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var CheckboxControlValueAccessor = (function () {\n        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n        };\n        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        CheckboxControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                        providers: [CHECKBOX_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return CheckboxControlValueAccessor;\n    }());\n\n    var DEFAULT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The default accessor for writing a value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var DefaultValueAccessor = (function () {\n        function DefaultValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        DefaultValueAccessor.prototype.writeValue = function (value) {\n            var normalizedValue = isBlank(value) ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        DefaultValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                        // TODO: vsavkin replace the above selector with the one below it once\n                        // https://github.com/angular/angular/issues/3011 is implemented\n                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [DEFAULT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        DefaultValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return DefaultValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeValidator(validator) {\n        if (validator.validate !== undefined) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n    function normalizeAsyncValidator(validator) {\n        if (validator.validate !== undefined) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n\n    var NUMBER_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a number value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"number\" [(ngModel)]=\"age\">\n     *  ```\n     */\n    var NumberValueAccessor = (function () {\n        function NumberValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        NumberValueAccessor.prototype.writeValue = function (value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            var normalizedValue = isBlank(value) ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        NumberValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [NUMBER_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        NumberValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return NumberValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * A base class that all control directive extend.\n     * It binds a {@link FormControl} object to a DOM element.\n     *\n     * Used internally by Angular forms.\n     *\n     * @stable\n     */\n    var NgControl = (function (_super) {\n        __extends$2(NgControl, _super);\n        function NgControl() {\n            _super.apply(this, arguments);\n            /** @internal */\n            this._parent = null;\n            this.name = null;\n            this.valueAccessor = null;\n            /** @internal */\n            this._rawValidators = [];\n            /** @internal */\n            this._rawAsyncValidators = [];\n        }\n        Object.defineProperty(NgControl.prototype, \"validator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgControl;\n    }(AbstractControlDirective));\n\n    var RADIO_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * Internal class used by Angular to uncheck radio buttons with the matching name.\n     */\n    var RadioControlRegistry = (function () {\n        function RadioControlRegistry() {\n            this._accessors = [];\n        }\n        RadioControlRegistry.prototype.add = function (control, accessor) {\n            this._accessors.push([control, accessor]);\n        };\n        RadioControlRegistry.prototype.remove = function (accessor) {\n            var indexToRemove = -1;\n            for (var i = 0; i < this._accessors.length; ++i) {\n                if (this._accessors[i][1] === accessor) {\n                    indexToRemove = i;\n                }\n            }\n            this._accessors.splice(indexToRemove, 1);\n        };\n        RadioControlRegistry.prototype.select = function (accessor) {\n            var _this = this;\n            this._accessors.forEach(function (c) {\n                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        };\n        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        };\n        RadioControlRegistry.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RadioControlRegistry.ctorParameters = [];\n        return RadioControlRegistry;\n    }());\n    /**\n     * @whatItDoes  Writes radio control values and listens to radio control changes.\n     *\n     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n     * to keep the view synced with the {@link FormControl} model.\n     *\n     * @howToUse\n     *\n     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n     * value accessor will be active on any radio control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use radio buttons with form directives\n     *\n     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n     * attributes do not affect each other.\n     *\n     * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n     *\n     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n     *\n     * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  @stable\n     */\n    var RadioControlValueAccessor = (function () {\n        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            this.onChange = function () { };\n            this.onTouched = function () { };\n        }\n        RadioControlValueAccessor.prototype.ngOnInit = function () {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        };\n        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n        RadioControlValueAccessor.prototype.writeValue = function (value) {\n            this._state = value === this.value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        };\n        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this._fn = fn;\n            this.onChange = function () {\n                fn(_this.value);\n                _this._registry.select(_this);\n            };\n        };\n        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RadioControlValueAccessor.prototype._checkName = function () {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        };\n        RadioControlValueAccessor.prototype._throwNameError = function () {\n            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n        };\n        RadioControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                        providers: [RADIO_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RadioControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n            { type: RadioControlRegistry, },\n            { type: _angular_core.Injector, },\n        ];\n        RadioControlValueAccessor.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'formControlName': [{ type: _angular_core.Input },],\n            'value': [{ type: _angular_core.Input },],\n        };\n        return RadioControlValueAccessor;\n    }());\n\n    var SELECT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString(id, value) {\n        if (isBlank(id))\n            return \"\" + value;\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    function _extractId(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * @whatItDoes Writes values and listens to changes on a select element.\n     *\n     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n     * to keep the view synced with the {@link FormControl} model.\n     *\n     * @howToUse\n     *\n     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n     * value accessor will be active on any select control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use select controls with form directives\n     *\n     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n     * attribute to the main `<select>` tag.\n     *\n     * If your option values are simple strings, you can bind to the normal `value` property\n     * on the option.  If your option values happen to be objects (and you'd like to save the\n     * selection in your form as an object), use `ngValue` instead:\n     *\n     * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n     *\n     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n     * choice of binding to the  `value` or `ngValue` property on the select's options.\n     *\n     * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n     *\n     * Note: We listen to the 'change' event because 'input' events aren't fired\n     * for selects in Firefox and IE:\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var SelectControlValueAccessor = (function () {\n        function SelectControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectControlValueAccessor.prototype.writeValue = function (value) {\n            this.value = value;\n            var valueString = _buildValueString(this._getOptionId(value), value);\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n        };\n        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (valueString) {\n                _this.value = valueString;\n                fn(_this._getOptionValue(valueString));\n            };\n        };\n        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var value = this._optionMap.get(_extractId(valueString));\n            return isPresent(value) ? value : valueString;\n        };\n        SelectControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectControlValueAccessor;\n    }());\n    /**\n     * @whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * @howToUse\n     *\n     * See docs for {@link SelectControlValueAccessor} for usage examples.\n     *\n     * @stable\n     */\n    var NgSelectOption = (function () {\n        function NgSelectOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (isPresent(this._select))\n                this.id = this._select._registerOption();\n        }\n        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._select._optionMap.set(this.id, value);\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n            set: function (value) {\n                this._setElementValue(value);\n                if (isPresent(this._select))\n                    this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        NgSelectOption.prototype.ngOnDestroy = function () {\n            if (isPresent(this._select)) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectOption;\n    }());\n\n    var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString$1(id, value) {\n        if (isBlank(id))\n            return \"\" + value;\n        if (typeof value === 'string')\n            value = \"'\" + value + \"'\";\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    function _extractId$1(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * The accessor for writing a value and listening to changes on a select element.\n     *\n     * @stable\n     */\n    var SelectMultipleControlValueAccessor = (function () {\n        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n            var _this = this;\n            this.value = value;\n            if (value == null)\n                return;\n            var values = value;\n            // convert values to ids\n            var ids = values.map(function (v) { return _this._getOptionId(v); });\n            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (_) {\n                var selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    var options = _.selectedOptions;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        var val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                else {\n                    var options = _.options;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        if (opt.selected) {\n                            var val = _this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                fn(selected);\n            };\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n            var id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var opt = this._optionMap.get(_extractId$1(valueString));\n            return isPresent(opt) ? opt._value : valueString;\n        };\n        SelectMultipleControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectMultipleControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectMultipleControlValueAccessor;\n    }());\n    /**\n     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * ### Example\n     *\n     * ```\n     * <select multiple name=\"city\" ngModel>\n     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n     * </select>\n     * ```\n     */\n    var NgSelectMultipleOption = (function () {\n        function NgSelectMultipleOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (isPresent(this._select)) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n            set: function (value) {\n                if (isPresent(this._select)) {\n                    this._value = value;\n                    this._setElementValue(_buildValueString$1(this.id, value));\n                    this._select.writeValue(this._select.value);\n                }\n                else {\n                    this._setElementValue(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /** @internal */\n        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n        };\n        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n            if (isPresent(this._select)) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectMultipleOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectMultipleOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectMultipleOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectMultipleOption;\n    }());\n\n    function controlPath(name, parent) {\n        return parent.path.concat([name]);\n    }\n    function setUpControl(control, dir) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n        dir.valueAccessor.writeValue(control.value);\n        // view -> model\n        dir.valueAccessor.registerOnChange(function (newValue) {\n            dir.viewToModelUpdate(newValue);\n            control.markAsDirty();\n            control.setValue(newValue, { emitModelToViewChange: false });\n        });\n        // touched\n        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n        control.registerOnChange(function (newValue, emitModelEvent) {\n            // control -> view\n            dir.valueAccessor.writeValue(newValue);\n            // control -> ngModel\n            if (emitModelEvent)\n                dir.viewToModelUpdate(newValue);\n        });\n        if (dir.valueAccessor.setDisabledState) {\n            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n        }\n        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n    }\n    function cleanUpControl(control, dir) {\n        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n        dir._rawValidators.forEach(function (validator) { return validator.registerOnValidatorChange(null); });\n        dir._rawAsyncValidators.forEach(function (validator) { return validator.registerOnValidatorChange(null); });\n        if (control)\n            control._clearChangeFns();\n    }\n    function setUpFormContainer(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    }\n    function _noControlError(dir) {\n        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n    }\n    function _throwError(dir, message) {\n        var messageEnd;\n        if (dir.path.length > 1) {\n            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n        }\n        else if (dir.path[0]) {\n            messageEnd = \"name: '\" + dir.path + \"'\";\n        }\n        else {\n            messageEnd = 'unspecified name attribute';\n        }\n        throw new Error(message + \" \" + messageEnd);\n    }\n    function composeValidators(validators) {\n        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n    }\n    function composeAsyncValidators(validators) {\n        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n            null;\n    }\n    function isPropertyUpdated(changes, viewModel) {\n        if (!changes.hasOwnProperty('model'))\n            return false;\n        var change = changes['model'];\n        if (change.isFirstChange())\n            return true;\n        return !looseIdentical(viewModel, change.currentValue);\n    }\n    var BUILTIN_ACCESSORS = [\n        CheckboxControlValueAccessor,\n        NumberValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n    ];\n    function isBuiltInAccessor(valueAccessor) {\n        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n    }\n    // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n    function selectValueAccessor(dir, valueAccessors) {\n        if (!valueAccessors)\n            return null;\n        var defaultAccessor;\n        var builtinAccessor;\n        var customAccessor;\n        valueAccessors.forEach(function (v) {\n            if (v.constructor === DefaultValueAccessor) {\n                defaultAccessor = v;\n            }\n            else if (isBuiltInAccessor(v)) {\n                if (builtinAccessor)\n                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n                builtinAccessor = v;\n            }\n            else {\n                if (customAccessor)\n                    _throwError(dir, 'More than one custom value accessor matches form control with');\n                customAccessor = v;\n            }\n        });\n        if (customAccessor)\n            return customAccessor;\n        if (builtinAccessor)\n            return builtinAccessor;\n        if (defaultAccessor)\n            return defaultAccessor;\n        _throwError(dir, 'No valid value accessor for form control with');\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n     *\n     * @stable\n     */\n    var AbstractFormGroupDirective = (function (_super) {\n        __extends(AbstractFormGroupDirective, _super);\n        function AbstractFormGroupDirective() {\n            _super.apply(this, arguments);\n        }\n        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        };\n        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        };\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n            /**\n             * Get the {@link FormGroup} backing this binding.\n             */\n            get: function () { return this.formDirective.getFormGroup(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n            /**\n             * Get the path to this control group.\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * Get the {@link Form} to which this group belongs.\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n        return AbstractFormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var AbstractControlStatus = (function () {\n        function AbstractControlStatus(cd) {\n            this._cd = cd;\n        }\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.untouched : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.touched : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.pristine : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.dirty : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.valid : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.invalid : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return AbstractControlStatus;\n    }());\n    var ngControlStatusHost = {\n        '[class.ng-untouched]': 'ngClassUntouched',\n        '[class.ng-touched]': 'ngClassTouched',\n        '[class.ng-pristine]': 'ngClassPristine',\n        '[class.ng-dirty]': 'ngClassDirty',\n        '[class.ng-valid]': 'ngClassValid',\n        '[class.ng-invalid]': 'ngClassInvalid'\n    };\n    /**\n     * Directive automatically applied to Angular form controls that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatus = (function (_super) {\n        __extends$3(NgControlStatus, _super);\n        function NgControlStatus(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatus.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n        ];\n        /** @nocollapse */\n        NgControlStatus.ctorParameters = [\n            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatus;\n    }(AbstractControlStatus));\n    /**\n     * Directive automatically applied to Angular form groups that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatusGroup = (function (_super) {\n        __extends$3(NgControlStatusGroup, _super);\n        function NgControlStatusGroup(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatusGroup.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                        host: ngControlStatusHost\n                    },] },\n        ];\n        /** @nocollapse */\n        NgControlStatusGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatusGroup;\n    }(AbstractControlStatus));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$5(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n     */\n    var VALID = 'VALID';\n    /**\n     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n     */\n    var INVALID = 'INVALID';\n    /**\n     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n     * errors are not yet available for the input value.\n     */\n    var PENDING = 'PENDING';\n    /**\n     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n     * calculations of validity or value.\n     */\n    var DISABLED = 'DISABLED';\n    function _find(control, path, delimiter) {\n        if (path == null)\n            return null;\n        if (!(path instanceof Array)) {\n            path = path.split(delimiter);\n        }\n        if (path instanceof Array && (path.length === 0))\n            return null;\n        return path.reduce(function (v, name) {\n            if (v instanceof FormGroup) {\n                return v.controls[name] || null;\n            }\n            if (v instanceof FormArray) {\n                return v.at(name) || null;\n            }\n            return null;\n        }, control);\n    }\n    function toObservable(r) {\n        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n    }\n    function coerceToValidator(validator) {\n        return Array.isArray(validator) ? composeValidators(validator) : validator;\n    }\n    function coerceToAsyncValidator(asyncValidator) {\n        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n    }\n    /**\n     * @whatItDoes This is the base class for {@link FormControl}, {@link FormGroup}, and\n     * {@link FormArray}.\n     *\n     * It provides some of the shared behavior that all controls and groups of controls have, like\n     * running validators, calculating status, and resetting state. It also defines the properties\n     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n     * instantiated directly.\n     *\n     * @stable\n     */\n    var AbstractControl = (function () {\n        function AbstractControl(validator, asyncValidator) {\n            this.validator = validator;\n            this.asyncValidator = asyncValidator;\n            /** @internal */\n            this._onCollectionChange = function () { };\n            this._pristine = true;\n            this._touched = false;\n            /** @internal */\n            this._onDisabledChange = [];\n        }\n        Object.defineProperty(AbstractControl.prototype, \"value\", {\n            /**\n             * The value of the control.\n             */\n            get: function () { return this._value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"status\", {\n            /**\n             * The validation status of the control. There are four possible\n             * validation statuses:\n             *\n             * * **VALID**:  control has passed all validation checks\n             * * **INVALID**: control has failed at least one validation check\n             * * **PENDING**: control is in the midst of conducting a validation check\n             * * **DISABLED**: control is exempt from validation checks\n             *\n             * These statuses are mutually exclusive, so a control cannot be\n             * both valid AND invalid or invalid AND disabled.\n             */\n            get: function () { return this._status; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n            /**\n             * A control is `valid` when its `status === VALID`.\n             *\n             * In order to have this status, the control must have passed all its\n             * validation checks.\n             */\n            get: function () { return this._status === VALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n            /**\n             * A control is `invalid` when its `status === INVALID`.\n             *\n             * In order to have this status, the control must have failed\n             * at least one of its validation checks.\n             */\n            get: function () { return this._status === INVALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n            /**\n             * A control is `pending` when its `status === PENDING`.\n             *\n             * In order to have this status, the control must be in the\n             * middle of conducting a validation check.\n             */\n            get: function () { return this._status == PENDING; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n            /**\n             * A control is `disabled` when its `status === DISABLED`.\n             *\n             * Disabled controls are exempt from validation checks and\n             * are not included in the aggregate value of their ancestor\n             * controls.\n             */\n            get: function () { return this._status === DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n            /**\n             * A control is `enabled` as long as its `status !== DISABLED`.\n             *\n             * In other words, it has a status of `VALID`, `INVALID`, or\n             * `PENDING`.\n             */\n            get: function () { return this._status !== DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n            /**\n             * Returns any errors generated by failing validation. If there\n             * are no errors, it will return null.\n             */\n            get: function () { return this._errors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n            /**\n             * A control is `pristine` if the user has not yet changed\n             * the value in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return this._pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n            /**\n             * A control is `dirty` if the user has changed the value\n             * in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return !this.pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n            /**\n            * A control is marked `touched` once the user has triggered\n            * a `blur` event on it.\n            */\n            get: function () { return this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n            /**\n             * A control is `untouched` if the user has not yet triggered\n             * a `blur` event on it.\n             */\n            get: function () { return !this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n            /**\n             * Emits an event every time the value of the control changes, in\n             * the UI or programmatically.\n             */\n            get: function () { return this._valueChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n            /**\n             * Emits an event every time the validation status of the control\n             * is re-calculated.\n             */\n            get: function () { return this._statusChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Sets the synchronous validators that are active on this control.  Calling\n         * this will overwrite any existing sync validators.\n         */\n        AbstractControl.prototype.setValidators = function (newValidator) {\n            this.validator = coerceToValidator(newValidator);\n        };\n        /**\n         * Sets the async validators that are active on this control. Calling this\n         * will overwrite any existing async validators.\n         */\n        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n            this.asyncValidator = coerceToAsyncValidator(newValidator);\n        };\n        /**\n         * Empties out the sync validator list.\n         */\n        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n        /**\n         * Empties out the async validator list.\n         */\n        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n        /**\n         * Marks the control as `touched`.\n         *\n         * This will also mark all direct ancestors as `touched` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = true;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `untouched`.\n         *\n         * If the control has any children, it will also mark all children as `untouched`\n         * to maintain the model, and re-calculate the `touched` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsUntouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = false;\n            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `dirty`.\n         *\n         * This will also mark all direct ancestors as `dirty` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsDirty = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = false;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsDirty({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pristine`.\n         *\n         * If the control has any children, it will also mark all children as `pristine`\n         * to maintain the model, and re-calculate the `pristine` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsPristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = true;\n            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pending`.\n         */\n        AbstractControl.prototype.markAsPending = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._status = PENDING;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsPending({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Disables the control. This means the control will be exempt from validation checks and\n         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n         *\n         * If the control has children, all children will be disabled to maintain the model.\n         */\n        AbstractControl.prototype.disable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = DISABLED;\n            this._errors = null;\n            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n            this._updateValue();\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n        };\n        /**\n         * Enables the control. This means the control will be included in validation checks and\n         * the aggregate value of its parent. Its status is re-calculated based on its value and\n         * its validators.\n         *\n         * If the control has children, all children will be enabled.\n         */\n        AbstractControl.prototype.enable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = VALID;\n            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n        };\n        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity();\n                this._parent._updatePristine();\n                this._parent._updateTouched();\n            }\n        };\n        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n        /**\n         * Re-calculates the value and validation status of the control.\n         *\n         * By default, it will also update the value and validity of its ancestors.\n         */\n        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._setInitialStatus();\n            this._updateValue();\n            if (this.enabled) {\n                this._errors = this._runValidator();\n                this._status = this._calculateStatus();\n                if (this._status === VALID || this._status === PENDING) {\n                    this._runAsyncValidator(emitEvent);\n                }\n            }\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTreeValidity = function (_a) {\n            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        };\n        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n        AbstractControl.prototype._runValidator = function () {\n            return this.validator ? this.validator(this) : null;\n        };\n        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n            var _this = this;\n            if (this.asyncValidator) {\n                this._status = PENDING;\n                this._cancelExistingSubscription();\n                var obs = toObservable(this.asyncValidator(this));\n                this._asyncValidationSubscription =\n                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n            }\n        };\n        AbstractControl.prototype._cancelExistingSubscription = function () {\n            if (this._asyncValidationSubscription) {\n                this._asyncValidationSubscription.unsubscribe();\n            }\n        };\n        /**\n         * Sets errors on a form control.\n         *\n         * This is used when validations are run manually by the user, rather than automatically.\n         *\n         * Calling `setErrors` will also update the validity of the parent control.\n         *\n         * ### Example\n         *\n         * ```\n         * const login = new FormControl(\"someLogin\");\n         * login.setErrors({\n         *   \"notUnique\": true\n         * });\n         *\n         * expect(login.valid).toEqual(false);\n         * expect(login.errors).toEqual({\"notUnique\": true});\n         *\n         * login.setValue(\"someOtherLogin\");\n         *\n         * expect(login.valid).toEqual(true);\n         * ```\n         */\n        AbstractControl.prototype.setErrors = function (errors, _a) {\n            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n            this._errors = errors;\n            this._updateControlsErrors(emitEvent !== false);\n        };\n        /**\n         * Retrieves a child control given the control's name or path.\n         *\n         * Paths can be passed in as an array or a string delimited by a dot.\n         *\n         * To get a control nested within a `person` sub-group:\n         *\n         * * `this.form.get('person.name');`\n         *\n         * -OR-\n         *\n         * * `this.form.get(['person', 'name']);`\n         */\n        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns null or undefined.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            var control = path ? this.get(path) : this;\n            return control && control._errors ? control._errors[errorCode] : null;\n        };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns false.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return !!this.getError(errorCode, path);\n        };\n        Object.defineProperty(AbstractControl.prototype, \"root\", {\n            /**\n             * Retrieves the top-level ancestor of this control.\n             */\n            get: function () {\n                var x = this;\n                while (x._parent) {\n                    x = x._parent;\n                }\n                return x;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n            this._status = this._calculateStatus();\n            if (emitEvent) {\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent) {\n                this._parent._updateControlsErrors(emitEvent);\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._initObservables = function () {\n            this._valueChanges = new EventEmitter();\n            this._statusChanges = new EventEmitter();\n        };\n        AbstractControl.prototype._calculateStatus = function () {\n            if (this._allControlsDisabled())\n                return DISABLED;\n            if (this._errors)\n                return INVALID;\n            if (this._anyControlsHaveStatus(PENDING))\n                return PENDING;\n            if (this._anyControlsHaveStatus(INVALID))\n                return INVALID;\n            return VALID;\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n            return this._anyControls(function (control) { return control.status === status; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsDirty = function () {\n            return this._anyControls(function (control) { return control.dirty; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsTouched = function () {\n            return this._anyControls(function (control) { return control.touched; });\n        };\n        /** @internal */\n        AbstractControl.prototype._updatePristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = !this._anyControlsDirty();\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = this._anyControlsTouched();\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._isBoxedValue = function (formState) {\n            return typeof formState === 'object' && formState !== null &&\n                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n        };\n        /** @internal */\n        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n        return AbstractControl;\n    }());\n    /**\n     * @whatItDoes Tracks the value and validation status of an individual form control.\n     *\n     * It is one of the three fundamental building blocks of Angular forms, along with\n     * {@link FormGroup} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormControl}, you can pass in an initial value as the\n     * first argument. Example:\n     *\n     * ```ts\n     * const ctrl = new FormControl('some value');\n     * console.log(ctrl.value);     // 'some value'\n     *```\n     *\n     * You can also initialize the control with a form state object on instantiation,\n     * which includes both the value and whether or not the control is disabled.\n     * You can't use the value key without the disabled key; both are required\n     * to use this way of initialization.\n     *\n     * ```ts\n     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n     * console.log(ctrl.value);     // 'n/a'\n     * console.log(ctrl.status);   // 'DISABLED'\n     * ```\n     *\n     * To include a sync validator (or an array of sync validators) with the control,\n     * pass it in as the second argument. Async validators are also supported, but\n     * have to be passed in separately as the third arg.\n     *\n     * ```ts\n     * const ctrl = new FormControl('', Validators.required);\n     * console.log(ctrl.value);     // ''\n     * console.log(ctrl.status);   // 'INVALID'\n     * ```\n     *\n     * See its superclass, {@link AbstractControl}, for more properties and methods.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormControl = (function (_super) {\n        __extends$6(FormControl, _super);\n        function FormControl(formState, validator, asyncValidator) {\n            if (formState === void 0) { formState = null; }\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n            /** @internal */\n            this._onChange = [];\n            this._applyFormState(formState);\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n            this._initObservables();\n        }\n        /**\n         * Set the value of the form control to `value`.\n         *\n         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n         * and not its parent component. This defaults to false.\n         *\n         * If `emitEvent` is `true`, this\n         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n         * to true (as it falls through to `updateValueAndValidity`).\n         *\n         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n         * specified.\n         *\n         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n         */\n        FormControl.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n            this._value = value;\n            if (this._onChange.length && emitModelToViewChange !== false) {\n                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n            }\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Patches the value of a control.\n         *\n         * This function is functionally the same as {@link FormControl.setValue} at this level.\n         * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n         * where it does behave differently.\n         */\n        FormControl.prototype.patchValue = function (value, options) {\n            if (options === void 0) { options = {}; }\n            this.setValue(value, options);\n        };\n        /**\n         * Resets the form control. This means by default:\n         *\n         * * it is marked as `pristine`\n         * * it is marked as `untouched`\n         * * value is set to null\n         *\n         * You can also reset to a specific form state by passing through a standalone\n         * value or a form state object that contains both a value and a disabled state\n         * (these are the only two properties that cannot be calculated).\n         *\n         * Ex:\n         *\n         * ```ts\n         * this.control.reset('Nancy');\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * ```\n         *\n         * OR\n         *\n         * ```\n         * this.control.reset({value: 'Nancy', disabled: true});\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * console.log(this.control.status);  // 'DISABLED'\n         * ```\n         */\n        FormControl.prototype.reset = function (formState, _a) {\n            if (formState === void 0) { formState = null; }\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._applyFormState(formState);\n            this.markAsPristine({ onlySelf: onlySelf });\n            this.markAsUntouched({ onlySelf: onlySelf });\n            this.setValue(this._value, { onlySelf: onlySelf });\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._updateValue = function () { };\n        /**\n         * @internal\n         */\n        FormControl.prototype._anyControls = function (condition) { return false; };\n        /**\n         * @internal\n         */\n        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n        /**\n         * Register a listener for change events.\n         */\n        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n        /**\n         * @internal\n         */\n        FormControl.prototype._clearChangeFns = function () {\n            this._onChange = [];\n            this._onDisabledChange = [];\n            this._onCollectionChange = function () { };\n        };\n        /**\n         * Register a listener for disabled events.\n         */\n        FormControl.prototype.registerOnDisabledChange = function (fn) {\n            this._onDisabledChange.push(fn);\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._forEachChild = function (cb) { };\n        FormControl.prototype._applyFormState = function (formState) {\n            if (this._isBoxedValue(formState)) {\n                this._value = formState.value;\n                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                    this.enable({ onlySelf: true, emitEvent: false });\n            }\n            else {\n                this._value = formState;\n            }\n        };\n        return FormControl;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of a group of {@link FormControl}\n     * instances.\n     *\n     * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n     * with each control name as the key.  It calculates its status by reducing the statuses\n     * of its children. For example, if one of the controls in a group is invalid, the entire\n     * group becomes invalid.\n     *\n     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n     * argument. The key for each child will be the name under which it is registered.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('Nancy', Validators.minLength(2)),\n     *   last: new FormControl('Drew'),\n     * });\n     *\n     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n     * console.log(form.status);  // 'VALID'\n     * ```\n     *\n     * You can also include group-level validators as the second arg, or group-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   password: new FormControl('', Validators.minLength(2)),\n     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n     * }, passwordMatchValidator);\n     *\n     *\n     * function passwordMatchValidator(g: FormGroup) {\n     *    return g.get('password').value === g.get('passwordConfirm').value\n     *       ? null : {'mismatch': true};\n     * }\n     * ```\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormGroup = (function (_super) {\n        __extends$6(FormGroup, _super);\n        function FormGroup(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Registers a control with the group's list of controls.\n         *\n         * This method does not update value or validity of the control, so for\n         * most cases you'll want to use {@link FormGroup.addControl} instead.\n         */\n        FormGroup.prototype.registerControl = function (name, control) {\n            if (this.controls[name])\n                return this.controls[name];\n            this.controls[name] = control;\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n            return control;\n        };\n        /**\n         * Add a control to this group.\n         */\n        FormGroup.prototype.addControl = function (name, control) {\n            this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove a control from this group.\n         */\n        FormGroup.prototype.removeControl = function (name) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormGroup.prototype.setControl = function (name, control) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            if (control)\n                this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Check whether there is an enabled control with the given name in the group.\n         *\n         * It will return false for disabled controls. If you'd like to check for\n         * existence in the group only, use {@link AbstractControl.get} instead.\n         */\n        FormGroup.prototype.contains = function (controlName) {\n            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n        };\n        /**\n         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n         *  the structure of the group, with control names as keys.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.setValue({first: 'Nancy', last: 'Drew'});\n         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n         *\n         *  ```\n         */\n        FormGroup.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._checkAllValuesPresent(value);\n            Object.keys(value).forEach(function (name) {\n                _this._throwIfControlMissing(name);\n                _this.controls[name].setValue(value[name], { onlySelf: true });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n        };\n        /**\n         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n         *  names as keys, and will do its best to match the values to the correct controls\n         *  in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.patchValue({first: 'Nancy'});\n         *  console.log(form.value);   // {first: 'Nancy', last: null}\n         *\n         *  ```\n         */\n        FormGroup.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            Object.keys(value).forEach(function (name) {\n                if (_this.controls[name]) {\n                    _this.controls[name].patchValue(value[name], { onlySelf: true });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n        };\n        /**\n         * Resets the {@link FormGroup}. This means by default:\n         *\n         * * The group and all descendants are marked `pristine`\n         * * The group and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in a map of states\n         * that matches the structure of your form, with control names as keys. The state\n         * can be a standalone value or a form state object with both a value and a disabled\n         * status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.form.reset({first: 'name', last: 'last name'});\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.form.reset({\n         *   first: {value: 'name', disabled: true},\n         *   last: 'last'\n         * });\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * console.log(this.form.get('first').status);  // 'DISABLED'\n         * ```\n         */\n        FormGroup.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = {}; }\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._forEachChild(function (control, name) {\n                control.reset(value[name], { onlySelf: true });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the {@link FormGroup}, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the group.\n         */\n        FormGroup.prototype.getRawValue = function () {\n            return this._reduceChildren({}, function (acc, control, name) {\n                acc[name] = control.value;\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._throwIfControlMissing = function (name) {\n            if (!Object.keys(this.controls).length) {\n                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.controls[name]) {\n                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n            }\n        };\n        /** @internal */\n        FormGroup.prototype._forEachChild = function (cb) {\n            var _this = this;\n            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n        };\n        /** @internal */\n        FormGroup.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) {\n                control.setParent(_this);\n                control._registerOnCollectionChange(_this._onCollectionChange);\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n        /** @internal */\n        FormGroup.prototype._anyControls = function (condition) {\n            var _this = this;\n            var res = false;\n            this._forEachChild(function (control, name) {\n                res = res || (_this.contains(name) && condition(control));\n            });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._reduceValue = function () {\n            var _this = this;\n            return this._reduceChildren({}, function (acc, control, name) {\n                if (control.enabled || _this.disabled) {\n                    acc[name] = control.value;\n                }\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n            var res = initValue;\n            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n                var controlName = _a[_i];\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n            return Object.keys(this.controls).length > 0 || this.disabled;\n        };\n        /** @internal */\n        FormGroup.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, name) {\n                if (value[name] === undefined) {\n                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n                }\n            });\n        };\n        return FormGroup;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of an array of {@link FormControl}\n     * instances.\n     *\n     * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n     * It calculates its status by reducing the statuses of its children. For example, if one of\n     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n     *\n     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormGroup}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n     * argument.\n     *\n     * ### Example\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl('Nancy', Validators.minLength(2)),\n     *   new FormControl('Drew'),\n     * ]);\n     *\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * console.log(arr.status);  // 'VALID'\n     * ```\n     *\n     * You can also include array-level validators as the second arg, or array-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Adding or removing controls\n     *\n     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n     * as broken change detection.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormArray = (function (_super) {\n        __extends$6(FormArray, _super);\n        function FormArray(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Get the {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.at = function (index) { return this.controls[index]; };\n        /**\n         * Insert a new {@link AbstractControl} at the end of the array.\n         */\n        FormArray.prototype.push = function (control) {\n            this.controls.push(control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Insert a new {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.insert = function (index, control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove the control at the given `index` in the array.\n         */\n        FormArray.prototype.removeAt = function (index) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormArray.prototype.setControl = function (index, control) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            if (control) {\n                this.controls.splice(index, 0, control);\n                this._registerControl(control);\n            }\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        Object.defineProperty(FormArray.prototype, \"length\", {\n            /**\n             * Length of the control array.\n             */\n            get: function () { return this.controls.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n         *  the structure of the control.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.setValue(['Nancy', 'Drew']);\n         *  console.log(arr.value);   // ['Nancy', 'Drew']\n         *  ```\n         */\n        FormArray.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._checkAllValuesPresent(value);\n            value.forEach(function (newValue, index) {\n                _this._throwIfControlMissing(index);\n                _this.at(index).setValue(newValue, { onlySelf: true });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n        };\n        /**\n         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n         *  structure of the control, and will do its best to match the values to the correct\n         *  controls in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.patchValue(['Nancy']);\n         *  console.log(arr.value);   // ['Nancy', null]\n         *  ```\n         */\n        FormArray.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            value.forEach(function (newValue, index) {\n                if (_this.at(index)) {\n                    _this.at(index).patchValue(newValue, { onlySelf: true });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n        };\n        /**\n         * Resets the {@link FormArray}. This means by default:\n         *\n         * * The array and all descendants are marked `pristine`\n         * * The array and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in an array of states\n         * that matches the structure of the control. The state can be a standalone value\n         * or a form state object with both a value and a disabled status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.arr.reset(['name', 'last name']);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.arr.reset([\n         *   {value: 'name', disabled: true},\n         *   'last'\n         * ]);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * console.log(this.arr.get(0).status);  // 'DISABLED'\n         * ```\n         */\n        FormArray.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = []; }\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._forEachChild(function (control, index) {\n                control.reset(value[index], { onlySelf: true });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the array, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the array.\n         */\n        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n        /** @internal */\n        FormArray.prototype._throwIfControlMissing = function (index) {\n            if (!this.controls.length) {\n                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.at(index)) {\n                throw new Error(\"Cannot find form control at index \" + index);\n            }\n        };\n        /** @internal */\n        FormArray.prototype._forEachChild = function (cb) {\n            this.controls.forEach(function (control, index) { cb(control, index); });\n        };\n        /** @internal */\n        FormArray.prototype._updateValue = function () {\n            var _this = this;\n            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n        };\n        /** @internal */\n        FormArray.prototype._anyControls = function (condition) {\n            return this.controls.some(function (control) { return control.enabled && condition(control); });\n        };\n        /** @internal */\n        FormArray.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) { return _this._registerControl(control); });\n        };\n        /** @internal */\n        FormArray.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, i) {\n                if (value[i] === undefined) {\n                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n                }\n            });\n        };\n        /** @internal */\n        FormArray.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                if (control.enabled)\n                    return false;\n            }\n            return this.controls.length > 0 || this.disabled;\n        };\n        FormArray.prototype._registerControl = function (control) {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        };\n        return FormArray;\n    }(AbstractControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n    };\n    var resolvedPromise = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n     * to track aggregate form value and validation status.\n     *\n     * @howToUse\n     *\n     * As soon as you import the `FormsModule`, this directive becomes active by default on\n     * all `<form>` tags.  You don't need to add a special selector.\n     *\n     * You can export the directive into a local template variable using `ngForm` as the key\n     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n     * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n     * will give you access to the aggregate value and validity status of the form, as well as\n     * user interaction properties like `dirty` and `touched`.\n     *\n     * To register child controls with the form, you'll want to use {@link NgModel} with a\n     * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n     * sub-groups within the form.\n     *\n     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgForm = (function (_super) {\n        __extends$4(NgForm, _super);\n        function NgForm(validators, asyncValidators) {\n            _super.call(this);\n            this._submitted = false;\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        Object.defineProperty(NgForm.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"controls\", {\n            get: function () { return this.form.controls; },\n            enumerable: true,\n            configurable: true\n        });\n        NgForm.prototype.addControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                dir._control = container.registerControl(dir.name, dir.control);\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.removeControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (isPresent(container)) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.addFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                var group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.removeFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (isPresent(container)) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.updateModel = function (dir, value) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var ctrl = _this.form.get(dir.path);\n                ctrl.setValue(value);\n            });\n        };\n        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n        NgForm.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        NgForm.prototype.onReset = function () { this.resetForm(); };\n        NgForm.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        NgForm.prototype._findContainer = function (path) {\n            path.pop();\n            return path.length ? this.form.get(path) : this.form;\n        };\n        NgForm.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                        providers: [formDirectiveProvider],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        outputs: ['ngSubmit'],\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgForm.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        return NgForm;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Examples = {\n        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n    };\n\n    var TemplateDrivenErrors = (function () {\n        function TemplateDrivenErrors() {\n        }\n        TemplateDrivenErrors.modelParentException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n        };\n        TemplateDrivenErrors.formGroupNameException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        TemplateDrivenErrors.missingNameException = function () {\n            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n        };\n        TemplateDrivenErrors.modelGroupParentException = function () {\n            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        return TemplateDrivenErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var modelGroupProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n    };\n    /**\n     * @whatItDoes Creates and binds a {@link FormGroup} instance to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used as a child of {@link NgForm} (or in other words,\n     * within `<form>` tags).\n     *\n     * Use this directive if you'd like to create a sub-group within a form. This can\n     * come in handy if you want to validate a sub-group of your form separately from\n     * the rest of your form, or if some values in your domain model make more sense to\n     * consume together in a nested object.\n     *\n     * Pass in the name you'd like this sub-group to have and it will become the key\n     * for the sub-group in the form's full value. You can also export the directive into\n     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n     *\n     * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     * @stable\n     */\n    var NgModelGroup = (function (_super) {\n        __extends$8(NgModelGroup, _super);\n        function NgModelGroup(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        NgModelGroup.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        };\n        NgModelGroup.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n        ];\n        /** @nocollapse */\n        NgModelGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        NgModelGroup.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n        };\n        return NgModelGroup;\n    }(AbstractFormGroupDirective));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n    };\n    var resolvedPromise$1 = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a {@link FormControl} instance from a domain model and binds it\n     * to a form control element.\n     *\n     * The {@link FormControl} instance will track the value, user interaction, and\n     * validation status of the control and keep the view synced with the model. If used\n     * within a parent form, the directive will also register itself with the form as a child\n     * control.\n     *\n     * @howToUse\n     *\n     * This directive can be used by itself or as part of a larger form. All you need is the\n     * `ngModel` selector to activate it.\n     *\n     * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n     * the domain model in your class as well.\n     *\n     * If you wish to inspect the properties of the associated {@link FormControl} (like\n     * validity state), you can also export the directive into a local template variable using\n     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n     * will fall through to the control anyway, so you can access them directly. You can see a\n     * full list of properties directly available in {@link AbstractControlDirective}.\n     *\n     * The following is an example of a simple standalone control using `ngModel`:\n     *\n     * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n     *\n     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n     * so that the control can be registered with the parent form under that name.\n     *\n     * It's worth noting that in the context of a parent form, you often can skip one-way or\n     * two-way binding because the parent form will sync the value for you. You can access\n     * its properties by exporting it into a local template variable using `ngForm` (ex:\n     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n     *\n     * If you do need to populate initial values into your form, using a one-way binding for\n     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n     * than the domain model's value on submit.\n     *\n     * Take a look at an example of using `ngModel` within a form:\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * To see `ngModel` examples with different form control types, see:\n     *\n     * * Radio buttons: {@link RadioControlValueAccessor}\n     * * Selects: {@link SelectControlValueAccessor}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgModel = (function (_super) {\n        __extends$7(NgModel, _super);\n        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            /** @internal */\n            this._control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        NgModel.prototype.ngOnChanges = function (changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n        Object.defineProperty(NgModel.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"path\", {\n            get: function () {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModel.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        NgModel.prototype._setUpControl = function () {\n            this._isStandalone() ? this._setUpStandalone() :\n                this.formDirective.addControl(this);\n            this._registered = true;\n        };\n        NgModel.prototype._isStandalone = function () {\n            return !this._parent || (this.options && this.options.standalone);\n        };\n        NgModel.prototype._setUpStandalone = function () {\n            setUpControl(this._control, this);\n            this._control.updateValueAndValidity({ emitEvent: false });\n        };\n        NgModel.prototype._checkForErrors = function () {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        };\n        NgModel.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        };\n        NgModel.prototype._checkName = function () {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        };\n        NgModel.prototype._updateValue = function (value) {\n            var _this = this;\n            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n        };\n        NgModel.prototype._updateDisabled = function (changes) {\n            var _this = this;\n            var disabledValue = changes['isDisabled'].currentValue;\n            var isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(function () {\n                if (isDisabled && !_this.control.disabled) {\n                    _this.control.disable();\n                }\n                else if (!isDisabled && _this.control.disabled) {\n                    _this.control.enable();\n                }\n            });\n        };\n        NgModel.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n                        providers: [formControlBinding],\n                        exportAs: 'ngModel'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgModel.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        NgModel.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n        };\n        return NgModel;\n    }(NgControl));\n\n    var ReactiveErrors = (function () {\n        function ReactiveErrors() {\n        }\n        ReactiveErrors.controlParentException = function () {\n            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n        };\n        ReactiveErrors.ngModelGroupException = function () {\n            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n        };\n        ReactiveErrors.missingFormException = function () {\n            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n        };\n        ReactiveErrors.groupParentException = function () {\n            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n        };\n        ReactiveErrors.arrayParentException = function () {\n            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n        };\n        ReactiveErrors.disabledAttrWarning = function () {\n            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n        };\n        return ReactiveErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding$1 = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n    };\n    /**\n     * @whatItDoes Syncs a standalone {@link FormControl} instance to a form control element.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n     * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n     * {@link FormControlDirective}.\n     *\n     * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n     * it does not require that your {@link FormControl} instance be part of any parent\n     * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n     * exists above it.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormControl} instance. See a full list of available properties in\n     * {@link AbstractControl}.\n     *\n     * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n     * or you can set it programmatically later using {@link AbstractControl.setValue} or\n     * {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     *  @stable\n     */\n    var FormControlDirective = (function (_super) {\n        __extends$9(FormControlDirective, _super);\n        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this.update = new EventEmitter();\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.ngOnChanges = function (changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        FormControlDirective.prototype._isControlChanged = function (changes) {\n            return changes.hasOwnProperty('form');\n        };\n        FormControlDirective.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n        ];\n        /** @nocollapse */\n        FormControlDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlDirective;\n    }(NgControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider$1 = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n    };\n    /**\n     * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive accepts an existing {@link FormGroup} instance. It will then use this\n     * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n     * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n     * and {@link FormArrayName} directives.\n     *\n     * **Set value**: You can set the form's initial value when instantiating the\n     * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n     * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n     * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n     * re-calculated.\n     *\n     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormGroupDirective = (function (_super) {\n        __extends$11(FormGroupDirective, _super);\n        function FormGroupDirective(_validators, _asyncValidators) {\n            _super.call(this);\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            this._submitted = false;\n            this.directives = [];\n            this.form = null;\n            this.ngSubmit = new EventEmitter();\n        }\n        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        };\n        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        FormGroupDirective.prototype.addControl = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        };\n        FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n        FormGroupDirective.prototype.addFormGroup = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n        FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.addFormArray = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n        FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.updateModel = function (dir, value) {\n            var ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        };\n        FormGroupDirective.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n        FormGroupDirective.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        FormGroupDirective.prototype._updateDomValue = function () {\n            var _this = this;\n            this.directives.forEach(function (dir) {\n                var newCtrl = _this.form.get(dir.path);\n                if (dir._control !== newCtrl) {\n                    cleanUpControl(dir._control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir._control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype._updateRegistrations = function () {\n            var _this = this;\n            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(function () { });\n            this._oldForm = this.form;\n        };\n        FormGroupDirective.prototype._updateValidators = function () {\n            var sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        };\n        FormGroupDirective.prototype._checkFormPresent = function () {\n            if (!this.form) {\n                ReactiveErrors.missingFormException();\n            }\n        };\n        FormGroupDirective.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroup]',\n                        providers: [formDirectiveProvider$1],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        FormGroupDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n            'ngSubmit': [{ type: _angular_core.Output },],\n        };\n        return FormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formGroupNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormGroup} you want to link, and\n     * will look for a {@link FormGroup} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form groups can come in handy when you want to validate a sub-group of a\n     * form separately from the rest or when you'd like to group the values of certain\n     * controls into their own nested object.\n     *\n     * **Access the group**: You can access the associated {@link FormGroup} using the\n     * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n     *\n     * You can also access individual controls within the group using dot syntax.\n     * Ex: `this.form.get('name.first')`\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormGroup}, or you can set it programmatically later using\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormGroupName = (function (_super) {\n        __extends$12(FormGroupName, _super);\n        function FormGroupName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        FormGroupName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        };\n        FormGroupName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormGroupName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n        };\n        return FormGroupName;\n    }(AbstractFormGroupDirective));\n    var formArrayNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormArray} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormArray} you want to link, and\n     * will look for a {@link FormArray} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form arrays can come in handy when you have a group of form controls but\n     * you're not sure how many there will be. Form arrays allow you to create new\n     * form controls dynamically.\n     *\n     * **Access the array**: You can access the associated {@link FormArray} using the\n     * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n     * Ex: `this.form.get('cities')`.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormArray}, or you can set the value programmatically later using the\n     * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n     * methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n     * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n     * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n     * status is re-calculated.\n     *\n     * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n     * calling its {@link FormArray.push} method.\n     *  Ex: `this.form.get('cities').push(new FormControl());`\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormArrayName = (function (_super) {\n        __extends$12(FormArrayName, _super);\n        function FormArrayName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        FormArrayName.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        };\n        FormArrayName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        };\n        Object.defineProperty(FormArrayName.prototype, \"control\", {\n            get: function () { return this.formDirective.getFormArray(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n            get: function () {\n                return this._parent ? this._parent.formDirective : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        FormArrayName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        };\n        FormArrayName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormArrayName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormArrayName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n        };\n        return FormArrayName;\n    }(ControlContainer));\n    function _hasInvalidParent(parent) {\n        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n            !(parent instanceof FormArrayName);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var controlNameBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n    };\n    /**\n     * @whatItDoes  Syncs a {@link FormControl} in an existing {@link FormGroup} to a form control\n     * element by name.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the {@link FormControl} instance you want to\n     * link, and will look for a {@link FormControl} registered with that name in the\n     * closest {@link FormGroup} or {@link FormArray} above it.\n     *\n     * **Access the control**: You can access the {@link FormControl} associated with\n     * this directive by using the {@link AbstractControl.get} method.\n     * Ex: `this.form.get('first');`\n     *\n     * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n     * See a full list of available properties in {@link AbstractControl}.\n     *\n     *  **Set value**: You can set an initial value for the control when instantiating the\n     *  {@link FormControl}, or you can set it programmatically later using\n     *  {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * To see `formControlName` examples with different form control types, see:\n     *\n     * * Radio buttons: {@link RadioControlValueAccessor}\n     * * Selects: {@link SelectControlValueAccessor}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormControlName = (function (_super) {\n        __extends$10(FormControlName, _super);\n        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this._added = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype.ngOnChanges = function (changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        };\n        FormControlName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        };\n        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        Object.defineProperty(FormControlName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype._checkParentType = function () {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        };\n        FormControlName.prototype._setUpControl = function () {\n            this._checkParentType();\n            this._control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        };\n        FormControlName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n        ];\n        /** @nocollapse */\n        FormControlName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlName;\n    }(NgControl));\n\n    var REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `required` validator to any controls marked with the\n     * `required` attribute, via the {@link NG_VALIDATORS} binding.\n     *\n     * ### Example\n     *\n     * ```\n     * <input name=\"fullName\" ngModel required>\n     * ```\n     *\n     * @stable\n     */\n    var RequiredValidator = (function () {\n        function RequiredValidator() {\n        }\n        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n            get: function () { return this._required; },\n            set: function (value) {\n                this._required = isPresent(value) && \"\" + value !== 'false';\n                if (this._onChange)\n                    this._onChange();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.required(c) : null;\n        };\n        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        RequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n                        providers: [REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        RequiredValidator.ctorParameters = [];\n        RequiredValidator.propDecorators = {\n            'required': [{ type: _angular_core.Input },],\n        };\n        return RequiredValidator;\n    }());\n    /**\n     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='min'}\n     */\n    var MIN_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n     *\n     * @stable\n     */\n    var MinLengthValidator = (function () {\n        function MinLengthValidator() {\n        }\n        MinLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n        };\n        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n            if (changes['minlength']) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MinLengthValidator.prototype.validate = function (c) {\n            return isPresent(this.minlength) ? this._validator(c) : null;\n        };\n        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MinLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                        providers: [MIN_LENGTH_VALIDATOR],\n                        host: { '[attr.minlength]': 'minlength? minlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MinLengthValidator.ctorParameters = [];\n        MinLengthValidator.propDecorators = {\n            'minlength': [{ type: _angular_core.Input },],\n        };\n        return MinLengthValidator;\n    }());\n    /**\n     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='max'}\n     */\n    var MAX_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n     * `formControl`,\n     * or control with `ngModel` that also has a `maxlength` attribute.\n     *\n     * @stable\n     */\n    var MaxLengthValidator = (function () {\n        function MaxLengthValidator() {\n        }\n        MaxLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n        };\n        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n            if (changes['maxlength']) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MaxLengthValidator.prototype.validate = function (c) {\n            return isPresent(this.maxlength) ? this._validator(c) : null;\n        };\n        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MaxLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                        providers: [MAX_LENGTH_VALIDATOR],\n                        host: { '[attr.maxlength]': 'maxlength? maxlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MaxLengthValidator.ctorParameters = [];\n        MaxLengthValidator.propDecorators = {\n            'maxlength': [{ type: _angular_core.Input },],\n        };\n        return MaxLengthValidator;\n    }());\n    var PATTERN_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `pattern` validator to any controls marked with the\n     * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n     * as the regex to validate Control value against.  Follows pattern attribute\n     * semantics; i.e. regex must match entire Control value.\n     *\n     * ### Example\n     *\n     * ```\n     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n     * ```\n     * @stable\n     */\n    var PatternValidator = (function () {\n        function PatternValidator() {\n        }\n        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n        PatternValidator.prototype.ngOnChanges = function (changes) {\n            if (changes['pattern']) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        PatternValidator.prototype.validate = function (c) {\n            return isPresent(this.pattern) ? this._validator(c) : null;\n        };\n        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        PatternValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                        providers: [PATTERN_VALIDATOR],\n                        host: { '[attr.pattern]': 'pattern? pattern : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        PatternValidator.ctorParameters = [];\n        PatternValidator.propDecorators = {\n            'pattern': [{ type: _angular_core.Input },],\n        };\n        return PatternValidator;\n    }());\n\n    /**\n     * @whatItDoes Creates an {@link AbstractControl} from a user-specified configuration.\n     *\n     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n     * forms.\n     *\n     * @howToUse\n     *\n     * To use, inject `FormBuilder` into your component class. You can then call its methods\n     * directly.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  * **NgModule**: {@link ReactiveFormsModule}\n     *\n     * @stable\n     */\n    var FormBuilder = (function () {\n        function FormBuilder() {\n        }\n        /**\n         * Construct a new {@link FormGroup} with the given map of configuration.\n         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n         *\n         * See the {@link FormGroup} constructor for more details.\n         */\n        FormBuilder.prototype.group = function (controlsConfig, extra) {\n            if (extra === void 0) { extra = null; }\n            var controls = this._reduceControls(controlsConfig);\n            var validator = isPresent(extra) ? extra['validator'] : null;\n            var asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n            return new FormGroup(controls, validator, asyncValidator);\n        };\n        /**\n         * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n         * `asyncValidator`.\n         *\n         * `formState` can either be a standalone value for the form control or an object\n         * that contains both a value and a disabled status.\n         *\n         */\n        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            return new FormControl(formState, validator, asyncValidator);\n        };\n        /**\n         * Construct a {@link FormArray} from the given `controlsConfig` array of\n         * configuration, with the given optional `validator` and `asyncValidator`.\n         */\n        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n            var _this = this;\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n            return new FormArray(controls, validator, asyncValidator);\n        };\n        /** @internal */\n        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n            var _this = this;\n            var controls = {};\n            Object.keys(controlsConfig).forEach(function (controlName) {\n                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        };\n        /** @internal */\n        FormBuilder.prototype._createControl = function (controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                var value = controlConfig[0];\n                var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        };\n        FormBuilder.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        FormBuilder.ctorParameters = [];\n        return FormBuilder;\n    }());\n\n    var SHARED_FORM_DIRECTIVES = [\n        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n        CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator,\n        MinLengthValidator, MaxLengthValidator, PatternValidator\n    ];\n    var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n    var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n    /**\n     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n     */\n    var InternalFormsSharedModule = (function () {\n        function InternalFormsSharedModule() {\n        }\n        InternalFormsSharedModule.decorators = [\n            { type: _angular_core.NgModule, args: [{ declarations: SHARED_FORM_DIRECTIVES, exports: SHARED_FORM_DIRECTIVES },] },\n        ];\n        /** @nocollapse */\n        InternalFormsSharedModule.ctorParameters = [];\n        return InternalFormsSharedModule;\n    }());\n\n    /**\n     * The ng module for forms.\n     * @stable\n     */\n    var FormsModule = (function () {\n        function FormsModule() {\n        }\n        FormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                        providers: [RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        FormsModule.ctorParameters = [];\n        return FormsModule;\n    }());\n    /**\n     * The ng module for reactive forms.\n     * @stable\n     */\n    var ReactiveFormsModule = (function () {\n        function ReactiveFormsModule() {\n        }\n        ReactiveFormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                        providers: [FormBuilder, RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        ReactiveFormsModule.ctorParameters = [];\n        return ReactiveFormsModule;\n    }());\n\n    exports.AbstractControlDirective = AbstractControlDirective;\n    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n    exports.ControlContainer = ControlContainer;\n    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n    exports.DefaultValueAccessor = DefaultValueAccessor;\n    exports.NgControl = NgControl;\n    exports.NgControlStatus = NgControlStatus;\n    exports.NgControlStatusGroup = NgControlStatusGroup;\n    exports.NgForm = NgForm;\n    exports.NgModel = NgModel;\n    exports.NgModelGroup = NgModelGroup;\n    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n    exports.FormControlDirective = FormControlDirective;\n    exports.FormControlName = FormControlName;\n    exports.FormGroupDirective = FormGroupDirective;\n    exports.FormArrayName = FormArrayName;\n    exports.FormGroupName = FormGroupName;\n    exports.NgSelectOption = NgSelectOption;\n    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n    exports.MaxLengthValidator = MaxLengthValidator;\n    exports.MinLengthValidator = MinLengthValidator;\n    exports.PatternValidator = PatternValidator;\n    exports.RequiredValidator = RequiredValidator;\n    exports.FormBuilder = FormBuilder;\n    exports.AbstractControl = AbstractControl;\n    exports.FormArray = FormArray;\n    exports.FormControl = FormControl;\n    exports.FormGroup = FormGroup;\n    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n    exports.NG_VALIDATORS = NG_VALIDATORS;\n    exports.Validators = Validators;\n    exports.FormsModule = FormsModule;\n    exports.ReactiveFormsModule = ReactiveFormsModule;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/bundles/forms.umd.js\n// module id = 25\n// module chunks = 0","// app-routing.module.ts\n\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthService } from \"./auth.service\";\nimport { LoginComponent } from \"./login.component\";\nimport { GameSelectionComponent } from \"./game-selection.component\";\nimport { WaitingRoomComponent } from \"./waiting-room.component\";\nimport { InGameComponent } from \"./in-game.component\";\nimport { GameHistoryComponent} from \"./game-history.component\";\nimport { ProfileComponent } from \"./profile.component\";\nimport { OptionsComponent } from \"./options.component\";\nimport { AboutComponent } from \"./about.component\";\n\nconst routes: Routes = [\n\t{path: \"\", component: ProfileComponent, canActivate: [AuthService] },\n\t{path: \"login\", component: LoginComponent },\n\t{path: \"game-selection\", component: GameSelectionComponent, canActivate: [AuthService] },\n\t{path: \"waiting-room\", component: WaitingRoomComponent, canActivate: [AuthService] },\n\t{path: \"in-game\", component: InGameComponent, canActivate: [AuthService] },\n\t{path: \"game-history\", component: GameHistoryComponent, canActivate: [AuthService] },\n\t{path: \"profile\", component: ProfileComponent, canActivate: [AuthService] },\n\t{path: \"options\", component: OptionsComponent, canActivate: [AuthService] },\n\t{path: \"about\", component: AboutComponent}\n];\n\n@NgModule({\n\timports: [ RouterModule.forRoot(routes) ],\n\texports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n\tconstructor(private authService: AuthService) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/app-routing.module.ts","import { Injectable } from \"@angular/core\";\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot, Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthService implements CanActivate {\n\tconstructor(private router: Router) { }\n\n\tpublic user = undefined;\n\n\tpublic canActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): boolean {\n\t\tif (this.user === undefined) {\n\t\t\tthis.router.navigate([\"login\"]);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/auth.service.ts","import { Component } from \"@angular/core\";\nimport { AuthService } from \"./auth.service\";\nimport { Router } from \"@angular/router\";\nimport { ApiService } from \"./api.service\";\n\n@Component({\n\n\ttemplate: `\n\t\t<div>\n\t\t\t<h2 *ngIf=\"register\">Username: <span class=\"error\" *ngIf=\"error\">{{error}}</span></h2>\n\t\t\t<input type=\"text\" [(ngModel)]=\"loginUser.username\" placeholder=\"Username\" *ngIf=\"register\">\n\t\t\t<h3 class=\"error\" *ngIf=\"error\">{{error}}</h3>\n\t\t\t<h2>Email: </h2>\n\t\t\t<input type=\"text\" [(ngModel)]=\"loginUser.email\" placeholder=\"Email\">\n\n\t\t\t<h2>Password: </h2>\n\t\t\t<input type=\"password\" [(ngModel)]=\"loginUser.password\" placeholder=\"Password\">\n\n\t\t\t<h2 *ngIf=\"register\">Re-enter Password: </h2>\n\t\t\t<input type=\"password\" [(ngModel)]=\"password\" placeholder=\"Password\" *ngIf=\"register\">\n\t\t\t<h3 class=\"error\" *ngIf=\"register && !passwordVerify()\">{{registerError}}</h3>\n\n\t\t\t<div>\n\t\t\t\t<div class=\"button\" (click)=\"sendLogin()\" *ngIf=\"!register\">\n\t\t\t\t\t<p class=\"inside-button\">Login</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"button\" (click)=\"sendRegistration()\" *ngIf=\"register\">\n\t\t\t\t\t<p class=\"inside-button\">Register</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"button\" (click)=\"newUser()\" *ngIf=\"register\">\n\t\t\t\t\t<p class=\"inside-button\">Login</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"button\" (click)=\"newUser()\" *ngIf=\"!register\">\n\t\t\t\t\t<p class=\"inside-button\">Create New User</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"button\" (click)=\"about()\">\n\t\t\t<p class=\"inside-button\">About</p>\n\t\t</div>\n\t`,\n\tstyles: [`\n\t\tdiv.button: {\n\t\t\twidth: 49%;\n\t\t\tbackground-color: #505BFF;\n\t\t\tborder: none;\n\t\t\tbox-sizing: border-box;\n\t\t\tfloat: left;\n\t\t}\n\t`]\n})\nexport class LoginComponent {\n\tconstructor(\n\t\tprivate authService: AuthService,\n\t\tprivate router: Router,\n\t\tprivate apiService: ApiService\n\t) { }\n\n\tregister: boolean = false;\n\ttest: string = \"\";\n\tprivate loginUser = {\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\"\n\t};\n\tpassword: string = \"\";\n\tregisterError: string = \"Passwords must match and be atleast 8 characters\";\n\n\tprivate error: string = \"\";\n\n\tprivate newUser() {\n\t\tthis.register = !this.register;\n\t};\n\n\tprivate sendRegistration() {\n\t\tif (this.passwordVerify()) {\n\t\t\tthis.apiService.postObs(\"/api/signup\", this.loginUser).subscribe((res) => {\n\t\t\t\tif (res.error) {\n\t\t\t\t\tthis.error = res.message;\n\t\t\t\t} else if (res.user) {\n\t\t\t\t\tthis.authService.user = res.user;\n\t\t\t\t\tthis.router.navigate([\"/\"]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tprivate passwordVerify() {\n\t\tif (this.password === this.loginUser.password && this.password.length >= 8) {\n\t\t\treturn true;\n\t\t} return false;\n\t}\n\n\tprivate sendLogin() {\n\t\tthis.apiService.postObs(\"/api/login\", this.loginUser).subscribe((res) => {\n\t\t\tif (res.loggedIn) {\n\t\t\t\tthis.authService.user = res.userData[0];\n\t\t\t\tthis.router.navigate([\"/profile\"]);\n\t\t\t} else if (res.error) {\n\t\t\t\tthis.error = res.message;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate about() {\n\t\tthis.router.navigate([\"/about\"]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/login.component.ts","// All services are decorated with the @Injectable decorator\nimport { Injectable } from \"@angular/core\";\n\n// Import the HTTP libraries from the angular http folder\nimport { Http, Headers, Response } from \"@angular/http\";\n\n\n// Import async functionality from the rxjs (\"reactive js\") library, which\n// angular 2 uses to manage async requests.\nimport { Observable } from \"rxjs/Observable\";\nimport \"rxjs/Rx\";\nimport \"rxjs/add/observable/throw\";\n\n// Decorate our ApiService as Injectable (service)\n@Injectable()\nexport class ApiService {\n\t// We have different headers for post and get. For post, we are sending\n\t// content and need a \"content-type\" header\n\tprivate postHeaders: Headers = new Headers({\n\t\t\"Content-Type\": \"application/json\",\n\t\t\"Accept\": \"application/json\"\n\t});\n\n\t// GET requests do not send any content, and just accept the JSON returned\n\tprivate getHeaders: Headers = new Headers({\n\t\t\"Accept\": \"application/json\"\n\t});\n\n\t// This is the url of our server. We'll need to update this if our server\n\t// moves\n\tprivate url: string = document.location.origin;\n\n\t// An empty constructor, but we inject the Http provider into our class here\n\tconstructor(private http: Http) { }\n\n\t// A helper function which returns an object version of the response JSON\n\tprivate getJSON(response: Response) {\n\t\treturn response.json();\n\t}\n\n\t// A helper function which checks if our response was actually an error,\n\t// and throws an error in that case. We could leverage this function to\n\t// show a nice error message to the user instead.\n\tprivate checkForError(response: Response) {\n\t\tif (response.status >= 200 && response.status < 300) {\n\t\t\treturn response;\n\t\t} else {\n\t\t\tlet error = new Error(response.statusText);\n\t\t\terror['response'] = response;\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t// Perform a GET request to the server on path `path`.\n\t// IMPORTANT: This function actually returns an Observable object. This\n\t// Observable doesn't do anything until we subscribe to it, at which point\n\t// it performs the action and calls any attached callback functions.\n\tgetObs(path: string): Observable<any> {\n\t\treturn this.http.get(\n\t\t\tthis.url + path,\n\t\t\t{headers: this.getHeaders}\n\t\t)\n\t\t// check the observable response for errors\n\t\t.map(this.checkForError)\n\t\t// if there is an error, throw that error\n\t\t.catch((err) => Observable.throw(err))\n\t\t// otherwise, return an object representation of the returned JSON\n\t\t.map(this.getJSON);\n\t}\n\n\t// See get() for details - this is the same, but performs a POST with a body\n\tpostObs(path: string, data: any): Observable<any> {\n\t\treturn this.http.post(\n\t\t\tthis.url + path,\n\t\t\tdata,\n\t\t\t{headers: this.getHeaders}\n\t\t)\n\t\t.map(this.checkForError)\n\t\t.catch((err) => Observable.throw(err))\n\t\t.map(this.getJSON);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/api.service.ts","import { Component } from '@angular/core';\nimport { ApiService } from \"./api.service\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"start\">\n\t\t\t<h2>Create or Join a Game</h2>\n\t\t\t<input type=\"text\" placeholder=\"Username of Game Admin\" [(ngModel)]=\"gameId\">\n\t\t\t<div (click)=\"joinGame()\" class=\"button\">\n\t\t\t\t<p class=\"inside-button\">Join Game</p>\n\t\t\t</div>\n\t\t\t<div (click)=\"createGame()\" class=\"button\">\n\t\t\t\t<p class=\"inside-button\">Create Game</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngIf=\"gameCreated\">\n\t\t\t<h2>New Game Created</h2>\n\t\t\t<p class=\"styled\">Your friends can join your game by entering your username in the join game field.</p>\n\t\t\t<button class=\"button\" (click)=\"enterGame()\">Enter Waiting Room</button>\n\t\t</div>\n\t\t<div *ngIf=\"gameJoined\">\n\t\t\t<h2>{{gameId}}'s game joined successfully!!!</h2>\n\t\t\t<button class=\"button\" (click)=\"enterGame()\">Enter Waiting Room</button>\n\t\t</div>\n\t\t<div *ngIf=\"error\">\n\t\t\t<h3 class=\"error\">{{errorMessage}}</h3>\n\t\t</div>\n\t`,\n\tstyles: [`\n\n\t\th2 {\n\t\t\ttext-align: center;\n\t\t\tfont-family: sans-serif;\n\t\t\tcolor: #505BFF;\n\t\t\ttext-shadow: 0 0 20px rgb(73, 125, 232);\n\t\t}\n\n\t\tp.styled {\n\t\t\ttext-align: center;\n\t\t\tfont-family: sans-serif;\n\t\t\tcolor: #505BFF;\n\t\t\ttext-shadow: 0 0 20px rgb(73, 125, 232);\n\t\t}\n\n\t\tdiv.button {\n\t\t\twidth: 90%;\n\t\t\theight: 50px;\n\t\t\tmargin: 15px 15px 0px 15px;\n\t\t\tborder-radius: 5px;\n\t\t\tbackground-color: #505BFF;\n\t\t\t-moz-box-shadow: 0px 0px 20px rgb(73, 125, 232);\n\t\t\t-webkit-box-shadow: 0px 0px 20px rgb(73, 125, 232);\n\t\t\tbox-shadow: 0px 0px 20px rgb(73, 125, 232);\n\t\t}\n\n\t\tinput {\n\t\t\tfont-size: 20px;\n\t\t\tfont-family: sans-serif;\n\t\t\tcolor: black;\n\t\t\twidth: 90%;\n\t\t\theight: 50px;\n\t\t\tmargin: 15px 15px 0px 15px;\n\t\t\tborder-radius: 5px;\n\t\t\tbackground-color: #505BFF;\n\t\t\tborder: 0;\n\t\t\t-moz-box-shadow: 0px 0px 20px rgb(73, 125, 232);\n\t\t\t-webkit-box-shadow: 0px 0px 20px rgb(73, 125, 232);\n\t\t\tbox-shadow: 0px 0px 20px rgb(73, 125, 232);\n\t\t}\n\n\t\tp.inside-button {\n\t\t\tcolor: black;\n\t\t\ttext-align: center;\n\t\t\tvertical-align: middle;\n\t\t\tline-height: 50px;\n\t\t\tfont-size: 20px;\n\t\t\tfont-family: sans-serif;\n\t\t}\n\n\t`]\n})\nexport class GameSelectionComponent {\n\tconstructor(\n\t\tprivate apiService: ApiService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {}\n\n\tgameId: string;\n\tstart: boolean = true;\n\tgameCreated: boolean = false;\n\tgameJoined: boolean = false;\n\terror: boolean = false;\n\terrorMessage: string = \"\";\n\n\n\tcreateGame() {\n\t\tthis.apiService.postObs(\"/api/newGame\", {message: \"newgame\"}).subscribe((response) => {\n\t\t\tif (response.error) {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = response.message;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (response.gameId) {\n\t\t\t\tthis.error = false;\n\t\t\t\tthis.errorMessage = \"\";\n\t\t\t\tthis.gameCreated = true;\n\t\t\t\tthis.start = false;\n\t\t\t\tthis.gameId = response.gameId;\n\t\t\t\tthis.authService.user.currentGame = response.gameId;\n\t\t\t}\n\t\t});\n\t}\n\n\tjoinGame() {\n\t\tthis.apiService.postObs(\"/api/joinGame\", {message: \"joingame\", gameId: this.gameId}).subscribe((response) => {\n\t\t\tif (response.error) {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = response.message;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (response.success) {\n\t\t\t\tthis.error = false;\n\t\t\t\tthis.errorMessage = \"\";\n\t\t\t\tthis.start = false;\n\t\t\t\tthis.gameJoined = true;\n\t\t\t\tthis.authService.user.currentGame = response.gameId;\n\t\t\t} else {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = \"Error encountered, please try again.\";\n\t\t\t}\n\t\t});\n\t}\n\n\n\tenterGame() {\n\t\tthis.router.navigate([\"waiting-room\"]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/game-selection.component.ts","import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"./api.service\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\nimport { GeoService } from \"./geo.service\";\nimport * as io from \"socket.io-client\";\n\n@Component({\n\n\ttemplate: `\n\t\t<div *ngIf=\"gameAdmin\">\n\t\t\tNew players can not join once game has been launched.\n\t\t\t<div class=\"button\" (click)=\"launchGame()\">\n\t\t\t\t<p class=\"inside-button\">Launch Game</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngIf=\"!error\">\n\t\t\t<h2>Players: </h2>\n\t\t\t<ul>\n\t\t\t\t<li *ngFor=\"let player of players\">{{player}}</li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div *ngIf=\"error\">\n\t\t\t<h3 class=\"error\">{{errorMessage}}</h3>\n\t\t</div>\n\t`,\n})\nexport class WaitingRoomComponent implements OnInit {\n\tconstructor(\n\t\tprivate apiService: ApiService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService,\n\t\tprivate geoService: GeoService\n\t) {}\n\tsocket: any;\n\tgameAdmin: boolean;\n\tplayers: Array<string>;\n\tgameId: string = this.authService.user.currentGame;\n\terror: boolean = false;\n\terrorMessage: string = \"\";\n\n\tlaunchGame() {\n\t\tthis.apiService.postObs(\"/api/launch\",\n\t\t\t{\n\t\t\t\tmessage: \"launch game\",\n\t\t\t\tgameId: this.authService.user.currentGame\n\t\t\t},\n\t\t).subscribe((res) => {\n\t\t\tif (res.success) {\n\t\t\t\tthis.socket.emit(\"launch\", this.authService.user.currentGame);\n\t\t\t} else {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = res.message;\n\t\t\t}\n\t\t});\n\t};\n\n\tngOnInit() {\n\t\tthis.socket = io();\n\t\tthis.apiService.getObs(\"/api/game\").subscribe((response) => {\n\t\t\tif (response.error) {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = response.message;\n\t\t\t}\n\t\t\tthis.gameAdmin = response.gameAdmin;\n\t\t\tthis.players = response.players;\n\t\t\tlet toSend = {\n\t\t\t\tgameId: this.authService.user.currentGame,\n\t\t\t\tname: this.authService.user.name\n\t\t\t};\n\t\t\tthis.socket.emit(\"waiting\", toSend);\n\t\t});\n\t\tthis.geoService.postLocation();\n\t\tthis.socket.on(\"launch\", () => {\n\t\t\tthis.router.navigate([\"/in-game\"]);\n\t\t});\n\t\tthis.socket.on(\"update waiting\", (newPlayer) => {\n\t\t\tif (!this.players.includes(newPlayer)) {\n\t\t\t\tthis.players.push(newPlayer);\n\t\t\t}\n\t\t\tconsole.log(\"recived waiting update, newPlayer is: \", newPlayer);\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.socket.disconnect();\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/waiting-room.component.ts","import { Injectable } from \"@angular/core\";\nimport { ApiService } from \"./api.service\";\n\n@Injectable()\nexport class GeoService {\n\tconstructor(private apiService: ApiService) { }\n\n\tpostLocation() {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\tthis.postPositionSuccess.bind(this),\n\t\t\tthis.handlePositionError.bind(this),\n\t\t\tthis.positionOptions\n\t\t);\n\t}\n\n\tgetLocation(success, failure) {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\tsuccess,\n\t\t\tfailure,\n\t\t\tthis.positionOptions\n\t\t);\n\t}\n\n\tpostPositionSuccess(pos) {\n\t\tlet coor = pos.coords;\n\t\tlet time = pos.timestamp;\n\n\t\tlet data = {\n\t\t\tlocation: {\n\t\t\t\tlongitude: coor.longitude,\n\t\t\t\tlatitude: coor.latitude,\n\t\t\t\taccuracy: coor.accuracy,\n\t\t\t\ttimestamp: time\n\t\t\t}\n\t\t};\n\n\t\tthis.apiService.postObs(\"/api/location\", data).subscribe((res) => {\n\t\t\t// todo update this to actually tell the user something useful\n\t\t\tif (res.error) {\n\t\t\t\tconsole.log(res.message);\n\t\t\t}\n\t\t\tconsole.log(res.message);\n\t\t});\n\t}\n\n\tgetPositionSuccess(pos) {\n\t\tlet coor = pos.coords;\n\t\tlet time = pos.timestamp;\n\t\tconsole.log(time);\n\t\treturn\t{\n\t\t\t\t\tlongitude: coor.longitude,\n\t\t\t\t\tlatitude: coor.latitude,\n\t\t\t\t\taccuracy: coor.accuracy,\n\t\t\t\t\ttimestamp: time\n\t\t\t\t};\n\t}\n\n\thandlePositionError(err) {\n\t\tconsole.warn('ERROR(' + err.code + '): ' + err.message);\n\t}\n\n\tpositionOptions = {\n\t\tenableHighAccuracy: true,\n\t\ttimeout: 15000,\n\t\tmaximumAge: 1000\n\t};\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/geo.service.ts","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  } else if (opts && 'object' === typeof opts.query) {\n    opts.query = encodeQueryString(opts.query);\n  }\n  return io.socket(parsed.path, opts);\n}\n/**\n *  Helper method to parse query objects to string.\n * @param {object} query\n * @returns {string}\n */\nfunction encodeQueryString (obj) {\n  var str = [];\n  for (var p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  }\n  return str.join('&');\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/index.js\n// module id = 362\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/url.js\n// module id = 363\n// module chunks = 0","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseuri/index.js\n// module id = 364\n// module chunks = 0","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/browser.js\n// module id = 365\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/debug.js\n// module id = 366\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ms/index.js\n// module id = 367\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = json.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n};\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/index.js\n// module id = 368\n// module chunks = 0","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/json3/lib/json3.js\n// module id = 369\n// module chunks = 0","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 370\n// module chunks = 0","module.exports = __webpack_amd_options__;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 371\n// module chunks = 0","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/~/component-emitter/index.js\n// module id = 372\n// module chunks = 0","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/binary.js\n// module id = 373\n// module chunks = 0","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/isarray/index.js\n// module id = 374\n// module chunks = 0","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/is-buffer.js\n// module id = 375\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/manager.js\n// module id = 376\n// module chunks = 0","\nmodule.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/index.js\n// module id = 377\n// module chunks = 0","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/index.js\n// module id = 378\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/socket.js\n// module id = 379\n// module chunks = 0","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/index.js\n// module id = 380\n// module chunks = 0","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/xmlhttprequest.js\n// module id = 381\n// module chunks = 0","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-cors/index.js\n// module id = 382\n// module chunks = 0","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-xhr.js\n// module id = 383\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && this.port !== 443) ||\n     ('http' === schema && this.port !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling.js\n// module id = 384\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transport.js\n// module id = 385\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('wtf-8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data == 'string') {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data);\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/browser.js\n// module id = 386\n// module chunks = 0","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/keys.js\n// module id = 387\n// module chunks = 0","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/has-binary/index.js\n// module id = 388\n// module chunks = 0","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/arraybuffer.slice/index.js\n// module id = 390\n// module chunks = 0","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/after/index.js\n// module id = 391\n// module chunks = 0","/*! https://mths.be/wtf8 v1.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction wtf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte.\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read the first byte.\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid WTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction wtf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar wtf8 = {\n\t\t'version': '1.0.0',\n\t\t'encode': wtf8encode,\n\t\t'decode': wtf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn wtf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = wtf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in wtf8) {\n\t\t\t\thasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.wtf8 = wtf8;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/wtf-8/wtf-8.js\n// module id = 392\n// module chunks = 0","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-arraybuffer/lib/base64-arraybuffer.js\n// module id = 393\n// module chunks = 0","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/blob/index.js\n// module id = 394\n// module chunks = 0","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseqs/index.js\n// module id = 396\n// module chunks = 0","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-inherit/index.js\n// module id = 397\n// module chunks = 0","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/yeast/index.js\n// module id = 398\n// module chunks = 0","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-jsonp.js\n// module id = 399\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  try {\n    WebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = void (0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  try {\n    this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && this.port !== 443) ||\n    ('ws' === schema && this.port !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/websocket.js\n// module id = 400\n// module chunks = 0","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/indexof/index.js\n// module id = 402\n// module chunks = 0","/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parsejson/index.js\n// module id = 403\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      this.packet({type: parser.CONNECT, query: this.query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/socket.js\n// module id = 404\n// module chunks = 0","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/component-emitter/index.js\n// module id = 405\n// module chunks = 0","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/to-array/index.js\n// module id = 406\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/on.js\n// module id = 407\n// module chunks = 0","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-bind/index.js\n// module id = 408\n// module chunks = 0","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-binary/index.js\n// module id = 409\n// module chunks = 0","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/backo2/index.js\n// module id = 411\n// module chunks = 0","import { Component } from \"@angular/core\";\nimport { AuthService } from \"./auth.service\";\nimport { ApiService } from \"./api.service\";\nimport { GeoService } from \"./geo.service\";\nimport * as io from \"socket.io-client\";\ndeclare let Compass: any;\n\n@Component({\n\ttemplate: `\n\t\t<div>\n\t\t\t<h2>Score: {{this.authService.user.score}}</h2>\n\t\t</div>\n\t\t<div *ngIf=\"!error\">\n\t\t\t<h2 [style.color]=\"online()\">Target: {{targetName}}</h2>\n\t\t\t<p *ngIf=\"targetOnline\">Target Aquired: {{distanceToTarget}} meters from you location.</p>\n\t\t\t<p *ngIf=\"!targetOnline\">Target Last seen {{distanceToTarget}} meters from your location.</p>\n\t\t</div>\n\t\t<div *ngIf=\"error\">\n\t\t\t<h2 class=\"error\">{{errorMessage}}</h2>\n\t\t</div>\n\n\t\t<div class=\"compassWrapper\" id=\"compassWrapper\" *ngIf=\"!error\">\n\t\t\t<div class=\"compassQuarter one\">\n\t\t\t\t<div class=\"compassSixty one\">\n\t\t\t\t\t<div class=\"compassThird one\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"compassQuarter two\">\n\t\t\t\t<div class=\"compassSixty two\">\n\t\t\t\t\t<div class=\"compassThird two\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"compassQuarter three\">\n\t\t\t\t<div class=\"compassSixty three\">\n\t\t\t\t\t<div class=\"compassThird three\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"compassQuarter four\">\n\t\t\t\t<div class=\"compassSixty four\">\n\t\t\t\t\t<div class=\"compassThird four\"></div>\n\t\t\t\t</div>\n\t\t\t\t<p class=\"north\">N</p>\n\t\t\t\t<div id=\"toDraw\"></div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<button *ngIf=\"!takingAim && !attacking && !error\" class=\"button bottom\" (click)=\"takeAim()\">Take Aim</button>\n\t\t<button *ngIf=\"takingAim && !attacking && !error\" class=\"button bottom\" (click)=\"attack()\">Attack</button>\n\t\t<div *ngIf=\"attacking\">\n\t\t\t<h2>{{attackMessage}}</h2>\n\t\t</div>\n\t\t<div *ngIf=\"!error && !attacking\">\n\t\t\t<h3 [style.color]=\"resolution()\">Accuracy: {{accuracy}} meters</h3>\n\t\t</div>\n\t`,\n\tstyles: [`\n\t\t.compassWrapper {\n\t\t\twidth: 80%;\n\t\t\tmargin: auto;\n\t\t\theight: 0;\n\t\t\tpadding-bottom: 80%;\n\t\t\tposition: relative;\n\t\t}\n\t\t.compassQuarter {\n\t\t\tfloat: left;\n\t\t\tposition: relative;\n\t\t\twidth: 50%;\n\t\t\theight: 0;\n\t\t\tpadding-bottom: 50%;\n\t\t\tbox-sizing: border-box;\n\t\t\tborder: 1px solid rgb(73, 125, 232);\n\t\t}\n\t\t.compassThird {\n\n\t\t\twidth: 50%;\n\t\t\theight: 0;\n\t\t\tpadding-bottom: 50%;\n\t\t\tposition: absolute;\n\n\t\t}\n\t\t.compassSixty {\n\n\t\t\twidth: 66%;\n\t\t\theight: 0;\n\t\t\tpadding-bottom: 66%;\n\t\t\tposition: absolute;\n\n\t\t}\n\t\t.north {\n\t\t\ttransform: rotate(90deg);\n\t\t\ttop: -1.5em;\n\t\t\tleft: 101%;\n\t\t\tposition: absolute;\n\t\t}\n\t\t.one {\n\n\t\t\tborder-radius: 100% 0 0 0;\n\t\t\t-moz-box-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t\t-webkit-box-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t\tbox-shadow: 0px 0px 7px rgb(73, 125, 232);\n\n\t\t}\n\t\t.one .compassSixty {\n\t\t\ttop: 33.4%;\n\t\t\tleft: 33.2%;\n\t\t\tborder-top: 1px solid rgb(73, 125, 232);\n\t\t\tborder-left: 1px solid rgb(73, 125, 232);\n\t\t}\n\t\t.one .compassThird {\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t\tborder-top: 1px solid rgb(73, 125, 232);\n\t\t\tborder-left: 1px solid rgb(73, 125, 232);\n\t\t}\n\n\t\t.two {\n\n\t\t\tborder-radius: 0 100% 0 0;\n\t\t\t-moz-box-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t\t-webkit-box-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t\tbox-shadow: 0px 0px 7px rgb(73, 125, 232);\n\n\t\t}\n\t\t.two .compassSixty {\n\t\t\ttop: 33.4%;\n\t\t\tborder-top: 1px solid rgb(73, 125, 232);\n\t\t\tborder-right: 1px solid rgb(73, 125, 232);\n\t\t}\n\t\t.two .compassThird {\n\t\t\ttop: 50%;\n\t\t\tborder-top: 1px solid rgb(73, 125, 232);\n\t\t\tborder-right: 1px solid rgb(73, 125, 232);\n\t\t}\n\t\t.three {\n\n\t\t\tborder-radius: 0 0 0 100%;\n\t\t\t-moz-box-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t\t-webkit-box-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t\tbox-shadow: 0px 0px 7px rgb(73, 125, 232);\n\n\t\t}\n\t\t.three .compassSixty {\n\t\t\tleft: 33.2%;\n\t\t\tborder-bottom: 1px solid rgb(73, 125, 232);\n\t\t\tborder-left: 1px solid rgb(73, 125, 232);\n\t\t}\n\t\t.three .compassThird {\n\t\t\tleft: 50%;\n\t\t\tborder-bottom: 1px solid rgb(73, 125, 232);\n\t\t\tborder-left: 1px solid rgb(73, 125, 232);\n\t\t}\n\t\t.four {\n\n\t\t\tborder-radius: 0 0 100% 0;\n\t\t\tborder-bottom: 1px solid rgb(73, 125, 232);\n\t\t\tborder-right: 1px solid rgb(73, 125, 232);\n\t\t\t-moz-box-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t\t-webkit-box-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t\tbox-shadow: 0px 0px 7px rgb(73, 125, 232);\n\t\t}\n\t\t#toDraw {\n\t\t\tbackground-color: rgb(68, 120, 227);\n\t\t\tposition: absolute;\n\t\t\theight: 6px;\n\t\t\twidth: 6px;\n\t\t\tborder-radius: 3px;\n\t\t\t-moz-box-shadow: 0px 0px 5px rgb(73, 125, 232);\n\t\t\t-webkit-box-shadow: 0px 0px 5px rgb(73, 125, 232);\n\t\t\tbox-shadow: 0px 0px 5px rgb(73, 125, 232);\n\t\t}\n\n\t`]\n})\nexport class InGameComponent {\n\tconstructor(\n\t\tprivate authService: AuthService,\n\t\tprivate apiService: ApiService,\n\t\tprivate geoService: GeoService\n\t) {\t}\n\n\ttakingAim: boolean;\n\tattacking: boolean = false;\n\tattackMessage: string;\n\terror: boolean = false;\n\terrorMessage: string;\n\n\tmyLong: number;\n\tmyLat: number;\n\tmyTime: number;\n\tmyAcc: number;\n\tmyHeading: number;\n\tcompass: any;\n\tcompassWatch: any;\n\n\ttargetName: string;\n\ttargetLong: number;\n\ttargetLat: number;\n\ttargetTime: number;\n\ttargetAcc: number;\n\ttargetLocation: any;\n\ttargetOnline: boolean = false;\n\n\tdistanceToTarget: number;\n\tdirectionToTarget: number;\n\taccuracy: number;\n\tbearing: number;\n\n\tlocationWatch: any;\n\tlocationInterval: any;\n\trapid: any;\n\tgameId: string = this.authService.user.currentGame;\n\tsocket: any;\n\n\tdataTest: any;\n\n\n\tngOnInit() {\n\n\t\tthis.geoService.getLocation(this.positionSuccess.bind(this), this.positionErr.bind(this));\n\t\tthis.locationWatch = navigator.geolocation.watchPosition(this.iMovedSuccess.bind(this));\n\t\tthis.locationInterval = setInterval(this.sendLocation.bind(this), 15000);\n\t\tthis.socket = io();\n\t\tthis.socket.on(\"target online\", (data) => {\n\t\t\tif (data) {\n\t\t\t\tthis.targetOnline = true;\n\t\t\t\tif (data.targetLat) {\n\t\t\t\t\tthis.targetLat = data.targetLat;\n\t\t\t\t\tthis.targetLong = data.targetLong;\n\t\t\t\t\tthis.targetAcc = data.targetAcc;\n\t\t\t\t\tthis.targetTime = data.targetTime;\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.targetOnline = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.socket.on(\"score\", (data) => {\n\t\t\tthis.authService.user.score = data;\n\t\t});\n\n\t\tthis.socket.on(\"being watched\", (data) => {\n\t\t\tthis.rapidEmit(data);\n\t\t\tconsole.log(\"you are being watched: \", data);\n\t\t});\n\n\t\tthis.socket.on(\"attack result\", (data) => {\n\t\t\tif (data) {\n\t\t\t\tthis.attackMessage = \"Target taken out. Awaiting info on next target...\";\n\t\t\t\tthis.nextTarget();\n\t\t\t} else {\n\t\t\t\tthis.attackMessage = \"Target missed... \";\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tthis.attacking = false;\n\t\t\t\t\tthis.attackMessage = \"\";\n\t\t\t\t}.bind(this), 15000);\n\t\t\t}\n\t\t});\n\n\t\tthis.socket.on(\"killed\", (data) => {\n\t\t\tclearInterval(this.locationInterval);\n\t\t\tthis.authService.user.currentGame = \"\";\n\t\t\tthis.authService.user.gameAdmin = false;\n\t\t\tthis.authService.user.inGame = false;\n\t\t\tthis.authService.user.currentTarget = \"\";\n\t\t\tthis.error = true;\n\t\t\tthis.errorMessage = \"You were killed by: \" + data;\n\t\t});\n\n\t\tthis.socket.on(\"end game\", (data) => {\n\t\t\tthis.attackMessage = \"\";\n\t\t\tthis.error = true;\n\t\t\tthis.errorMessage = \"Game Over. You were the last man standing!!!\";\n\t\t});\n\n\t};\n\n\tngAfterViewChecked() {\n\t\tthis.compass = document.getElementById(\"compassWrapper\");\n\t\tthis.compassWatch = Compass.watch(function (heading) {\n\t\t\tthis.compass.style.transform = \"rotate(\" + ((90 + heading) * -1) + \"deg)\";\n\t\t}.bind(this));\n\t\tCompass.noSupport(function () {\n\t\t\tthis.compass.style.transform = \"rotate(-90deg)\";\n\t\t}.bind(this));\n\t}\n\n\tngOnDestroy() {\n\t\tCompass.unwatch(this.compassWatch);\n\t\tthis.socket.disconnect();\n\t\tclearInterval(this.locationInterval);\n\t\tnavigator.geolocation.clearWatch(this.locationWatch);\n\t}\n\n\n\n// functions for styling text colors based on variables\n\tonline() {\n\t\tif (this.targetOnline) {\n\t\t\treturn \"green\";\n\t\t} return \"cornflowerblue\";\n\t}\n\tresolution() {\n\t\tif (this.accuracy > 100) {\n\t\t\treturn \"red\";\n\t\t} else if (this.accuracy > 50) {\n\t\t\treturn \"yellow\";\n\t\t} else {\n\t\t\treturn \"green\";\n\t\t}\n\t}\n\n// functions for practical uses\n\n\ttakeAim() {\n\t\tlet data = {\n\t\t\ttargetName: this.targetName,\n\t\t\ttrackerName: this.authService.user.name\n\t\t};\n\t\tthis.takingAim = true;\n\t\tthis.socket.emit(\"take aim\", data);\n\t\tconsole.log(\"take aim data: \", data);\n\t\tsetInterval(function() {\n\t\t\tif (this.takingAim) {\n\t\t\t\tthis.takingAim = false;\n\t\t\t\tthis.attacking = false;\n\t\t\t\tthis.attackMessage = \"\";\n\t\t\t}\n\t\t}.bind(this), 20000);\n\t}\n\n\tattack() {\n\t\tthis.attacking = true;\n\t\tthis.takingAim = false;\n\t\tthis.attackMessage = \"Confirming kill...\";\n\t\tlet data = {\n\t\t\tdistance: this.distanceToTarget,\n\t\t\taccuracy: this.accuracy,\n\t\t\ttargetName: this.targetName,\n\t\t\tgameId: this.authService.user.currentGame\n\t\t};\n\t\tthis.socket.emit(\"attack\", data);\n\t}\n\n\tnextTarget() {\n\t\tthis.apiService.getObs(\"/api/target\").subscribe((res) => {\n\t\t\tif (res.error) {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = res.message;\n\t\t\t\tif (res.targetName) {\n\t\t\t\t\tthis.targetName = res.targetName;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.attacking = false;\n\t\t\t\tthis.attackMessage = \"\";\n\t\t\t\tthis.targetName = res.targetName;\n\t\t\t\tthis.targetLat = res.latitude;\n\t\t\t\tthis.targetLong = res.longitude;\n\t\t\t\tthis.targetAcc = res.accuracy;\n\t\t\t\tthis.targetTime = res.timestamp;\n\t\t\t\tthis.update();\n\t\t\t\tlet joinData: any = {\n\t\t\t\t\tname: this.authService.user.name,\n\t\t\t\t\ttargetName: res.targetName,\n\t\t\t\t\tlat: this.myLat,\n\t\t\t\t\tlong: this.myLong,\n\t\t\t\t\ttime: this.myTime,\n\t\t\t\t\tacc: this.myAcc,\n\t\t\t\t\tscore: this.authService.user.score\n\t\t\t\t};\n\t\t\t\tthis.socket.emit(\"join\", joinData);\n\t\t\t}\n\t\t});\n\t}\n\n\trapidEmit(hunterName: string) {\n\t\tconsole.log(\"rapidEmit()\");\n\t\tthis.rapid = setInterval(function() {\n\t\t\tconsole.log(\"inside rapidEmit interval function\");\n\t\t\tlet data = {\n\t\t\t\ttrackerName: hunterName,\n\t\t\t\tlatitude: this.myLat,\n\t\t\t\tlongitude: this.myLong,\n\t\t\t\taccuracy: this.myAcc,\n\t\t\t\ttime: this.myTime\n\t\t\t};\n\t\t\tconsole.log(\"data inside rapidEmit interval funciton: \", data);\n\t\t\tthis.socket.emit(\"give aim\", data);\n\t\t}.bind(this), 1000);\n\t\tsetTimeout(function() {\n\t\t\tclearInterval(this.rapid);\n\t\t\tthis.takingAim = false;\n\t\t\tconsole.log(\"inside setTimeout function.\");\n\t\t}.bind(this), 15000);\n\t}\n\n\tsendLocation() {\n\t\tconsole.log(\"sendLocation()\");\n\t\tlet toSend = {\n\t\t\tgameId: this.gameId,\n\t\t\tlatitude: this.myLat,\n\t\t\tlongitude: this.myLong,\n\t\t\taccuracy: this.myAcc,\n\t\t\ttime: this.myTime,\n\t\t\tcurrentTarget: this.targetName\n\t\t};\n\t\tthis.socket.emit(\"update-location\", toSend);\n\t}\n\n\tpositionSuccess(pos) {\n\t\tlet coor = pos.coords;\n\t\tthis.myLong = coor.longitude;\n\t\tthis.myLat = coor.latitude;\n\t\tthis.myTime = pos.timestamp;\n\t\tthis.myAcc = coor.accuracy;\n\n\t\tthis.apiService.getObs(\"/api/target\").subscribe((res) => {\n\t\t\tif (res.error) {\n\t\t\t\tthis.error = true;\n\t\t\t\tthis.errorMessage = res.message;\n\t\t\t\tif (res.targetName) {\n\t\t\t\t\tthis.targetName = res.targetName;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.attacking = false;\n\t\t\t\tthis.attackMessage = \"\";\n\t\t\t\tthis.targetName = res.targetName;\n\t\t\t\tthis.targetLat = res.latitude;\n\t\t\t\tthis.targetLong = res.longitude;\n\t\t\t\tthis.targetAcc = res.accuracy;\n\t\t\t\tthis.targetTime = res.timestamp;\n\t\t\t\tthis.update();\n\t\t\t\tlet joinData: any = {\n\t\t\t\t\tname: this.authService.user.name,\n\t\t\t\t\ttargetName: res.targetName,\n\t\t\t\t\tlat: coor.latitude,\n\t\t\t\t\tlong: coor.longitude,\n\t\t\t\t\ttime: pos.timestamp,\n\t\t\t\t\tacc: coor.accuracy,\n\t\t\t\t\tscore: this.authService.user.score\n\t\t\t\t};\n\t\t\t\tthis.socket.emit(\"join\", joinData);\n\t\t\t\tthis.compass = document.getElementById(\"compassWrapper\");\n\t\t\t}\n\t\t});\n\n\t}\n\n\tpositionErr(err) {\n\t\tconsole.log(err);\n\t\tthis.error = true;\n\t\tthis.errorMessage = \"Unable to obtain your location, please make sure you have 'Location Services' turned on and try again.\";\n\t}\n\n\tiMovedSuccess(pos) {\n\t\tlet coor = pos.coords;\n\t\tthis.myLong = coor.longitude;\n\t\tthis.myLat = coor.latitude;\n\t\tthis.myTime = pos.timestamp;\n\t\tthis.myAcc = coor.accuracy;\n\t\tif (coor.heading) {\n\t\t\tthis.myHeading = coor.heading;\n\t\t}\n\t\tconsole.log(\"locationWatch: \", pos);\n\t\tthis.update();\n\t}\n\n\tupdate() {\n\t\tif (this.myLat && this.targetLat) {\n\t\t\tthis.distanceToTarget = Math.floor(this.getDistance(this.myLong, this.myLat, this.targetLong, this.targetLat));\n\t\t\tthis.accuracy = Math.floor(this.myAcc + this.targetAcc);\n\t\t\tthis.bearing = Math.floor(this.getBearing(this.myLong, this.myLat, this.targetLong, this.targetLat));\n\t\t\tlet toDraw = document.getElementById(\"toDraw\");\n\t\t\tlet toDrawX = Math.cos(this.rad(this.bearing)) * Math.min(this.distanceToTarget, 100);\n\t\t\tlet toDrawY = Math.sin(this.rad(this.bearing)) * Math.min(this.distanceToTarget, 100);\n\t\t\ttoDraw.style.left = toDrawX + \"%\";\n\t\t\ttoDraw.style.top = toDrawY + \"%\";\n\t\t}\n\t}\n\n\trad(x) {\n\t\treturn x * Math.PI / 180;\n\t};\n\tdeg(x) {\n\t\treturn x * (180 / Math.PI);\n\t};\n\n\tgetDistance(mLong, mLat, tLong, tLat) {\n\t\tvar R = 6378137; // Earth’s mean radius in meter\n\t\tvar dLat = this.rad(tLat - mLat);\n\t\tvar dLong = this.rad(tLong - mLong);\n\t\tvar a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t\t\tMath.cos(this.rad(mLat)) * Math.cos(this.rad(tLat)) *\n\t\t\tMath.sin(dLong / 2) * Math.sin(dLong / 2);\n\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t\tvar d = R * c;\n\t\treturn d; // returns the distance in meter\n\t};\n\n\tgetBearing(startLong, startLat, endLong, endLat) {\n\t\tstartLat = this.rad(startLat);\n\t\tstartLong = this.rad(startLong);\n\t\tendLat = this.rad(endLat);\n\t\tendLong = this.rad(endLong);\n\n\t\tvar dLong = endLong - startLong;\n\n\t\tvar dPhi = Math.log(Math.tan(endLat / 2.0 + Math.PI / 4.0) / Math.tan(startLat / 2.0 + Math.PI / 4.0));\n\t\tif (Math.abs(dLong) > Math.PI) {\n\t\t\tif (dLong > 0.0) {\n\t\t\t\tdLong = -(2.0 * Math.PI - dLong);\n\t\t\t} else {\n\t\t\t\tdLong = (2.0 * Math.PI + dLong);\n\t\t\t}\n\t\t}\n\n\t\treturn (this.deg(Math.atan2(dLong, dPhi)) + 360.0) % 360.0;\n\t}\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/in-game.component.ts","import { Component } from \"@angular/core\";\nimport { ApiService } from \"./api.service\";\nimport { IGame } from \"./IGame\";\n\n@Component({\n\ttemplate: `\n\t\t<div>\n\t\t\t<ul *ngFor=\"let game of games\">\n\t\t\t\t<li class=\"listHead\">Creator: {{game.creator}}</li>\n\t\t\t\t<li>Start Date: {{game.startDate}}</li>\n\t\t\t\t<li>End Date: {{game.endDate}}</li>\n\t\t\t\t<li>Last Man Standing: {{game.activePlayers[0]}}</li>\n\t\t\t\t<li>\n\t\t\t\t\tKills:\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li *ngFor=\"let kill of game.kills\">{{kill}}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t`,\n})\nexport class GameHistoryComponent {\n\tconstructor(\n\t\tprivate apiService: ApiService\n\t) { }\n\n\tgames: IGame[] = [];\n\tgameIds: any;\n\n\tngOnInit() {\n\t\tthis.apiService.getObs(\"/api/game-history\").subscribe((res) => {\n\t\t\tthis.gameIds = res.history;\n\t\t\tconsole.log(\"respose from /api/game-history\", res);\n\t\t\tfor (let i in this.gameIds) {\n\t\t\t\tlet toSend = {gameId: this.gameIds[i]};\n\t\t\t\tthis.apiService.postObs(\"/api/game-stats\", toSend).subscribe((res) => {\n\t\t\t\t\tthis.games.unshift(res.game);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/game-history.component.ts","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ApiService } from \"./api.service\";\nimport { AuthService } from \"./auth.service\";\n\n\n@Component({\n\ttemplate: `\n\t\t<h2>Welcome: {{this.authService.user.name}}</h2>\n\t\t<h3>Your Score: {{this.authService.user.score}}</h3>\n\t\t<div class=\"button\" (click)=\"gameSelect()\">\n\t\t\t<p class=\"inside-button\" *ngIf=\"this.authService.user.currentGame && this.authService.user.inGame\">Enter Game</p>\n\t\t\t<p class=\"inside-button\" *ngIf=\"this.authService.user.currentGame && !this.authService.user.inGame\">Enter Waiting Room</p>\n\t\t\t<p class=\"inside-button\" *ngIf=\"!this.authService.user.currentGame\">Join or Create Game</p>\n\t\t</div>\n\t\t<div class=\"button\" (click)=\"history()\">\n\t\t\t<p class=\"inside-button\">Game History</p>\n\t\t</div>\n\t\t<div class=\"button\" (click)=\"options()\">\n\t\t\t<p class=\"inside-button\">Options</p>\n\t\t</div>\n\t`,\n})\nexport class ProfileComponent {\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate apiService: ApiService,\n\t\tprivate authService: AuthService\n\t) { }\n\n\tngOnInit() {}\n\n\tgameSelect() {\n\t\tif (this.authService.user.inGame) {\n\t\t\tthis.router.navigate([\"/in-game\"]);\n\t\t} else if (this.authService.user.currentGame) {\n\t\t\tthis.router.navigate([\"/waiting-room\"]);\n\t\t} else {\n\t\t\tthis.router.navigate([\"/game-selection\"]);\n\t\t}\n\t}\n\n\thistory() {\n\t\tthis.router.navigate([\"/game-history\"]);\n\t}\n\n\toptions() {\n\t\tthis.router.navigate([\"/options\"]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/profile.component.ts","import { Component } from \"@angular/core\";\nimport { ApiService } from \"./api.service\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Component({\n\ttemplate: `\n\t\t<h2>Welcome: {{this.authService.user.name}}</h2>\n\t\t<div *ngIf=\"!selectionMade && !result\">\n\t\t\t<div class=\"button\" (click)=\"changePassword()\" *ngIf=\"!selectionMade\">\n\t\t\t\t<p class=\"inside-button\">Change Password</p>\n\t\t\t</div>\n\t\t\t<div class=\"button\" *ngIf=\"this.authService.user.currentGame\" (click)=\"leaveGame()\">\n\t\t\t\t<p class=\"inside-button\">Leave Current Game</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div *ngIf=\"selectionMade && !result\">\n\t\t\t<div *ngIf=\"displayChangePassword\">\n\t\t\t\t<input type=\"password\" [(ngModel)]=\"oldPassword\" placeholder=\"Old Password\">\n\t\t\t\t<input type=\"password\" [(ngModel)]=\"newPassword\" placeholder=\"New Password\">\n\t\t\t\t<input type=\"password\" [(ngModel)]=\"confirmPassword\" placeholder=\"Confirm New Password\">\n\t\t\t\t<h3 class=\"error\" *ngIf=\"!passwordVerify()\">Passwords must match and contain at least 8 characters</h3>\n\t\t\t\t<div class=\"button\" (click)=\"sendPassword()\">\n\t\t\t\t\t<p class=\"inside-button\">Change Password</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div *ngIf=\"displayLeaveGame\">\n\t\t\t\t<h3>Are you sure you want to leave your current game?</h3>\n\t\t\t\t<div class=\"button\" (click)=\"confirmLeaveGame()\">\n\t\t\t\t\t<p class=\"inside-button\">Yes</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"button\" (click)=\"displayOptions()\">\n\t\t\t\t\t<p class=\"inside-button\">No</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<div *ngIf=\"result\">\n\t\t\t<h3>{{resultMessage}}</h3>\n\t\t\t<div class=\"button\" (click)=\"displayOptions()\">\n\t\t\t\t<p class=\"inside-button\">Back to Options</p>\n\t\t\t</div>\n\t\t</div>\n\t`,\n})\nexport class OptionsComponent {\n\tconstructor(\n\t\tprivate apiService: ApiService,\n\t\tprivate authService: AuthService,\n\t\tprivate router: Router\n\t) { }\n\t// display variables and functions\n\tprivate selectionMade: boolean = false;\n\tprivate result: boolean = false;\n\tprivate resultMessage: string = \"\";\n\tprivate displayChangePassword: boolean = false;\n\tprivate displayLeaveGame: boolean = false;\n\tprivate displayOptions() {\n\t\tthis.selectionMade = false;\n\t\tthis.result = false;\n\t\tthis.resultMessage = \"\";\n\t\tthis.displayChangePassword = false;\n\t\tthis.displayLeaveGame = false;\n\t}\n\tprivate changePassword() {\n\t\tthis.selectionMade = true;\n\t\tthis.displayChangePassword = true;\n\t}\n\tprivate leaveGame() {\n\t\tthis.selectionMade = true;\n\t\tthis.displayLeaveGame = true;\n\t}\n\n\n\t// change password variables and functions\n\tprivate oldPassword: string = \"\";\n\tprivate newPassword: string = \"\";\n\tprivate confirmPassword: string = \"\";\n\tprivate passwordVerify() {\n\t\tif (this.newPassword === this.confirmPassword && this.newPassword.length >= 8) {\n\t\t\treturn true;\n\t\t} return false;\n\t}\n\tprivate sendPassword() {\n\t\tif (this.passwordVerify()) {\n\t\t\tlet toSend = {\n\t\t\t\toldPassword: this.oldPassword,\n\t\t\t\tnewPassword: this.newPassword\n\t\t\t};\n\t\t\tthis.apiService.postObs(\"/api/change-password\", toSend).subscribe((res) => {\n\t\t\t\tthis.result = true;\n\t\t\t\tthis.resultMessage = res.message;\n\t\t\t});\n\t\t}\n\t};\n\n\t// leave game variables and functions\n\tconfirmLeaveGame() {\n\t\tthis.apiService.postObs(\"/api/leave-game\", this.authService.user.currentGame).subscribe((res) => {\n\t\t\tthis.result = true;\n\t\t\tthis.resultMessage = res.message;\n\t\t\tif (res.message === \"Game Abandoned\") {\n\t\t\t\tthis.authService.user.currentGame = \"\";\n\t\t\t\tthis.authService.user.inGame = false;\n\t\t\t\tthis.authService.user.gameAdmin = false;\n\t\t\t\tthis.authService.user.currentTarget = \"\";\n\t\t\t}\n\t\t});\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/options.component.ts","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Component({\n\ttemplate: `\n\t\t<div>\n\t\t\t<h2>Welcome to Most Dangerous Game</h2>\n\t\t\t<h3>How it works:</h3>\n\t\t\t<p>A User creates a new private game and tells their friends to join the game. You can join a game by entering the username of the game creator and hitting \"Join Game\".</p>\n\t\t\t<p>You will then be able to enter the waiting room which is where you can see the names of the other players who have joined while waiting for the game admin to launch the game.</p>\n\t\t\t<p>Once the game has been launched each player will be assigned a random target from the player list. While you are online tracking your target your location is visible to the player tracking you.</p>\n\t\t\t<p>The closer you are to your target the more likely your attempt to take them out is to succeed.</p>\n\t\t\t<p>After you have taken out your target your score will increase and you will take over the target that player was tracking.</p>\n\t\t\t<p>The game ends when there is only one player left.</p>\n\t\t\t<p>In future implementations you will be able to trade in points from your score for temporary bonuses such as invisible tracking or increased attack range.</p>\n\t\t\t<p>If you have any feedback on how to improve the game please feel free to email the creator at foxinatardis@gmail.com</p>\n\n\t\t<div>\n\t\t<div class=\"button\" *ngIf=\"!this.authService.user\">\n\t\t\t<p class=\"inside-button\" (click)=\"toLogin()\">Login/Register</p>\n\t\t</div>\n\t`,\n})\nexport class AboutComponent {\n\tconstructor(\n\t\tprivate authService: AuthService,\n\t\tprivate router: Router\n\t) { }\n\n\ttoLogin() {\n\t\tthis.router.navigate([\"/login\"]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/about.component.ts","import { Component } from '@angular/core';\nimport { AuthService } from \"./auth.service\";\nimport { ApiService } from \"./api.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n\tselector: 'assassin',\n\ttemplate: `\n\t\t<nav>\n\t\t\t<div class=\"for-nav\" *ngIf=\"this.authService.user\" (click)=\"this.router.navigate(['/profile'])\">\n\t\t\t\t<p class=\"p-nav\">Profile</p>\n\t\t\t</div>\n\t\t\t<div class=\"for-nav\" (click)=\"logout()\" *ngIf=\"this.authService.user\">\n\t\t\t\t<p class=\"p-nav\">Logout</p>\n\t\t\t</div>\n\t\t</nav>\n\t\t<router-outlet></router-outlet>\n\t`,\n\n})\nexport class AppComponent {\n\tconstructor(\n\t\tprivate authService: AuthService,\n\t\tprivate apiService: ApiService,\n\t\tprivate router: Router\n\t) {}\n\n\tlogout() {\n\t\tthis.apiService.getObs(\"/logout\").subscribe((res) => {\n\t\t\tif (res.success) {\n\t\t\t\tdelete this.authService.user;\n\t\t\t\tthis.router.navigate([\"/login\"]);\n\t\t\t}\n\t\t});\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./app/app.component.ts"],"sourceRoot":""}